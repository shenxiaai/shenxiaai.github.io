{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"source/assets/images/img1.png","path":"assets/images/img1.png","modified":1,"renderable":0},{"_id":"source/assets/images/img10.jpg","path":"assets/images/img10.jpg","modified":1,"renderable":0},{"_id":"source/assets/images/img11.png","path":"assets/images/img11.png","modified":1,"renderable":0},{"_id":"source/assets/images/img12.jpg","path":"assets/images/img12.jpg","modified":1,"renderable":0},{"_id":"source/assets/images/img12.png","path":"assets/images/img12.png","modified":1,"renderable":0},{"_id":"source/assets/images/img13.jpg","path":"assets/images/img13.jpg","modified":1,"renderable":0},{"_id":"source/assets/images/img13.png","path":"assets/images/img13.png","modified":1,"renderable":0},{"_id":"source/assets/images/img15.jpg","path":"assets/images/img15.jpg","modified":1,"renderable":0},{"_id":"source/assets/images/img14.jpg","path":"assets/images/img14.jpg","modified":1,"renderable":0},{"_id":"source/assets/images/img17.jpg","path":"assets/images/img17.jpg","modified":1,"renderable":0},{"_id":"source/assets/images/img2.jpg","path":"assets/images/img2.jpg","modified":1,"renderable":0},{"_id":"source/assets/images/img19.jpg","path":"assets/images/img19.jpg","modified":1,"renderable":0},{"_id":"source/assets/images/img18.jpg","path":"assets/images/img18.jpg","modified":1,"renderable":0},{"_id":"source/assets/images/img20.jpg","path":"assets/images/img20.jpg","modified":1,"renderable":0},{"_id":"source/assets/images/img16.jpg","path":"assets/images/img16.jpg","modified":1,"renderable":0},{"_id":"source/assets/images/img21.jpg","path":"assets/images/img21.jpg","modified":1,"renderable":0},{"_id":"source/assets/images/img23.jpg","path":"assets/images/img23.jpg","modified":1,"renderable":0},{"_id":"source/assets/images/img24.jpg","path":"assets/images/img24.jpg","modified":1,"renderable":0},{"_id":"source/assets/images/img25.jpg","path":"assets/images/img25.jpg","modified":1,"renderable":0},{"_id":"source/assets/images/img26.jpg","path":"assets/images/img26.jpg","modified":1,"renderable":0},{"_id":"source/assets/images/img27.jpg","path":"assets/images/img27.jpg","modified":1,"renderable":0},{"_id":"source/assets/images/img29.jpg","path":"assets/images/img29.jpg","modified":1,"renderable":0},{"_id":"source/assets/images/img3.png","path":"assets/images/img3.png","modified":1,"renderable":0},{"_id":"source/assets/images/img30.jpg","path":"assets/images/img30.jpg","modified":1,"renderable":0},{"_id":"source/assets/images/img4.jpg","path":"assets/images/img4.jpg","modified":1,"renderable":0},{"_id":"source/assets/images/img5.jpg","path":"assets/images/img5.jpg","modified":1,"renderable":0},{"_id":"source/assets/images/img6.jpg","path":"assets/images/img6.jpg","modified":1,"renderable":0},{"_id":"source/assets/images/img6.png","path":"assets/images/img6.png","modified":1,"renderable":0},{"_id":"source/assets/images/img7.jpg","path":"assets/images/img7.jpg","modified":1,"renderable":0},{"_id":"source/assets/images/img7.png","path":"assets/images/img7.png","modified":1,"renderable":0},{"_id":"source/assets/images/img9.jpg","path":"assets/images/img9.jpg","modified":1,"renderable":0},{"_id":"source/assets/images/img9.png","path":"assets/images/img9.png","modified":1,"renderable":0},{"_id":"source/assets/images/alipay.jpg","path":"assets/images/alipay.jpg","modified":1,"renderable":0},{"_id":"source/assets/images/author_head.jpeg","path":"assets/images/author_head.jpeg","modified":1,"renderable":0},{"_id":"source/assets/images/img11.jpg","path":"assets/images/img11.jpg","modified":1,"renderable":0},{"_id":"source/assets/images/img2.png","path":"assets/images/img2.png","modified":1,"renderable":0},{"_id":"source/assets/images/img22.jpg","path":"assets/images/img22.jpg","modified":1,"renderable":0},{"_id":"source/assets/images/img28.jpg","path":"assets/images/img28.jpg","modified":1,"renderable":0},{"_id":"source/assets/images/img5.png","path":"assets/images/img5.png","modified":1,"renderable":0},{"_id":"source/assets/images/img8.png","path":"assets/images/img8.png","modified":1,"renderable":0},{"_id":"themes/landscape/source/css/fonts/icon.eot","path":"css/fonts/icon.eot","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/icon.svg","path":"css/fonts/icon.svg","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/icon.ttf","path":"css/fonts/icon.ttf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/icon.woff","path":"css/fonts/icon.woff","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"source/assets/images/gif1.gif","path":"assets/images/gif1.gif","modified":1,"renderable":0},{"_id":"source/assets/images/img8.jpg","path":"assets/images/img8.jpg","modified":1,"renderable":0},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff2","path":"css/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/images/author_icon.jpg","path":"css/images/author_icon.jpg","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"source/assets/images/img1.jpg","path":"assets/images/img1.jpg","modified":1,"renderable":0},{"_id":"source/assets/images/img3.jpg","path":"assets/images/img3.jpg","modified":1,"renderable":0},{"_id":"source/assets/images/img4.png","path":"assets/images/img4.png","modified":1,"renderable":0},{"_id":"source/assets/images/wxpay.jpg","path":"assets/images/wxpay.jpg","modified":1,"renderable":0},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"source/assets/images/img10.png","path":"assets/images/img10.png","modified":1,"renderable":0},{"_id":"themes/landscape/source/css/images/post-banner.jpg","path":"css/images/post-banner.jpg","modified":1,"renderable":1},{"_id":"source/assets/images/article_top.jpg","path":"assets/images/article_top.jpg","modified":1,"renderable":0}],"Cache":[{"_id":"themes/landscape/.gitignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1532009063135},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1532009063135},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1532009063135},{"_id":"themes/landscape/_config.yml","hash":"d92888ce47b0951df832d7452a54652871fa1aae","modified":1532009063136},{"_id":"themes/landscape/README.md","hash":"b5c2c28629c9902b91a0b311b6c02ce76d0a8b3f","modified":1532009542472},{"_id":"themes/landscape/package.json","hash":"544f21a0b2c7034998b36ae94dba6e3e0f39f228","modified":1532009063147},{"_id":"themes/landscape/languages/de.yml","hash":"8a0d2c6ae30ab4d0cf01733a24571337893dbe4f","modified":1532009063136},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1532009063136},{"_id":"themes/landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1532009063137},{"_id":"themes/landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1532009063137},{"_id":"themes/landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1532009063137},{"_id":"themes/landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1532009063137},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1532009063138},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1532009063138},{"_id":"themes/landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1532009063138},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1532009063138},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1532009063139},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1532009063139},{"_id":"themes/landscape/layout/about.ejs","hash":"836afc977a2ae05bf63ad9c94c7885d860c16190","modified":1532009063145},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1532009063146},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1532009063146},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1532009063146},{"_id":"themes/landscape/layout/layout.ejs","hash":"12499c5b7c67795cb039871e662d7ae21cd9a00f","modified":1532009063147},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1532009063147},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1532009063147},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1532009063147},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1532009063148},{"_id":"source/_posts/crossOrigin.md","hash":"8637263b83caf0972c3877b7cc7ca9c17d62b6f5","modified":1532009063069},{"_id":"source/_posts/displayFlex.md","hash":"95ee9ba0f8e5c9b3b5c6a82c99b37419e40d9422","modified":1532009063069},{"_id":"source/_posts/englishProgram.md","hash":"4d9cc9f8c8908d406254ce99a0a29ec3f3818fc7","modified":1532009063069},{"_id":"source/_posts/forbidMobileSwipe.md","hash":"93dad8a9f9445699cafadcc47d3011937154a399","modified":1532009063069},{"_id":"source/_posts/html5Storage.md","hash":"36e5e1e7431c00988fe8b07fc7cd89fe9a3149cf","modified":1532009063070},{"_id":"source/_posts/installAtomPlugin.md","hash":"a2a130a14e04c51bd2603b354f1f6417f58f0526","modified":1532009063070},{"_id":"source/_posts/jsOrderAlgorith.md","hash":"d94274e6c5afdcf737ac3513361d2a99c966c887","modified":1532009063070},{"_id":"source/_posts/useHexoToBuildBlog.md","hash":"50b04596aa2785e63c5d8fbd0cc2d2a2e0f40708","modified":1532009063070},{"_id":"source/_posts/useKoa2.md","hash":"ca51e910eaf9a665742496cb22c13b301d6af252","modified":1532009063070},{"_id":"source/_posts/vuestaticURLerror.md","hash":"cbf83c789f4d05e07e2eb17ec86ef692fa2d1125","modified":1532009063071},{"_id":"themes/landscape/layout/_partial/about.ejs","hash":"aa9c268c017829d5261846033a34b408c63e2436","modified":1532009063139},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"d0d753d39038284d52b10e5075979cc97db9cd20","modified":1532009063140},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1532009063140},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"950ddd91db8718153b329b96dc14439ab8463ba5","modified":1532009063140},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"3fb49de4ed13dbf304ba9b63a27bc0c17ea561a5","modified":1532009063140},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"44b8e9e0d8176354c35932c4365a9c9d08176b9f","modified":1532009063141},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"aad6312ac197d6c5aaf2104ac863d7eba46b772a","modified":1532009063141},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1532009063141},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"5abf77aec957d9445fc71a8310252f0013c84578","modified":1532009063141},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"f920033028a0ef15e95f00285d213472281b2de0","modified":1532009063142},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1532009063142},{"_id":"themes/landscape/layout/_partial/post-header.ejs","hash":"34b4cd4b787fe933b06cb947bddbdb86bf41ade0","modified":1532009063142},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1532009063144},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1532009063144},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1532009063145},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1532009063145},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1532009063145},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1532009063145},{"_id":"themes/landscape/source/css/_extend.styl","hash":"03378b6d9f1642dfbecf4f48dd5b0e61733009c6","modified":1532009063148},{"_id":"themes/landscape/source/css/_variables.styl","hash":"bb1cbab6bd7209d116c4fe3a00d7c06ca12ca1c1","modified":1532009063152},{"_id":"themes/landscape/source/css/style.styl","hash":"2075f66d95fc4335b0b3f8078ee0b638397017c8","modified":1532009063172},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1532009063178},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1532009063172},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1532009063173},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1532009063173},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1532009063173},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1532009063174},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1532009063174},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1532009063176},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1532009063177},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1532009063177},{"_id":"source/assets/images/img1.png","hash":"c061396a20c8099ddfdc6db3b998a3388d1bbbcb","modified":1532009063098},{"_id":"source/assets/images/img10.jpg","hash":"fa6af37782b00f3d8430b07eea649cb847fad9cc","modified":1532009063098},{"_id":"source/assets/images/img11.png","hash":"acdf79205cb77de0add921386c8471e67bf3a895","modified":1532009063102},{"_id":"source/assets/images/img12.jpg","hash":"a035c0a2c490968070ec12914ef018c94996c81b","modified":1532009063103},{"_id":"source/assets/images/img12.png","hash":"d976f658df06539cb91e9748e45d93d479098c4f","modified":1532009063103},{"_id":"source/assets/images/img13.jpg","hash":"e229a4c95ac580e0542397e04f2bfb2211c88b25","modified":1532009063104},{"_id":"source/assets/images/img13.png","hash":"bf34644df1d2c8b3942ff0530d486a248332ddb9","modified":1532009063104},{"_id":"source/assets/images/img15.jpg","hash":"25d81327afcc0028f17d8ce7d058322299029a0a","modified":1532009063106},{"_id":"source/assets/images/img14.jpg","hash":"51f4dcc1bcffbd1bba6e7021e36211d08d892087","modified":1532009063105},{"_id":"source/assets/images/img17.jpg","hash":"a76286f52c9c6094301ff1debde11f6304a92dfc","modified":1532009063107},{"_id":"source/assets/images/img2.jpg","hash":"3af71d5d4e8a1f9d11875fa25ef106f3e6d80fda","modified":1532009063108},{"_id":"source/assets/images/img19.jpg","hash":"848adf4acd81ee4cf0129d6b5554c709520f5635","modified":1532009063108},{"_id":"source/assets/images/img18.jpg","hash":"bf04640aa34b95144a713832e4e4c0d4dcce1f1e","modified":1532009063107},{"_id":"source/assets/images/img20.jpg","hash":"f5be36716ee5c4ddf70945fd9707c0f4cec98ec1","modified":1532009063110},{"_id":"source/assets/images/img16.jpg","hash":"8f77cd9b5affefa907a33859745bd8846aeb3198","modified":1532009063106},{"_id":"source/assets/images/img21.jpg","hash":"848adf4acd81ee4cf0129d6b5554c709520f5635","modified":1532009063110},{"_id":"source/assets/images/img23.jpg","hash":"39f4a208687384257a794016369761df2573d96b","modified":1532009063112},{"_id":"source/assets/images/img24.jpg","hash":"93da7d7d8ba4bf43bfae8df5c8a2a91c6a9627aa","modified":1532009063114},{"_id":"source/assets/images/img25.jpg","hash":"1ff44c7ff390635f6c480b7d76a91fa10bc7e7e5","modified":1532009063114},{"_id":"source/assets/images/img26.jpg","hash":"169fdb9b6a9d8f6f8621d126c76bfdb2337c78f3","modified":1532009063115},{"_id":"source/assets/images/img27.jpg","hash":"32b16bb0d15f2d795b2af70ae1ae72b2ebc92fc2","modified":1532009063115},{"_id":"source/assets/images/img29.jpg","hash":"3f20bf67b0e5cf3424304e9a57c5e45a9e9bbbd1","modified":1532009063117},{"_id":"source/assets/images/img3.png","hash":"a220f33498ac47ee875276623835a2e09d15acdf","modified":1532009063120},{"_id":"source/assets/images/img30.jpg","hash":"c4f52d3d083e0cdda2067457553f09c1a35caaf7","modified":1532009063120},{"_id":"source/assets/images/img4.jpg","hash":"4e7d0761042caf0a63d65098027a14cbad1ec0cc","modified":1532009063121},{"_id":"source/assets/images/img5.jpg","hash":"53d0a332ca5ebffc012b831e9440de87aaf6e53a","modified":1532009063123},{"_id":"source/assets/images/img6.jpg","hash":"b01749af65b396c6afe9b988c16acf921f648d2b","modified":1532009063125},{"_id":"source/assets/images/img6.png","hash":"4fcb3a0780a9ea0febf540f36913063f27cef655","modified":1532009063126},{"_id":"source/assets/images/img7.jpg","hash":"3a22f6223aa6858daff63296856a3429dd0000a2","modified":1532009063126},{"_id":"source/assets/images/img7.png","hash":"a651762e3bfc87933d952b2029609f4e94fe5635","modified":1532009063126},{"_id":"source/assets/images/img9.jpg","hash":"5f6750630d21969d2046e84c721e0f6b4def7036","modified":1532009063131},{"_id":"source/assets/images/img9.png","hash":"928e78cd87eeb6dd9d6c7523993ec33fe3a28094","modified":1532009063131},{"_id":"source/assets/images/alipay.jpg","hash":"12852496ee878f698d33a55d7408eb190db6699e","modified":1532009063072},{"_id":"source/assets/images/author_head.jpeg","hash":"55a3cd5f158449da98c3d48e792bd4ba7919feba","modified":1532009063094},{"_id":"source/assets/images/img11.jpg","hash":"e3d501a828cba2c1a17c34cc426fa20bf4d9bdce","modified":1532009063102},{"_id":"source/assets/images/img2.png","hash":"9b2efdd5496c211f42dfc45bfcc19dddc8fdb8fe","modified":1532009063109},{"_id":"source/assets/images/img22.jpg","hash":"595c0f3a9a6c56b6d4d161454d5718f1414f2ab0","modified":1532009063111},{"_id":"source/assets/images/img28.jpg","hash":"03d079de0cecc3866e4bd14ff2dd616bf5c5b666","modified":1532009063117},{"_id":"source/assets/images/img5.png","hash":"2762d493c93cbd85043bccc8d0c03d8b39c2e808","modified":1532009063125},{"_id":"source/assets/images/img8.png","hash":"0c7a76e1d195da1484d2eb1745141a468985d32b","modified":1532009063130},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1532009063143},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1532009063143},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1532009063143},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1532009063143},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1532009063144},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2cf4e8aa7c0730dd5aad7e54e18eb049d00b75b3","modified":1532009063144},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1532009063149},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1532009063149},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"2501bf10fb21c196319f74be87d65169a88ee407","modified":1532009063149},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"d5270998e3d6a2309c2857edda9adb057988edd1","modified":1532009063149},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"877a337dd1927b67c0e65911b9965c610fdaca53","modified":1532009063150},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"01e1b546542cf73757ac9cde92f001ca84adc223","modified":1532009063150},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1532009063150},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1532009063151},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1532009063151},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1532009063151},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1532009063151},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1532009063152},{"_id":"themes/landscape/source/css/fonts/icon.eot","hash":"845e74fd0134d11cb064e5440ae490c846670f2e","modified":1532009063162},{"_id":"themes/landscape/source/css/fonts/icon.svg","hash":"b812a585d7dbb508874605a48436c77c8271e28b","modified":1532009063163},{"_id":"themes/landscape/source/css/fonts/icon.ttf","hash":"c403df27000403dd4de7ffe2b4e80d04c4475a07","modified":1532009063163},{"_id":"themes/landscape/source/css/fonts/icon.woff","hash":"7d828283afa799b70a8531b9a2662c559b346439","modified":1532009063163},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1532009063174},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1532009063175},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1532009063175},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1532009063175},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1532009063175},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1532009063176},{"_id":"source/assets/images/gif1.gif","hash":"fce2028d40d8622e214bbbaa44989248c0950443","modified":1532009063095},{"_id":"source/assets/images/img8.jpg","hash":"f750c1da384332201bd788d7b577f56d607ee990","modified":1532009063129},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1532009063161},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1532009063162},{"_id":"themes/landscape/source/css/images/author_icon.jpg","hash":"55a3cd5f158449da98c3d48e792bd4ba7919feba","modified":1532009063164},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1532009063153},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1532009063155},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1532009063161},{"_id":"source/assets/images/img1.jpg","hash":"54c4389353a56dd69b1d9519773baea133ff2448","modified":1532009063097},{"_id":"source/assets/images/img3.jpg","hash":"6d406b8a7567a9d9492f8a2427ceeb8e33561eb8","modified":1532009063119},{"_id":"source/assets/images/img4.png","hash":"50a9bc7985074a0638ab4fdba47c02780f4235eb","modified":1532009063123},{"_id":"source/assets/images/wxpay.jpg","hash":"599dd4c8a73408d16f5d7eaf714f8111af9480f5","modified":1532009063134},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"306e3a4e44a09c749db6c9274053b10df8ddd116","modified":1532009063165},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1532009063159},{"_id":"source/assets/images/img10.png","hash":"95224d8b15d07ff2c632d58e8ab0e6b0f0dd6e4c","modified":1532009063101},{"_id":"themes/landscape/source/css/images/post-banner.jpg","hash":"5174527122526723ce7e17735c44a59f5b1a25b7","modified":1532009063171},{"_id":"source/assets/images/article_top.jpg","hash":"05440d9f76d52b4ce0a14f7ac3ab89682c524488","modified":1532009063090},{"_id":"public/2017/06/01/vuestaticURLerror/index.html","hash":"779c1d481952c176b07ce6471049b319c322ac60","modified":1532009561488},{"_id":"public/2017/03/01/useKoa2/index.html","hash":"5d5e557e46261be56c48a96fc5e8dbc9f8af3fa2","modified":1532009561488},{"_id":"public/2017/02/20/jsOrderAlgorith/index.html","hash":"c761fd598276b79e829163f0b6372ce8e649d7b9","modified":1532009561488},{"_id":"public/2017/01/19/installAtomPlugin/index.html","hash":"67c87db9a3dd95de9757377cb77ab686d77fe883","modified":1532009561488},{"_id":"public/2016/12/25/forbidMobileSwipe/index.html","hash":"982c6220b2645cbc5505d6e93e72978b87519109","modified":1532009561488},{"_id":"public/2016/11/12/crossOrigin/index.html","hash":"20138ff3967078888d74c842044ecfbb23ebf258","modified":1532009561488},{"_id":"public/2016/11/12/useHexoToBuildBlog/index.html","hash":"4d3e2b4f25c9e35a0c24da61c48425af9859a138","modified":1532009561488},{"_id":"public/2016/04/12/html5Storage/index.html","hash":"e3030b2c3af92e8e1f3be755ab49a9ad8aaa28a8","modified":1532009561489},{"_id":"public/archives/index.html","hash":"6e438f684ceb55dfa9a3cd07a7e35069c5b92927","modified":1532009561489},{"_id":"public/archives/2016/index.html","hash":"15ac77a0e95cdb5d0c7d9872a02c86e070c97264","modified":1532009561489},{"_id":"public/archives/2016/04/index.html","hash":"abcad11a023a668e88d946898b41442b05d2bc2e","modified":1532009561489},{"_id":"public/archives/2016/10/index.html","hash":"dcdf3dbe409fbf173f7feeacc04040a35318b242","modified":1532009561489},{"_id":"public/archives/2016/11/index.html","hash":"1c763735cac7b1762928680a190753da81db3a64","modified":1532009561489},{"_id":"public/archives/2016/12/index.html","hash":"ba3ddd7d171d282f05ad8708b216146fbb48b5fc","modified":1532009561489},{"_id":"public/archives/2017/index.html","hash":"4272c52d0c833f97353ce884c4d38e3ebb78560b","modified":1532009561489},{"_id":"public/archives/2017/01/index.html","hash":"33ad410320499d1190108a68ef98048c55ba065d","modified":1532009561489},{"_id":"public/archives/2017/02/index.html","hash":"c741d6915fc07bb5fcb6ec7b2db807a5e0b098dc","modified":1532009561489},{"_id":"public/archives/2017/03/index.html","hash":"70cf36aff7f869593b1fa0ba9bc937c7c1c98a87","modified":1532009561490},{"_id":"public/archives/2017/06/index.html","hash":"2b78ad742cd080fe98f33766407decffc9cef7d1","modified":1532009561490},{"_id":"public/archives/2018/index.html","hash":"0abd8a1f19114b54d4c98185e2989022e9aba16a","modified":1532009561490},{"_id":"public/archives/2018/01/index.html","hash":"1c4851ee535dde745bd74ed7daea43a38f3a7c37","modified":1532009561490},{"_id":"public/categories/前端/index.html","hash":"3fc6d9cc49873dbd571d20f25b73717a9349ee65","modified":1532009561490},{"_id":"public/categories/英语/index.html","hash":"3d4c1c9a163a32859953c1b6d66e41ebeee7532b","modified":1532009561490},{"_id":"public/2018/01/12/englishProgram/index.html","hash":"140d2bd194508bb534399d642e40878dbcad5137","modified":1532009561490},{"_id":"public/2016/10/18/displayFlex/index.html","hash":"38d258c3d9739d0fd000826c7e0dc19c802bf3d6","modified":1532009561490},{"_id":"public/index.html","hash":"fa8f2073f4b144678b4d104f7cc6d1f3a3edde5c","modified":1532009561491},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1532009561500},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1532009561500},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1532009561500},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1532009561500},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1532009561500},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1532009561501},{"_id":"public/assets/images/img1.png","hash":"c061396a20c8099ddfdc6db3b998a3388d1bbbcb","modified":1532009561501},{"_id":"public/assets/images/img10.jpg","hash":"fa6af37782b00f3d8430b07eea649cb847fad9cc","modified":1532009561501},{"_id":"public/assets/images/img11.png","hash":"acdf79205cb77de0add921386c8471e67bf3a895","modified":1532009561501},{"_id":"public/assets/images/img12.jpg","hash":"a035c0a2c490968070ec12914ef018c94996c81b","modified":1532009561501},{"_id":"public/assets/images/img12.png","hash":"d976f658df06539cb91e9748e45d93d479098c4f","modified":1532009561501},{"_id":"public/assets/images/img13.jpg","hash":"e229a4c95ac580e0542397e04f2bfb2211c88b25","modified":1532009561501},{"_id":"public/assets/images/img13.png","hash":"bf34644df1d2c8b3942ff0530d486a248332ddb9","modified":1532009561501},{"_id":"public/assets/images/img15.jpg","hash":"25d81327afcc0028f17d8ce7d058322299029a0a","modified":1532009561502},{"_id":"public/assets/images/img14.jpg","hash":"51f4dcc1bcffbd1bba6e7021e36211d08d892087","modified":1532009561502},{"_id":"public/assets/images/img2.jpg","hash":"3af71d5d4e8a1f9d11875fa25ef106f3e6d80fda","modified":1532009561502},{"_id":"public/assets/images/img17.jpg","hash":"a76286f52c9c6094301ff1debde11f6304a92dfc","modified":1532009561502},{"_id":"public/assets/images/img19.jpg","hash":"848adf4acd81ee4cf0129d6b5554c709520f5635","modified":1532009561503},{"_id":"public/assets/images/img18.jpg","hash":"bf04640aa34b95144a713832e4e4c0d4dcce1f1e","modified":1532009561503},{"_id":"public/assets/images/img20.jpg","hash":"f5be36716ee5c4ddf70945fd9707c0f4cec98ec1","modified":1532009561503},{"_id":"public/assets/images/img16.jpg","hash":"8f77cd9b5affefa907a33859745bd8846aeb3198","modified":1532009561503},{"_id":"public/assets/images/img21.jpg","hash":"848adf4acd81ee4cf0129d6b5554c709520f5635","modified":1532009561503},{"_id":"public/assets/images/img23.jpg","hash":"39f4a208687384257a794016369761df2573d96b","modified":1532009561503},{"_id":"public/assets/images/img24.jpg","hash":"93da7d7d8ba4bf43bfae8df5c8a2a91c6a9627aa","modified":1532009561503},{"_id":"public/assets/images/img25.jpg","hash":"1ff44c7ff390635f6c480b7d76a91fa10bc7e7e5","modified":1532009561503},{"_id":"public/assets/images/img26.jpg","hash":"169fdb9b6a9d8f6f8621d126c76bfdb2337c78f3","modified":1532009561504},{"_id":"public/assets/images/img27.jpg","hash":"32b16bb0d15f2d795b2af70ae1ae72b2ebc92fc2","modified":1532009561504},{"_id":"public/assets/images/img29.jpg","hash":"3f20bf67b0e5cf3424304e9a57c5e45a9e9bbbd1","modified":1532009561504},{"_id":"public/assets/images/img3.png","hash":"a220f33498ac47ee875276623835a2e09d15acdf","modified":1532009561504},{"_id":"public/assets/images/img30.jpg","hash":"c4f52d3d083e0cdda2067457553f09c1a35caaf7","modified":1532009561504},{"_id":"public/assets/images/img4.jpg","hash":"4e7d0761042caf0a63d65098027a14cbad1ec0cc","modified":1532009561504},{"_id":"public/assets/images/img5.jpg","hash":"53d0a332ca5ebffc012b831e9440de87aaf6e53a","modified":1532009561504},{"_id":"public/assets/images/img6.jpg","hash":"b01749af65b396c6afe9b988c16acf921f648d2b","modified":1532009561505},{"_id":"public/assets/images/img6.png","hash":"4fcb3a0780a9ea0febf540f36913063f27cef655","modified":1532009561505},{"_id":"public/assets/images/img7.jpg","hash":"3a22f6223aa6858daff63296856a3429dd0000a2","modified":1532009561505},{"_id":"public/assets/images/img7.png","hash":"a651762e3bfc87933d952b2029609f4e94fe5635","modified":1532009561505},{"_id":"public/assets/images/img9.jpg","hash":"5f6750630d21969d2046e84c721e0f6b4def7036","modified":1532009561505},{"_id":"public/assets/images/img9.png","hash":"928e78cd87eeb6dd9d6c7523993ec33fe3a28094","modified":1532009561505},{"_id":"public/css/fonts/icon.eot","hash":"845e74fd0134d11cb064e5440ae490c846670f2e","modified":1532009561505},{"_id":"public/css/fonts/icon.svg","hash":"b812a585d7dbb508874605a48436c77c8271e28b","modified":1532009561505},{"_id":"public/css/fonts/icon.ttf","hash":"c403df27000403dd4de7ffe2b4e80d04c4475a07","modified":1532009561506},{"_id":"public/css/fonts/icon.woff","hash":"7d828283afa799b70a8531b9a2662c559b346439","modified":1532009561506},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1532009561506},{"_id":"public/assets/images/alipay.jpg","hash":"12852496ee878f698d33a55d7408eb190db6699e","modified":1532009561954},{"_id":"public/assets/images/author_head.jpeg","hash":"55a3cd5f158449da98c3d48e792bd4ba7919feba","modified":1532009561955},{"_id":"public/assets/images/img11.jpg","hash":"e3d501a828cba2c1a17c34cc426fa20bf4d9bdce","modified":1532009561956},{"_id":"public/assets/images/img2.png","hash":"9b2efdd5496c211f42dfc45bfcc19dddc8fdb8fe","modified":1532009561956},{"_id":"public/assets/images/img22.jpg","hash":"595c0f3a9a6c56b6d4d161454d5718f1414f2ab0","modified":1532009561956},{"_id":"public/assets/images/img28.jpg","hash":"03d079de0cecc3866e4bd14ff2dd616bf5c5b666","modified":1532009561956},{"_id":"public/assets/images/img5.png","hash":"2762d493c93cbd85043bccc8d0c03d8b39c2e808","modified":1532009561956},{"_id":"public/assets/images/img8.png","hash":"0c7a76e1d195da1484d2eb1745141a468985d32b","modified":1532009561956},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1532009561956},{"_id":"public/css/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1532009561956},{"_id":"public/css/images/author_icon.jpg","hash":"55a3cd5f158449da98c3d48e792bd4ba7919feba","modified":1532009561956},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1532009562002},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1532009562003},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1532009562003},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1532009562003},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1532009562003},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1532009562003},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1532009562003},{"_id":"public/css/style.css","hash":"fe17d93737f0114ab6494c3a3acf0ca7760ad8f7","modified":1532009562003},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1532009562003},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1532009562004},{"_id":"public/assets/images/gif1.gif","hash":"fce2028d40d8622e214bbbaa44989248c0950443","modified":1532009562004},{"_id":"public/assets/images/img8.jpg","hash":"f750c1da384332201bd788d7b577f56d607ee990","modified":1532009562004},{"_id":"public/css/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1532009562004},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1532009562004},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1532009562004},{"_id":"public/css/images/banner.jpg","hash":"306e3a4e44a09c749db6c9274053b10df8ddd116","modified":1532009562010},{"_id":"public/assets/images/img1.jpg","hash":"54c4389353a56dd69b1d9519773baea133ff2448","modified":1532009562017},{"_id":"public/assets/images/img3.jpg","hash":"6d406b8a7567a9d9492f8a2427ceeb8e33561eb8","modified":1532009562017},{"_id":"public/assets/images/img4.png","hash":"50a9bc7985074a0638ab4fdba47c02780f4235eb","modified":1532009562017},{"_id":"public/assets/images/wxpay.jpg","hash":"599dd4c8a73408d16f5d7eaf714f8111af9480f5","modified":1532009562017},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1532009562028},{"_id":"public/assets/images/img10.png","hash":"95224d8b15d07ff2c632d58e8ab0e6b0f0dd6e4c","modified":1532009562057},{"_id":"public/css/images/post-banner.jpg","hash":"5174527122526723ce7e17735c44a59f5b1a25b7","modified":1532009562057},{"_id":"public/assets/images/article_top.jpg","hash":"05440d9f76d52b4ce0a14f7ac3ab89682c524488","modified":1532009562093}],"Category":[{"name":"前端","_id":"cjjsmxqih0002em0jlrzrg8ol"},{"name":"英语","_id":"cjjsmxqir000aem0j8jqs381e"}],"Data":[],"Page":[],"Post":[{"title":"前端解决跨域问题","date":"2016-11-11T16:00:00.000Z","toc":true,"_content":"\n## 1.CORS\n\n**CORS**（Corss-Origin Resource Sharing,跨资源共享），基本思想是使用自定义的HTTP头部让浏览器与服务器进行沟通，从而决定请求或响应的成功或失败。即给请求附加一个额外的Origin头部，其中包含请求页面的源信息（协议、域名和端口），以便服务器根据这个头部决定是否给予响应。\n\n<!-- more -->\n\n```\napp.all('*', function (req, res, next) {\n  res.header('Access-Control-Allow-Origin', '*');\n  res.header('Access-Control-Allow-Headers', 'Content-Type,Content-Length, Authorization, Accept,X-Requested-With');\n  res.header('Access-Control-Allow-Methods','PUT,POST,GET,DELETE,OPTIONS');\n  res.header(\"Content-Type\", \"application/json;charset=utf-8\");\n  if (req.method == 'OPTIONS') {\n    res.send(200);\n  } else {\n    next();\n  }\n});\n```\n\n## 2.document.domain\n\n将页面的document.domain设置为相同的值，页面间可以互相访问对方的JavaScript对象。\n注意：\n不能将值设置为URL中不包含的域；\n松散的域名不能再设置为紧绷的域名。\n\n## 3.图像Ping\n\n```\nvar img=new Image();\nimg.onload=img.onerror=function(){\n... ...\n}\nimg.src=\"url?name=value\";\n```\n\n请求数据通过查询字符串的形式发送，响应可以是任意内容，通常是像素图或204响应。\n图像Ping最常用于跟踪用户点击页面或动态广告曝光次数。\n缺点：\n只能发送GET请求；\n无法访问服务器的响应文本，只能用于浏览器与服务器间的单向通信。\n\n## 4.Jsonp\n\n```\nvar script=document.createElement(\"script\");\nscript.src=\"url?callback=handleResponse\";\ndocument.body.insertBefore(script,document.body.firstChild);\n```\n\nJSONP由两部分组成：回调函数和数据\n回调函数是接收到响应时应该在页面中调用的函数，其名字一般在请求中指定。\n数据是传入回调函数中的JSON数据。\n优点：\n能够直接访问响应文本，可用于浏览器与服务器间的双向通信。\n缺点：\nJSONP从其他域中加载代码执行，其他域可能不安全；\n难以确定JSONP请求是否失败。\n\n## 5.Comet\n\nComet可实现服务器向浏览器推送数据。\nComet是实现方式：长轮询和流\n短轮询即浏览器定时向服务器发送请求，看有没有数据更新。\n长轮询即浏览器向服务器发送一个请求，然后服务器一直保持连接打开，直到有数据可发送。发送完数据后，浏览器关闭连接，随即又向服务器发起一个新请求。其优点是所有浏览器都支持，使用XHR对象和setTimeout()即可实现。\n流即浏览器向服务器发送一个请求，而服务器保持连接打开，然后周期性地向浏览器发送数据，页面的整个生命周期内只使用一个HTTP连接。\n\n## 6.WebSocket\n\nWebSocket可在一个单独的持久连接上提供全双工、双向通信。\nWebSocket使用自定义协议，未加密的连接时ws://；加密的链接是wss://。\nvar webSocket=new WebSocket(“ws://“);\nwebSocket.send(message);\nwebSocket.onmessage=function(event){\nvar data=event.data;\n… ….\n}\n\n> 注意：\n\n必须给WebSocket构造函数传入绝对URL；\nWebSocket可以打开任何站点的连接，是否会与某个域中的页面通信，完全取决于服务器；\nWebSocket只能发送纯文本数据，对于复杂的数据结构，在发送之前必须进行序列化JSON.stringify(message))。\n优点：\n在客户端和服务器之间发送非常少的数据，减少字节开销。","source":"_posts/crossOrigin.md","raw":"---\ntitle: 前端解决跨域问题\ncategory: 前端\ndate: 2016-11-12\ntoc: true\n---\n\n## 1.CORS\n\n**CORS**（Corss-Origin Resource Sharing,跨资源共享），基本思想是使用自定义的HTTP头部让浏览器与服务器进行沟通，从而决定请求或响应的成功或失败。即给请求附加一个额外的Origin头部，其中包含请求页面的源信息（协议、域名和端口），以便服务器根据这个头部决定是否给予响应。\n\n<!-- more -->\n\n```\napp.all('*', function (req, res, next) {\n  res.header('Access-Control-Allow-Origin', '*');\n  res.header('Access-Control-Allow-Headers', 'Content-Type,Content-Length, Authorization, Accept,X-Requested-With');\n  res.header('Access-Control-Allow-Methods','PUT,POST,GET,DELETE,OPTIONS');\n  res.header(\"Content-Type\", \"application/json;charset=utf-8\");\n  if (req.method == 'OPTIONS') {\n    res.send(200);\n  } else {\n    next();\n  }\n});\n```\n\n## 2.document.domain\n\n将页面的document.domain设置为相同的值，页面间可以互相访问对方的JavaScript对象。\n注意：\n不能将值设置为URL中不包含的域；\n松散的域名不能再设置为紧绷的域名。\n\n## 3.图像Ping\n\n```\nvar img=new Image();\nimg.onload=img.onerror=function(){\n... ...\n}\nimg.src=\"url?name=value\";\n```\n\n请求数据通过查询字符串的形式发送，响应可以是任意内容，通常是像素图或204响应。\n图像Ping最常用于跟踪用户点击页面或动态广告曝光次数。\n缺点：\n只能发送GET请求；\n无法访问服务器的响应文本，只能用于浏览器与服务器间的单向通信。\n\n## 4.Jsonp\n\n```\nvar script=document.createElement(\"script\");\nscript.src=\"url?callback=handleResponse\";\ndocument.body.insertBefore(script,document.body.firstChild);\n```\n\nJSONP由两部分组成：回调函数和数据\n回调函数是接收到响应时应该在页面中调用的函数，其名字一般在请求中指定。\n数据是传入回调函数中的JSON数据。\n优点：\n能够直接访问响应文本，可用于浏览器与服务器间的双向通信。\n缺点：\nJSONP从其他域中加载代码执行，其他域可能不安全；\n难以确定JSONP请求是否失败。\n\n## 5.Comet\n\nComet可实现服务器向浏览器推送数据。\nComet是实现方式：长轮询和流\n短轮询即浏览器定时向服务器发送请求，看有没有数据更新。\n长轮询即浏览器向服务器发送一个请求，然后服务器一直保持连接打开，直到有数据可发送。发送完数据后，浏览器关闭连接，随即又向服务器发起一个新请求。其优点是所有浏览器都支持，使用XHR对象和setTimeout()即可实现。\n流即浏览器向服务器发送一个请求，而服务器保持连接打开，然后周期性地向浏览器发送数据，页面的整个生命周期内只使用一个HTTP连接。\n\n## 6.WebSocket\n\nWebSocket可在一个单独的持久连接上提供全双工、双向通信。\nWebSocket使用自定义协议，未加密的连接时ws://；加密的链接是wss://。\nvar webSocket=new WebSocket(“ws://“);\nwebSocket.send(message);\nwebSocket.onmessage=function(event){\nvar data=event.data;\n… ….\n}\n\n> 注意：\n\n必须给WebSocket构造函数传入绝对URL；\nWebSocket可以打开任何站点的连接，是否会与某个域中的页面通信，完全取决于服务器；\nWebSocket只能发送纯文本数据，对于复杂的数据结构，在发送之前必须进行序列化JSON.stringify(message))。\n优点：\n在客户端和服务器之间发送非常少的数据，减少字节开销。","slug":"crossOrigin","published":1,"updated":"2018-07-19T14:04:23.069Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjjsmxqib0000em0j4h8qmz4m","content":"<h2 id=\"1-CORS\"><a href=\"#1-CORS\" class=\"headerlink\" title=\"1.CORS\"></a>1.CORS</h2><p><strong>CORS</strong>（Corss-Origin Resource Sharing,跨资源共享），基本思想是使用自定义的HTTP头部让浏览器与服务器进行沟通，从而决定请求或响应的成功或失败。即给请求附加一个额外的Origin头部，其中包含请求页面的源信息（协议、域名和端口），以便服务器根据这个头部决定是否给予响应。</p>\n<a id=\"more\"></a>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.all(&apos;*&apos;, function (req, res, next) &#123;</span><br><span class=\"line\">  res.header(&apos;Access-Control-Allow-Origin&apos;, &apos;*&apos;);</span><br><span class=\"line\">  res.header(&apos;Access-Control-Allow-Headers&apos;, &apos;Content-Type,Content-Length, Authorization, Accept,X-Requested-With&apos;);</span><br><span class=\"line\">  res.header(&apos;Access-Control-Allow-Methods&apos;,&apos;PUT,POST,GET,DELETE,OPTIONS&apos;);</span><br><span class=\"line\">  res.header(&quot;Content-Type&quot;, &quot;application/json;charset=utf-8&quot;);</span><br><span class=\"line\">  if (req.method == &apos;OPTIONS&apos;) &#123;</span><br><span class=\"line\">    res.send(200);</span><br><span class=\"line\">  &#125; else &#123;</span><br><span class=\"line\">    next();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-document-domain\"><a href=\"#2-document-domain\" class=\"headerlink\" title=\"2.document.domain\"></a>2.document.domain</h2><p>将页面的document.domain设置为相同的值，页面间可以互相访问对方的JavaScript对象。<br>注意：<br>不能将值设置为URL中不包含的域；<br>松散的域名不能再设置为紧绷的域名。</p>\n<h2 id=\"3-图像Ping\"><a href=\"#3-图像Ping\" class=\"headerlink\" title=\"3.图像Ping\"></a>3.图像Ping</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var img=new Image();</span><br><span class=\"line\">img.onload=img.onerror=function()&#123;</span><br><span class=\"line\">... ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">img.src=&quot;url?name=value&quot;;</span><br></pre></td></tr></table></figure>\n<p>请求数据通过查询字符串的形式发送，响应可以是任意内容，通常是像素图或204响应。<br>图像Ping最常用于跟踪用户点击页面或动态广告曝光次数。<br>缺点：<br>只能发送GET请求；<br>无法访问服务器的响应文本，只能用于浏览器与服务器间的单向通信。</p>\n<h2 id=\"4-Jsonp\"><a href=\"#4-Jsonp\" class=\"headerlink\" title=\"4.Jsonp\"></a>4.Jsonp</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var script=document.createElement(&quot;script&quot;);</span><br><span class=\"line\">script.src=&quot;url?callback=handleResponse&quot;;</span><br><span class=\"line\">document.body.insertBefore(script,document.body.firstChild);</span><br></pre></td></tr></table></figure>\n<p>JSONP由两部分组成：回调函数和数据<br>回调函数是接收到响应时应该在页面中调用的函数，其名字一般在请求中指定。<br>数据是传入回调函数中的JSON数据。<br>优点：<br>能够直接访问响应文本，可用于浏览器与服务器间的双向通信。<br>缺点：<br>JSONP从其他域中加载代码执行，其他域可能不安全；<br>难以确定JSONP请求是否失败。</p>\n<h2 id=\"5-Comet\"><a href=\"#5-Comet\" class=\"headerlink\" title=\"5.Comet\"></a>5.Comet</h2><p>Comet可实现服务器向浏览器推送数据。<br>Comet是实现方式：长轮询和流<br>短轮询即浏览器定时向服务器发送请求，看有没有数据更新。<br>长轮询即浏览器向服务器发送一个请求，然后服务器一直保持连接打开，直到有数据可发送。发送完数据后，浏览器关闭连接，随即又向服务器发起一个新请求。其优点是所有浏览器都支持，使用XHR对象和setTimeout()即可实现。<br>流即浏览器向服务器发送一个请求，而服务器保持连接打开，然后周期性地向浏览器发送数据，页面的整个生命周期内只使用一个HTTP连接。</p>\n<h2 id=\"6-WebSocket\"><a href=\"#6-WebSocket\" class=\"headerlink\" title=\"6.WebSocket\"></a>6.WebSocket</h2><p>WebSocket可在一个单独的持久连接上提供全双工、双向通信。<br>WebSocket使用自定义协议，未加密的连接时ws://；加密的链接是wss://。<br>var webSocket=new WebSocket(“ws://“);<br>webSocket.send(message);<br>webSocket.onmessage=function(event){<br>var data=event.data;<br>… ….<br>}</p>\n<blockquote>\n<p>注意：</p>\n</blockquote>\n<p>必须给WebSocket构造函数传入绝对URL；<br>WebSocket可以打开任何站点的连接，是否会与某个域中的页面通信，完全取决于服务器；<br>WebSocket只能发送纯文本数据，对于复杂的数据结构，在发送之前必须进行序列化JSON.stringify(message))。<br>优点：<br>在客户端和服务器之间发送非常少的数据，减少字节开销。</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"1-CORS\"><a href=\"#1-CORS\" class=\"headerlink\" title=\"1.CORS\"></a>1.CORS</h2><p><strong>CORS</strong>（Corss-Origin Resource Sharing,跨资源共享），基本思想是使用自定义的HTTP头部让浏览器与服务器进行沟通，从而决定请求或响应的成功或失败。即给请求附加一个额外的Origin头部，其中包含请求页面的源信息（协议、域名和端口），以便服务器根据这个头部决定是否给予响应。</p>","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.all(&apos;*&apos;, function (req, res, next) &#123;</span><br><span class=\"line\">  res.header(&apos;Access-Control-Allow-Origin&apos;, &apos;*&apos;);</span><br><span class=\"line\">  res.header(&apos;Access-Control-Allow-Headers&apos;, &apos;Content-Type,Content-Length, Authorization, Accept,X-Requested-With&apos;);</span><br><span class=\"line\">  res.header(&apos;Access-Control-Allow-Methods&apos;,&apos;PUT,POST,GET,DELETE,OPTIONS&apos;);</span><br><span class=\"line\">  res.header(&quot;Content-Type&quot;, &quot;application/json;charset=utf-8&quot;);</span><br><span class=\"line\">  if (req.method == &apos;OPTIONS&apos;) &#123;</span><br><span class=\"line\">    res.send(200);</span><br><span class=\"line\">  &#125; else &#123;</span><br><span class=\"line\">    next();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-document-domain\"><a href=\"#2-document-domain\" class=\"headerlink\" title=\"2.document.domain\"></a>2.document.domain</h2><p>将页面的document.domain设置为相同的值，页面间可以互相访问对方的JavaScript对象。<br>注意：<br>不能将值设置为URL中不包含的域；<br>松散的域名不能再设置为紧绷的域名。</p>\n<h2 id=\"3-图像Ping\"><a href=\"#3-图像Ping\" class=\"headerlink\" title=\"3.图像Ping\"></a>3.图像Ping</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var img=new Image();</span><br><span class=\"line\">img.onload=img.onerror=function()&#123;</span><br><span class=\"line\">... ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">img.src=&quot;url?name=value&quot;;</span><br></pre></td></tr></table></figure>\n<p>请求数据通过查询字符串的形式发送，响应可以是任意内容，通常是像素图或204响应。<br>图像Ping最常用于跟踪用户点击页面或动态广告曝光次数。<br>缺点：<br>只能发送GET请求；<br>无法访问服务器的响应文本，只能用于浏览器与服务器间的单向通信。</p>\n<h2 id=\"4-Jsonp\"><a href=\"#4-Jsonp\" class=\"headerlink\" title=\"4.Jsonp\"></a>4.Jsonp</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var script=document.createElement(&quot;script&quot;);</span><br><span class=\"line\">script.src=&quot;url?callback=handleResponse&quot;;</span><br><span class=\"line\">document.body.insertBefore(script,document.body.firstChild);</span><br></pre></td></tr></table></figure>\n<p>JSONP由两部分组成：回调函数和数据<br>回调函数是接收到响应时应该在页面中调用的函数，其名字一般在请求中指定。<br>数据是传入回调函数中的JSON数据。<br>优点：<br>能够直接访问响应文本，可用于浏览器与服务器间的双向通信。<br>缺点：<br>JSONP从其他域中加载代码执行，其他域可能不安全；<br>难以确定JSONP请求是否失败。</p>\n<h2 id=\"5-Comet\"><a href=\"#5-Comet\" class=\"headerlink\" title=\"5.Comet\"></a>5.Comet</h2><p>Comet可实现服务器向浏览器推送数据。<br>Comet是实现方式：长轮询和流<br>短轮询即浏览器定时向服务器发送请求，看有没有数据更新。<br>长轮询即浏览器向服务器发送一个请求，然后服务器一直保持连接打开，直到有数据可发送。发送完数据后，浏览器关闭连接，随即又向服务器发起一个新请求。其优点是所有浏览器都支持，使用XHR对象和setTimeout()即可实现。<br>流即浏览器向服务器发送一个请求，而服务器保持连接打开，然后周期性地向浏览器发送数据，页面的整个生命周期内只使用一个HTTP连接。</p>\n<h2 id=\"6-WebSocket\"><a href=\"#6-WebSocket\" class=\"headerlink\" title=\"6.WebSocket\"></a>6.WebSocket</h2><p>WebSocket可在一个单独的持久连接上提供全双工、双向通信。<br>WebSocket使用自定义协议，未加密的连接时ws://；加密的链接是wss://。<br>var webSocket=new WebSocket(“ws://“);<br>webSocket.send(message);<br>webSocket.onmessage=function(event){<br>var data=event.data;<br>… ….<br>}</p>\n<blockquote>\n<p>注意：</p>\n</blockquote>\n<p>必须给WebSocket构造函数传入绝对URL；<br>WebSocket可以打开任何站点的连接，是否会与某个域中的页面通信，完全取决于服务器；<br>WebSocket只能发送纯文本数据，对于复杂的数据结构，在发送之前必须进行序列化JSON.stringify(message))。<br>优点：<br>在客户端和服务器之间发送非常少的数据，减少字节开销。</p>"},{"title":"详解display:box","date":"2016-10-17T16:00:00.000Z","_content":"\n从css3发布以来出现了很多新颖的css属性，颠覆了css2的很多样式写法。其中改变最大要属的就是流式布局和弹性布局的变化了。移动端为了实现更好的兼容性，使用弹性布局无疑是最完美的布局方案了。一直以来对box-flex的属性不甚详解，今天好好分析整理，分享一些心得，另附上一些代码具体解释。\n\n<!-- more -->\n\n# display:box\n\nbox-flex属性，我们可以理解为box是父元素，flex是子元素。只有在父元素定义display:box后子容器才可以进行划分。目前box-flex属性还没有得到Firefox、Opera、Chrome浏览器的完全支持，但可以使用它们的私有属性定义Firefox(-moz-)、Opera(-o-)、Chrome/Safari（-webkit-)。\n\n## 子元素等分\n\nbox-flex的值为至少为1的整数时起作用。具体看如下代码：\n\n###### html代码\n\n```\n<div class=\"box\">\n\t<div class=\"flex green\"></div>\n\t<div class=\"flex blue\"></div>\n\t<div class=\"flex yellow\"></div>\n</div>\n```\n\n###### css代码\n\n```\n.box{display: -webkit-box;width: 800px;height: 100px;border: 1px solid #888;}\n.flex{-webkit-box-flex: 1;}\n.green{background: lightgreen;}\n.blue{background: lightblue;}\n.yellow{background: orange;}\n```\n\n> 运行效果如下：\n\n![](http://i.imgur.com/3ndFRyV.png)\n\n## 子元素设置间距\n\n###### css代码\n\n```\n.box{display: -webkit-box;width: 800px;height: 100px;border: 1px solid #888;}\n.flex{-webkit-box-flex: 1;}\n.green{background: lightgreen;}\n.blue{background: lightblue;margin: 0 10px;}\n.yellow{background: orange;}\n```\n\n> 运行效果如下：\n\n![](http://i.imgur.com/U1b57Vw.png)\n\n## 子元素不等比划分\n\n###### css代码\n\n```\n.box{display: -webkit-box;width: 800px;height: 100px;border: 1px solid #888;}\n.flex{-webkit-box-flex: 1;}\n.green{background: lightgreen;}\n.blue{background: lightblue;margin: 0 10px;-webkit-box-flex: 3;}\n.yellow{background: orange;-webkit-box-flex: 2;}\n```\n\n> 运行效果如下：\n\n![](http://i.imgur.com/m25j3Fx.png)\n\n## 子元素定宽\n\n###### html代码\n\n```\n<div class=\"box\">\n\t<div class=\"flex green\">width=120px</div>\n\t<div class=\"flex blue\"></div>\n\t<div class=\"flex yellow\"></div>\n</div>\n```\n\n###### css代码\n\n```\n.box{display: -webkit-box;width: 800px;height: 100px;border: 1px solid #888;}\n.flex{-webkit-box-flex: 1;text-align: center;}\n.green{background: lightgreen;width: 120px;}\n.blue{background: lightblue;margin: 0 10px;-webkit-box-flex: 3;}\n.yellow{background: orange;-webkit-box-flex: 2;}\n```\n\n> 运行效果如下：\n\n![](http://i.imgur.com/4yD2jf3.png)\n\n## 父元素属性box-orient\n\nbox-orient用来确定子元素的方向。\n\n*   inline-axis_（默认）_\n*   horizontal\n*   vertical\n*   block-axis\n*   inherit\n\n###### css代码\n\n```\n.box{display: -webkit-box;-webkit-box-orient: vertical;width: 800px;height: 100px;border: 1px solid #888;}\n.flex{-webkit-box-flex: 1;text-align: center;}\n.green{background: lightgreen;width: 120px;}\n.blue{background: lightblue;margin: 0 10px;-webkit-box-flex: 3;}\n.yellow{background: orange;-webkit-box-flex: 2;}\n```\n\n> 运行效果如下：\n\n![](http://i.imgur.com/6l7JKZS.png)\n\n## 父元素属性box-direction\n\nbox-direction是用来确定子元素的排列顺序。\n\n*   normal_（默认）_    →    从左往右\n*   reverse    →    从右往左\n*   inherit    →    从左往右\n\n###### css代码\n\n```\n.box{display: -webkit-box;-webkit-box-direction: reverse;width: 800px;height: 100px;border: 1px solid #888;}\n.flex{-webkit-box-flex: 1;text-align: center;}\n.green{background: lightgreen;width: 120px;}\n.blue{background: lightblue;margin: 0 10px;-webkit-box-flex: 3;}\n.yellow{background: orange;-webkit-box-flex: 2;}\n```\n\n> 运行效果如下：\n\n![](http://i.imgur.com/JtQqNJv.png)\n\n## 父元素属性box-align\n\nbox-align与box-pack都是决定盒子内部剩余空间怎么使用的，box-align决定了垂直方向上的空间利用，也就是垂直方向上的对齐表现。\n\n*   stretch_（默认）_\n*   start\n*   end\n*   center\n*   baseline\n\n#### box-align:center\n\n###### css代码\n\n```\n.box{display: -webkit-box;-webkit-box-align: center;width: 800px;border: 1px solid #888;}\n.flex{-webkit-box-flex: 1;text-align: center;}\n.green{background: lightgreen;width: 120px;height: 110px;}\n.blue{background: lightblue;margin: 0 10px;-webkit-box-flex: 3;height: 290px;}\n.yellow{background: orange;-webkit-box-flex: 2;height: 220px;}\n```\n\n> 运行效果如下：\n\n![](http://i.imgur.com/0Rz8jxs.png)\n\n#### box-align:start\n\n###### css代码\n\n```\n.box{display: -webkit-box;-webkit-box-align: start;width: 800px;border: 1px solid #888;}\n.flex{-webkit-box-flex: 1;text-align: center;}\n.green{background: lightgreen;width: 120px;height: 110px;}\n.blue{background: lightblue;margin: 0 10px;-webkit-box-flex: 3;height: 290px;}\n.yellow{background: orange;-webkit-box-flex: 2;height: 220px;}\n```\n\n> 运行效果如下：\n\n![](http://i.imgur.com/2pGDc94.png)\n\n#### box-align:baseline\n\n###### css代码\n\n```\n.box{display: -webkit-box;-webkit-box-align: baseline;width: 800px;border: 1px solid #888;}\n.flex{-webkit-box-flex: 1;text-align: center;}\n.green{background: lightgreen;width: 120px;height: 110px;}\n.blue{background: lightblue;margin: 0 10px;-webkit-box-flex: 3;height: 290px;}\n.yellow{background: orange;-webkit-box-flex: 2;height: 220px;}\n```\n\n> 运行效果如下：\n\n![](http://i.imgur.com/nAhvyRJ.png)\n\n## box-pack\n\nbox-pack决定了父标签水平遗留空间的使用。\n\n*   start_（默认）_\n*   end\n*   center\n*   justify\n\nbox-pack大部分的行为表现来说分别对应text-align属性的值：left | right | center | justify。\n\n#### box-pack:end\n\n###### css代码\n\n```\n.box{display: -webkit-box;-webkit-box-pack: end;border: 1px solid #888;width: 600px;}\n.flex{text-align: center;padding: 0 40px;}\n.green{background: lightgreen;height: 50px;}\n.blue{background: lightblue;height: 90px;}\n.yellow{background: orange;height: 20px;}\n```\n\n> 运行效果如下：\n\n![](http://i.imgur.com/Z9vJpL9.png)\n\n#### box-pack:justify\n\n###### css代码\n\n```\n.box{display: -webkit-box;-webkit-box-pack: justify;border: 1px solid #888;width: 600px;}\n.flex{text-align: center;padding: 0 40px;}\n.green{background: lightgreen;height: 50px;}\n.blue{background: lightblue;height: 90px;}\n.yellow{background: orange;height: 20px;}\n```\n\n> 运行效果如下：\n\n![](http://i.imgur.com/bd9bLii.png)\n\n#### box-pack:center\n\n###### css代码\n\n```\n.box{display: -webkit-box;-webkit-box-pack: center;border: 1px solid #888;width: 600px;}\n.flex{text-align: center;padding: 0 40px;}\n.green{background: lightgreen;height: 50px;}\n.blue{background: lightblue;height: 90px;}\n.yellow{background: orange;height: 20px;}\n```\n\n> 运行效果如下：\n\n![](http://i.imgur.com/fg6sqis.png)\n\n## 父元素属性box-lines\n\nbox-lines是用来决定子元素是可以换行显示还是就算挤出油还是单行显示。\n\n*   single_（默认）_    →    单行显示\n*   multiple    →    多行显示\n> 不过目前无论Firefox还是Chrome似乎都对box-lines属性不支持，原因未知。\n\n## 子元素属性box-ordinal-group\n\nbox-ordinal-group的属性值是有一个数字级别的，决定了你这个父元素的组织内的位置。数值越小，位置就越靠前。举例如下：\n\n###### css代码\n\n```\n.box{display: -webkit-box;border: 1px solid #888;width: 600px;}\n.flex{text-align: center;padding: 0 40px;}\n.green{background: lightgreen;height: 50px;-webkit-box-ordinal-group: 3;}\n.blue{background: lightblue;height: 90px;-webkit-box-ordinal-group: 1;}\n.yellow{background: orange;height: 20px;-webkit-box-ordinal-group: 2;}\n```\n\n**注意：父元素中的每个子元素都要设置box-ordinal-group值，否则无效果。**\n\n> 运行效果如下：\n\n![](http://i.imgur.com/sYVuMO1.png)","source":"_posts/displayFlex.md","raw":"---\ntitle: 详解display:box\ncategory: 前端\ndate: 2016-10-18\n---\n\n从css3发布以来出现了很多新颖的css属性，颠覆了css2的很多样式写法。其中改变最大要属的就是流式布局和弹性布局的变化了。移动端为了实现更好的兼容性，使用弹性布局无疑是最完美的布局方案了。一直以来对box-flex的属性不甚详解，今天好好分析整理，分享一些心得，另附上一些代码具体解释。\n\n<!-- more -->\n\n# display:box\n\nbox-flex属性，我们可以理解为box是父元素，flex是子元素。只有在父元素定义display:box后子容器才可以进行划分。目前box-flex属性还没有得到Firefox、Opera、Chrome浏览器的完全支持，但可以使用它们的私有属性定义Firefox(-moz-)、Opera(-o-)、Chrome/Safari（-webkit-)。\n\n## 子元素等分\n\nbox-flex的值为至少为1的整数时起作用。具体看如下代码：\n\n###### html代码\n\n```\n<div class=\"box\">\n\t<div class=\"flex green\"></div>\n\t<div class=\"flex blue\"></div>\n\t<div class=\"flex yellow\"></div>\n</div>\n```\n\n###### css代码\n\n```\n.box{display: -webkit-box;width: 800px;height: 100px;border: 1px solid #888;}\n.flex{-webkit-box-flex: 1;}\n.green{background: lightgreen;}\n.blue{background: lightblue;}\n.yellow{background: orange;}\n```\n\n> 运行效果如下：\n\n![](http://i.imgur.com/3ndFRyV.png)\n\n## 子元素设置间距\n\n###### css代码\n\n```\n.box{display: -webkit-box;width: 800px;height: 100px;border: 1px solid #888;}\n.flex{-webkit-box-flex: 1;}\n.green{background: lightgreen;}\n.blue{background: lightblue;margin: 0 10px;}\n.yellow{background: orange;}\n```\n\n> 运行效果如下：\n\n![](http://i.imgur.com/U1b57Vw.png)\n\n## 子元素不等比划分\n\n###### css代码\n\n```\n.box{display: -webkit-box;width: 800px;height: 100px;border: 1px solid #888;}\n.flex{-webkit-box-flex: 1;}\n.green{background: lightgreen;}\n.blue{background: lightblue;margin: 0 10px;-webkit-box-flex: 3;}\n.yellow{background: orange;-webkit-box-flex: 2;}\n```\n\n> 运行效果如下：\n\n![](http://i.imgur.com/m25j3Fx.png)\n\n## 子元素定宽\n\n###### html代码\n\n```\n<div class=\"box\">\n\t<div class=\"flex green\">width=120px</div>\n\t<div class=\"flex blue\"></div>\n\t<div class=\"flex yellow\"></div>\n</div>\n```\n\n###### css代码\n\n```\n.box{display: -webkit-box;width: 800px;height: 100px;border: 1px solid #888;}\n.flex{-webkit-box-flex: 1;text-align: center;}\n.green{background: lightgreen;width: 120px;}\n.blue{background: lightblue;margin: 0 10px;-webkit-box-flex: 3;}\n.yellow{background: orange;-webkit-box-flex: 2;}\n```\n\n> 运行效果如下：\n\n![](http://i.imgur.com/4yD2jf3.png)\n\n## 父元素属性box-orient\n\nbox-orient用来确定子元素的方向。\n\n*   inline-axis_（默认）_\n*   horizontal\n*   vertical\n*   block-axis\n*   inherit\n\n###### css代码\n\n```\n.box{display: -webkit-box;-webkit-box-orient: vertical;width: 800px;height: 100px;border: 1px solid #888;}\n.flex{-webkit-box-flex: 1;text-align: center;}\n.green{background: lightgreen;width: 120px;}\n.blue{background: lightblue;margin: 0 10px;-webkit-box-flex: 3;}\n.yellow{background: orange;-webkit-box-flex: 2;}\n```\n\n> 运行效果如下：\n\n![](http://i.imgur.com/6l7JKZS.png)\n\n## 父元素属性box-direction\n\nbox-direction是用来确定子元素的排列顺序。\n\n*   normal_（默认）_    →    从左往右\n*   reverse    →    从右往左\n*   inherit    →    从左往右\n\n###### css代码\n\n```\n.box{display: -webkit-box;-webkit-box-direction: reverse;width: 800px;height: 100px;border: 1px solid #888;}\n.flex{-webkit-box-flex: 1;text-align: center;}\n.green{background: lightgreen;width: 120px;}\n.blue{background: lightblue;margin: 0 10px;-webkit-box-flex: 3;}\n.yellow{background: orange;-webkit-box-flex: 2;}\n```\n\n> 运行效果如下：\n\n![](http://i.imgur.com/JtQqNJv.png)\n\n## 父元素属性box-align\n\nbox-align与box-pack都是决定盒子内部剩余空间怎么使用的，box-align决定了垂直方向上的空间利用，也就是垂直方向上的对齐表现。\n\n*   stretch_（默认）_\n*   start\n*   end\n*   center\n*   baseline\n\n#### box-align:center\n\n###### css代码\n\n```\n.box{display: -webkit-box;-webkit-box-align: center;width: 800px;border: 1px solid #888;}\n.flex{-webkit-box-flex: 1;text-align: center;}\n.green{background: lightgreen;width: 120px;height: 110px;}\n.blue{background: lightblue;margin: 0 10px;-webkit-box-flex: 3;height: 290px;}\n.yellow{background: orange;-webkit-box-flex: 2;height: 220px;}\n```\n\n> 运行效果如下：\n\n![](http://i.imgur.com/0Rz8jxs.png)\n\n#### box-align:start\n\n###### css代码\n\n```\n.box{display: -webkit-box;-webkit-box-align: start;width: 800px;border: 1px solid #888;}\n.flex{-webkit-box-flex: 1;text-align: center;}\n.green{background: lightgreen;width: 120px;height: 110px;}\n.blue{background: lightblue;margin: 0 10px;-webkit-box-flex: 3;height: 290px;}\n.yellow{background: orange;-webkit-box-flex: 2;height: 220px;}\n```\n\n> 运行效果如下：\n\n![](http://i.imgur.com/2pGDc94.png)\n\n#### box-align:baseline\n\n###### css代码\n\n```\n.box{display: -webkit-box;-webkit-box-align: baseline;width: 800px;border: 1px solid #888;}\n.flex{-webkit-box-flex: 1;text-align: center;}\n.green{background: lightgreen;width: 120px;height: 110px;}\n.blue{background: lightblue;margin: 0 10px;-webkit-box-flex: 3;height: 290px;}\n.yellow{background: orange;-webkit-box-flex: 2;height: 220px;}\n```\n\n> 运行效果如下：\n\n![](http://i.imgur.com/nAhvyRJ.png)\n\n## box-pack\n\nbox-pack决定了父标签水平遗留空间的使用。\n\n*   start_（默认）_\n*   end\n*   center\n*   justify\n\nbox-pack大部分的行为表现来说分别对应text-align属性的值：left | right | center | justify。\n\n#### box-pack:end\n\n###### css代码\n\n```\n.box{display: -webkit-box;-webkit-box-pack: end;border: 1px solid #888;width: 600px;}\n.flex{text-align: center;padding: 0 40px;}\n.green{background: lightgreen;height: 50px;}\n.blue{background: lightblue;height: 90px;}\n.yellow{background: orange;height: 20px;}\n```\n\n> 运行效果如下：\n\n![](http://i.imgur.com/Z9vJpL9.png)\n\n#### box-pack:justify\n\n###### css代码\n\n```\n.box{display: -webkit-box;-webkit-box-pack: justify;border: 1px solid #888;width: 600px;}\n.flex{text-align: center;padding: 0 40px;}\n.green{background: lightgreen;height: 50px;}\n.blue{background: lightblue;height: 90px;}\n.yellow{background: orange;height: 20px;}\n```\n\n> 运行效果如下：\n\n![](http://i.imgur.com/bd9bLii.png)\n\n#### box-pack:center\n\n###### css代码\n\n```\n.box{display: -webkit-box;-webkit-box-pack: center;border: 1px solid #888;width: 600px;}\n.flex{text-align: center;padding: 0 40px;}\n.green{background: lightgreen;height: 50px;}\n.blue{background: lightblue;height: 90px;}\n.yellow{background: orange;height: 20px;}\n```\n\n> 运行效果如下：\n\n![](http://i.imgur.com/fg6sqis.png)\n\n## 父元素属性box-lines\n\nbox-lines是用来决定子元素是可以换行显示还是就算挤出油还是单行显示。\n\n*   single_（默认）_    →    单行显示\n*   multiple    →    多行显示\n> 不过目前无论Firefox还是Chrome似乎都对box-lines属性不支持，原因未知。\n\n## 子元素属性box-ordinal-group\n\nbox-ordinal-group的属性值是有一个数字级别的，决定了你这个父元素的组织内的位置。数值越小，位置就越靠前。举例如下：\n\n###### css代码\n\n```\n.box{display: -webkit-box;border: 1px solid #888;width: 600px;}\n.flex{text-align: center;padding: 0 40px;}\n.green{background: lightgreen;height: 50px;-webkit-box-ordinal-group: 3;}\n.blue{background: lightblue;height: 90px;-webkit-box-ordinal-group: 1;}\n.yellow{background: orange;height: 20px;-webkit-box-ordinal-group: 2;}\n```\n\n**注意：父元素中的每个子元素都要设置box-ordinal-group值，否则无效果。**\n\n> 运行效果如下：\n\n![](http://i.imgur.com/sYVuMO1.png)","slug":"displayFlex","published":1,"updated":"2018-07-19T14:04:23.069Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjjsmxqif0001em0jsq9kmjyw","content":"<p>从css3发布以来出现了很多新颖的css属性，颠覆了css2的很多样式写法。其中改变最大要属的就是流式布局和弹性布局的变化了。移动端为了实现更好的兼容性，使用弹性布局无疑是最完美的布局方案了。一直以来对box-flex的属性不甚详解，今天好好分析整理，分享一些心得，另附上一些代码具体解释。</p>\n<a id=\"more\"></a>\n<h1 id=\"display-box\"><a href=\"#display-box\" class=\"headerlink\" title=\"display:box\"></a>display:box</h1><p>box-flex属性，我们可以理解为box是父元素，flex是子元素。只有在父元素定义display:box后子容器才可以进行划分。目前box-flex属性还没有得到Firefox、Opera、Chrome浏览器的完全支持，但可以使用它们的私有属性定义Firefox(-moz-)、Opera(-o-)、Chrome/Safari（-webkit-)。</p>\n<h2 id=\"子元素等分\"><a href=\"#子元素等分\" class=\"headerlink\" title=\"子元素等分\"></a>子元素等分</h2><p>box-flex的值为至少为1的整数时起作用。具体看如下代码：</p>\n<h6 id=\"html代码\"><a href=\"#html代码\" class=\"headerlink\" title=\"html代码\"></a>html代码</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div class=&quot;box&quot;&gt;</span><br><span class=\"line\">\t&lt;div class=&quot;flex green&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">\t&lt;div class=&quot;flex blue&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">\t&lt;div class=&quot;flex yellow&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<h6 id=\"css代码\"><a href=\"#css代码\" class=\"headerlink\" title=\"css代码\"></a>css代码</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box&#123;display: -webkit-box;width: 800px;height: 100px;border: 1px solid #888;&#125;</span><br><span class=\"line\">.flex&#123;-webkit-box-flex: 1;&#125;</span><br><span class=\"line\">.green&#123;background: lightgreen;&#125;</span><br><span class=\"line\">.blue&#123;background: lightblue;&#125;</span><br><span class=\"line\">.yellow&#123;background: orange;&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>运行效果如下：</p>\n</blockquote>\n<p><img src=\"http://i.imgur.com/3ndFRyV.png\" alt=\"\"></p>\n<h2 id=\"子元素设置间距\"><a href=\"#子元素设置间距\" class=\"headerlink\" title=\"子元素设置间距\"></a>子元素设置间距</h2><h6 id=\"css代码-1\"><a href=\"#css代码-1\" class=\"headerlink\" title=\"css代码\"></a>css代码</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box&#123;display: -webkit-box;width: 800px;height: 100px;border: 1px solid #888;&#125;</span><br><span class=\"line\">.flex&#123;-webkit-box-flex: 1;&#125;</span><br><span class=\"line\">.green&#123;background: lightgreen;&#125;</span><br><span class=\"line\">.blue&#123;background: lightblue;margin: 0 10px;&#125;</span><br><span class=\"line\">.yellow&#123;background: orange;&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>运行效果如下：</p>\n</blockquote>\n<p><img src=\"http://i.imgur.com/U1b57Vw.png\" alt=\"\"></p>\n<h2 id=\"子元素不等比划分\"><a href=\"#子元素不等比划分\" class=\"headerlink\" title=\"子元素不等比划分\"></a>子元素不等比划分</h2><h6 id=\"css代码-2\"><a href=\"#css代码-2\" class=\"headerlink\" title=\"css代码\"></a>css代码</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box&#123;display: -webkit-box;width: 800px;height: 100px;border: 1px solid #888;&#125;</span><br><span class=\"line\">.flex&#123;-webkit-box-flex: 1;&#125;</span><br><span class=\"line\">.green&#123;background: lightgreen;&#125;</span><br><span class=\"line\">.blue&#123;background: lightblue;margin: 0 10px;-webkit-box-flex: 3;&#125;</span><br><span class=\"line\">.yellow&#123;background: orange;-webkit-box-flex: 2;&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>运行效果如下：</p>\n</blockquote>\n<p><img src=\"http://i.imgur.com/m25j3Fx.png\" alt=\"\"></p>\n<h2 id=\"子元素定宽\"><a href=\"#子元素定宽\" class=\"headerlink\" title=\"子元素定宽\"></a>子元素定宽</h2><h6 id=\"html代码-1\"><a href=\"#html代码-1\" class=\"headerlink\" title=\"html代码\"></a>html代码</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div class=&quot;box&quot;&gt;</span><br><span class=\"line\">\t&lt;div class=&quot;flex green&quot;&gt;width=120px&lt;/div&gt;</span><br><span class=\"line\">\t&lt;div class=&quot;flex blue&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">\t&lt;div class=&quot;flex yellow&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<h6 id=\"css代码-3\"><a href=\"#css代码-3\" class=\"headerlink\" title=\"css代码\"></a>css代码</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box&#123;display: -webkit-box;width: 800px;height: 100px;border: 1px solid #888;&#125;</span><br><span class=\"line\">.flex&#123;-webkit-box-flex: 1;text-align: center;&#125;</span><br><span class=\"line\">.green&#123;background: lightgreen;width: 120px;&#125;</span><br><span class=\"line\">.blue&#123;background: lightblue;margin: 0 10px;-webkit-box-flex: 3;&#125;</span><br><span class=\"line\">.yellow&#123;background: orange;-webkit-box-flex: 2;&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>运行效果如下：</p>\n</blockquote>\n<p><img src=\"http://i.imgur.com/4yD2jf3.png\" alt=\"\"></p>\n<h2 id=\"父元素属性box-orient\"><a href=\"#父元素属性box-orient\" class=\"headerlink\" title=\"父元素属性box-orient\"></a>父元素属性box-orient</h2><p>box-orient用来确定子元素的方向。</p>\n<ul>\n<li>inline-axis_（默认）_</li>\n<li>horizontal</li>\n<li>vertical</li>\n<li>block-axis</li>\n<li>inherit</li>\n</ul>\n<h6 id=\"css代码-4\"><a href=\"#css代码-4\" class=\"headerlink\" title=\"css代码\"></a>css代码</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box&#123;display: -webkit-box;-webkit-box-orient: vertical;width: 800px;height: 100px;border: 1px solid #888;&#125;</span><br><span class=\"line\">.flex&#123;-webkit-box-flex: 1;text-align: center;&#125;</span><br><span class=\"line\">.green&#123;background: lightgreen;width: 120px;&#125;</span><br><span class=\"line\">.blue&#123;background: lightblue;margin: 0 10px;-webkit-box-flex: 3;&#125;</span><br><span class=\"line\">.yellow&#123;background: orange;-webkit-box-flex: 2;&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>运行效果如下：</p>\n</blockquote>\n<p><img src=\"http://i.imgur.com/6l7JKZS.png\" alt=\"\"></p>\n<h2 id=\"父元素属性box-direction\"><a href=\"#父元素属性box-direction\" class=\"headerlink\" title=\"父元素属性box-direction\"></a>父元素属性box-direction</h2><p>box-direction是用来确定子元素的排列顺序。</p>\n<ul>\n<li>normal_（默认）_    →    从左往右</li>\n<li>reverse    →    从右往左</li>\n<li>inherit    →    从左往右</li>\n</ul>\n<h6 id=\"css代码-5\"><a href=\"#css代码-5\" class=\"headerlink\" title=\"css代码\"></a>css代码</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box&#123;display: -webkit-box;-webkit-box-direction: reverse;width: 800px;height: 100px;border: 1px solid #888;&#125;</span><br><span class=\"line\">.flex&#123;-webkit-box-flex: 1;text-align: center;&#125;</span><br><span class=\"line\">.green&#123;background: lightgreen;width: 120px;&#125;</span><br><span class=\"line\">.blue&#123;background: lightblue;margin: 0 10px;-webkit-box-flex: 3;&#125;</span><br><span class=\"line\">.yellow&#123;background: orange;-webkit-box-flex: 2;&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>运行效果如下：</p>\n</blockquote>\n<p><img src=\"http://i.imgur.com/JtQqNJv.png\" alt=\"\"></p>\n<h2 id=\"父元素属性box-align\"><a href=\"#父元素属性box-align\" class=\"headerlink\" title=\"父元素属性box-align\"></a>父元素属性box-align</h2><p>box-align与box-pack都是决定盒子内部剩余空间怎么使用的，box-align决定了垂直方向上的空间利用，也就是垂直方向上的对齐表现。</p>\n<ul>\n<li>stretch_（默认）_</li>\n<li>start</li>\n<li>end</li>\n<li>center</li>\n<li>baseline</li>\n</ul>\n<h4 id=\"box-align-center\"><a href=\"#box-align-center\" class=\"headerlink\" title=\"box-align:center\"></a>box-align:center</h4><h6 id=\"css代码-6\"><a href=\"#css代码-6\" class=\"headerlink\" title=\"css代码\"></a>css代码</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box&#123;display: -webkit-box;-webkit-box-align: center;width: 800px;border: 1px solid #888;&#125;</span><br><span class=\"line\">.flex&#123;-webkit-box-flex: 1;text-align: center;&#125;</span><br><span class=\"line\">.green&#123;background: lightgreen;width: 120px;height: 110px;&#125;</span><br><span class=\"line\">.blue&#123;background: lightblue;margin: 0 10px;-webkit-box-flex: 3;height: 290px;&#125;</span><br><span class=\"line\">.yellow&#123;background: orange;-webkit-box-flex: 2;height: 220px;&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>运行效果如下：</p>\n</blockquote>\n<p><img src=\"http://i.imgur.com/0Rz8jxs.png\" alt=\"\"></p>\n<h4 id=\"box-align-start\"><a href=\"#box-align-start\" class=\"headerlink\" title=\"box-align:start\"></a>box-align:start</h4><h6 id=\"css代码-7\"><a href=\"#css代码-7\" class=\"headerlink\" title=\"css代码\"></a>css代码</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box&#123;display: -webkit-box;-webkit-box-align: start;width: 800px;border: 1px solid #888;&#125;</span><br><span class=\"line\">.flex&#123;-webkit-box-flex: 1;text-align: center;&#125;</span><br><span class=\"line\">.green&#123;background: lightgreen;width: 120px;height: 110px;&#125;</span><br><span class=\"line\">.blue&#123;background: lightblue;margin: 0 10px;-webkit-box-flex: 3;height: 290px;&#125;</span><br><span class=\"line\">.yellow&#123;background: orange;-webkit-box-flex: 2;height: 220px;&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>运行效果如下：</p>\n</blockquote>\n<p><img src=\"http://i.imgur.com/2pGDc94.png\" alt=\"\"></p>\n<h4 id=\"box-align-baseline\"><a href=\"#box-align-baseline\" class=\"headerlink\" title=\"box-align:baseline\"></a>box-align:baseline</h4><h6 id=\"css代码-8\"><a href=\"#css代码-8\" class=\"headerlink\" title=\"css代码\"></a>css代码</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box&#123;display: -webkit-box;-webkit-box-align: baseline;width: 800px;border: 1px solid #888;&#125;</span><br><span class=\"line\">.flex&#123;-webkit-box-flex: 1;text-align: center;&#125;</span><br><span class=\"line\">.green&#123;background: lightgreen;width: 120px;height: 110px;&#125;</span><br><span class=\"line\">.blue&#123;background: lightblue;margin: 0 10px;-webkit-box-flex: 3;height: 290px;&#125;</span><br><span class=\"line\">.yellow&#123;background: orange;-webkit-box-flex: 2;height: 220px;&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>运行效果如下：</p>\n</blockquote>\n<p><img src=\"http://i.imgur.com/nAhvyRJ.png\" alt=\"\"></p>\n<h2 id=\"box-pack\"><a href=\"#box-pack\" class=\"headerlink\" title=\"box-pack\"></a>box-pack</h2><p>box-pack决定了父标签水平遗留空间的使用。</p>\n<ul>\n<li>start_（默认）_</li>\n<li>end</li>\n<li>center</li>\n<li>justify</li>\n</ul>\n<p>box-pack大部分的行为表现来说分别对应text-align属性的值：left | right | center | justify。</p>\n<h4 id=\"box-pack-end\"><a href=\"#box-pack-end\" class=\"headerlink\" title=\"box-pack:end\"></a>box-pack:end</h4><h6 id=\"css代码-9\"><a href=\"#css代码-9\" class=\"headerlink\" title=\"css代码\"></a>css代码</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box&#123;display: -webkit-box;-webkit-box-pack: end;border: 1px solid #888;width: 600px;&#125;</span><br><span class=\"line\">.flex&#123;text-align: center;padding: 0 40px;&#125;</span><br><span class=\"line\">.green&#123;background: lightgreen;height: 50px;&#125;</span><br><span class=\"line\">.blue&#123;background: lightblue;height: 90px;&#125;</span><br><span class=\"line\">.yellow&#123;background: orange;height: 20px;&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>运行效果如下：</p>\n</blockquote>\n<p><img src=\"http://i.imgur.com/Z9vJpL9.png\" alt=\"\"></p>\n<h4 id=\"box-pack-justify\"><a href=\"#box-pack-justify\" class=\"headerlink\" title=\"box-pack:justify\"></a>box-pack:justify</h4><h6 id=\"css代码-10\"><a href=\"#css代码-10\" class=\"headerlink\" title=\"css代码\"></a>css代码</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box&#123;display: -webkit-box;-webkit-box-pack: justify;border: 1px solid #888;width: 600px;&#125;</span><br><span class=\"line\">.flex&#123;text-align: center;padding: 0 40px;&#125;</span><br><span class=\"line\">.green&#123;background: lightgreen;height: 50px;&#125;</span><br><span class=\"line\">.blue&#123;background: lightblue;height: 90px;&#125;</span><br><span class=\"line\">.yellow&#123;background: orange;height: 20px;&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>运行效果如下：</p>\n</blockquote>\n<p><img src=\"http://i.imgur.com/bd9bLii.png\" alt=\"\"></p>\n<h4 id=\"box-pack-center\"><a href=\"#box-pack-center\" class=\"headerlink\" title=\"box-pack:center\"></a>box-pack:center</h4><h6 id=\"css代码-11\"><a href=\"#css代码-11\" class=\"headerlink\" title=\"css代码\"></a>css代码</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box&#123;display: -webkit-box;-webkit-box-pack: center;border: 1px solid #888;width: 600px;&#125;</span><br><span class=\"line\">.flex&#123;text-align: center;padding: 0 40px;&#125;</span><br><span class=\"line\">.green&#123;background: lightgreen;height: 50px;&#125;</span><br><span class=\"line\">.blue&#123;background: lightblue;height: 90px;&#125;</span><br><span class=\"line\">.yellow&#123;background: orange;height: 20px;&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>运行效果如下：</p>\n</blockquote>\n<p><img src=\"http://i.imgur.com/fg6sqis.png\" alt=\"\"></p>\n<h2 id=\"父元素属性box-lines\"><a href=\"#父元素属性box-lines\" class=\"headerlink\" title=\"父元素属性box-lines\"></a>父元素属性box-lines</h2><p>box-lines是用来决定子元素是可以换行显示还是就算挤出油还是单行显示。</p>\n<ul>\n<li>single_（默认）_    →    单行显示</li>\n<li>multiple    →    多行显示<blockquote>\n<p>不过目前无论Firefox还是Chrome似乎都对box-lines属性不支持，原因未知。</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"子元素属性box-ordinal-group\"><a href=\"#子元素属性box-ordinal-group\" class=\"headerlink\" title=\"子元素属性box-ordinal-group\"></a>子元素属性box-ordinal-group</h2><p>box-ordinal-group的属性值是有一个数字级别的，决定了你这个父元素的组织内的位置。数值越小，位置就越靠前。举例如下：</p>\n<h6 id=\"css代码-12\"><a href=\"#css代码-12\" class=\"headerlink\" title=\"css代码\"></a>css代码</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box&#123;display: -webkit-box;border: 1px solid #888;width: 600px;&#125;</span><br><span class=\"line\">.flex&#123;text-align: center;padding: 0 40px;&#125;</span><br><span class=\"line\">.green&#123;background: lightgreen;height: 50px;-webkit-box-ordinal-group: 3;&#125;</span><br><span class=\"line\">.blue&#123;background: lightblue;height: 90px;-webkit-box-ordinal-group: 1;&#125;</span><br><span class=\"line\">.yellow&#123;background: orange;height: 20px;-webkit-box-ordinal-group: 2;&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>注意：父元素中的每个子元素都要设置box-ordinal-group值，否则无效果。</strong></p>\n<blockquote>\n<p>运行效果如下：</p>\n</blockquote>\n<p><img src=\"http://i.imgur.com/sYVuMO1.png\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<p>从css3发布以来出现了很多新颖的css属性，颠覆了css2的很多样式写法。其中改变最大要属的就是流式布局和弹性布局的变化了。移动端为了实现更好的兼容性，使用弹性布局无疑是最完美的布局方案了。一直以来对box-flex的属性不甚详解，今天好好分析整理，分享一些心得，另附上一些代码具体解释。</p>","more":"<h1 id=\"display-box\"><a href=\"#display-box\" class=\"headerlink\" title=\"display:box\"></a>display:box</h1><p>box-flex属性，我们可以理解为box是父元素，flex是子元素。只有在父元素定义display:box后子容器才可以进行划分。目前box-flex属性还没有得到Firefox、Opera、Chrome浏览器的完全支持，但可以使用它们的私有属性定义Firefox(-moz-)、Opera(-o-)、Chrome/Safari（-webkit-)。</p>\n<h2 id=\"子元素等分\"><a href=\"#子元素等分\" class=\"headerlink\" title=\"子元素等分\"></a>子元素等分</h2><p>box-flex的值为至少为1的整数时起作用。具体看如下代码：</p>\n<h6 id=\"html代码\"><a href=\"#html代码\" class=\"headerlink\" title=\"html代码\"></a>html代码</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div class=&quot;box&quot;&gt;</span><br><span class=\"line\">\t&lt;div class=&quot;flex green&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">\t&lt;div class=&quot;flex blue&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">\t&lt;div class=&quot;flex yellow&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<h6 id=\"css代码\"><a href=\"#css代码\" class=\"headerlink\" title=\"css代码\"></a>css代码</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box&#123;display: -webkit-box;width: 800px;height: 100px;border: 1px solid #888;&#125;</span><br><span class=\"line\">.flex&#123;-webkit-box-flex: 1;&#125;</span><br><span class=\"line\">.green&#123;background: lightgreen;&#125;</span><br><span class=\"line\">.blue&#123;background: lightblue;&#125;</span><br><span class=\"line\">.yellow&#123;background: orange;&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>运行效果如下：</p>\n</blockquote>\n<p><img src=\"http://i.imgur.com/3ndFRyV.png\" alt=\"\"></p>\n<h2 id=\"子元素设置间距\"><a href=\"#子元素设置间距\" class=\"headerlink\" title=\"子元素设置间距\"></a>子元素设置间距</h2><h6 id=\"css代码-1\"><a href=\"#css代码-1\" class=\"headerlink\" title=\"css代码\"></a>css代码</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box&#123;display: -webkit-box;width: 800px;height: 100px;border: 1px solid #888;&#125;</span><br><span class=\"line\">.flex&#123;-webkit-box-flex: 1;&#125;</span><br><span class=\"line\">.green&#123;background: lightgreen;&#125;</span><br><span class=\"line\">.blue&#123;background: lightblue;margin: 0 10px;&#125;</span><br><span class=\"line\">.yellow&#123;background: orange;&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>运行效果如下：</p>\n</blockquote>\n<p><img src=\"http://i.imgur.com/U1b57Vw.png\" alt=\"\"></p>\n<h2 id=\"子元素不等比划分\"><a href=\"#子元素不等比划分\" class=\"headerlink\" title=\"子元素不等比划分\"></a>子元素不等比划分</h2><h6 id=\"css代码-2\"><a href=\"#css代码-2\" class=\"headerlink\" title=\"css代码\"></a>css代码</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box&#123;display: -webkit-box;width: 800px;height: 100px;border: 1px solid #888;&#125;</span><br><span class=\"line\">.flex&#123;-webkit-box-flex: 1;&#125;</span><br><span class=\"line\">.green&#123;background: lightgreen;&#125;</span><br><span class=\"line\">.blue&#123;background: lightblue;margin: 0 10px;-webkit-box-flex: 3;&#125;</span><br><span class=\"line\">.yellow&#123;background: orange;-webkit-box-flex: 2;&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>运行效果如下：</p>\n</blockquote>\n<p><img src=\"http://i.imgur.com/m25j3Fx.png\" alt=\"\"></p>\n<h2 id=\"子元素定宽\"><a href=\"#子元素定宽\" class=\"headerlink\" title=\"子元素定宽\"></a>子元素定宽</h2><h6 id=\"html代码-1\"><a href=\"#html代码-1\" class=\"headerlink\" title=\"html代码\"></a>html代码</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div class=&quot;box&quot;&gt;</span><br><span class=\"line\">\t&lt;div class=&quot;flex green&quot;&gt;width=120px&lt;/div&gt;</span><br><span class=\"line\">\t&lt;div class=&quot;flex blue&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">\t&lt;div class=&quot;flex yellow&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<h6 id=\"css代码-3\"><a href=\"#css代码-3\" class=\"headerlink\" title=\"css代码\"></a>css代码</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box&#123;display: -webkit-box;width: 800px;height: 100px;border: 1px solid #888;&#125;</span><br><span class=\"line\">.flex&#123;-webkit-box-flex: 1;text-align: center;&#125;</span><br><span class=\"line\">.green&#123;background: lightgreen;width: 120px;&#125;</span><br><span class=\"line\">.blue&#123;background: lightblue;margin: 0 10px;-webkit-box-flex: 3;&#125;</span><br><span class=\"line\">.yellow&#123;background: orange;-webkit-box-flex: 2;&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>运行效果如下：</p>\n</blockquote>\n<p><img src=\"http://i.imgur.com/4yD2jf3.png\" alt=\"\"></p>\n<h2 id=\"父元素属性box-orient\"><a href=\"#父元素属性box-orient\" class=\"headerlink\" title=\"父元素属性box-orient\"></a>父元素属性box-orient</h2><p>box-orient用来确定子元素的方向。</p>\n<ul>\n<li>inline-axis_（默认）_</li>\n<li>horizontal</li>\n<li>vertical</li>\n<li>block-axis</li>\n<li>inherit</li>\n</ul>\n<h6 id=\"css代码-4\"><a href=\"#css代码-4\" class=\"headerlink\" title=\"css代码\"></a>css代码</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box&#123;display: -webkit-box;-webkit-box-orient: vertical;width: 800px;height: 100px;border: 1px solid #888;&#125;</span><br><span class=\"line\">.flex&#123;-webkit-box-flex: 1;text-align: center;&#125;</span><br><span class=\"line\">.green&#123;background: lightgreen;width: 120px;&#125;</span><br><span class=\"line\">.blue&#123;background: lightblue;margin: 0 10px;-webkit-box-flex: 3;&#125;</span><br><span class=\"line\">.yellow&#123;background: orange;-webkit-box-flex: 2;&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>运行效果如下：</p>\n</blockquote>\n<p><img src=\"http://i.imgur.com/6l7JKZS.png\" alt=\"\"></p>\n<h2 id=\"父元素属性box-direction\"><a href=\"#父元素属性box-direction\" class=\"headerlink\" title=\"父元素属性box-direction\"></a>父元素属性box-direction</h2><p>box-direction是用来确定子元素的排列顺序。</p>\n<ul>\n<li>normal_（默认）_    →    从左往右</li>\n<li>reverse    →    从右往左</li>\n<li>inherit    →    从左往右</li>\n</ul>\n<h6 id=\"css代码-5\"><a href=\"#css代码-5\" class=\"headerlink\" title=\"css代码\"></a>css代码</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box&#123;display: -webkit-box;-webkit-box-direction: reverse;width: 800px;height: 100px;border: 1px solid #888;&#125;</span><br><span class=\"line\">.flex&#123;-webkit-box-flex: 1;text-align: center;&#125;</span><br><span class=\"line\">.green&#123;background: lightgreen;width: 120px;&#125;</span><br><span class=\"line\">.blue&#123;background: lightblue;margin: 0 10px;-webkit-box-flex: 3;&#125;</span><br><span class=\"line\">.yellow&#123;background: orange;-webkit-box-flex: 2;&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>运行效果如下：</p>\n</blockquote>\n<p><img src=\"http://i.imgur.com/JtQqNJv.png\" alt=\"\"></p>\n<h2 id=\"父元素属性box-align\"><a href=\"#父元素属性box-align\" class=\"headerlink\" title=\"父元素属性box-align\"></a>父元素属性box-align</h2><p>box-align与box-pack都是决定盒子内部剩余空间怎么使用的，box-align决定了垂直方向上的空间利用，也就是垂直方向上的对齐表现。</p>\n<ul>\n<li>stretch_（默认）_</li>\n<li>start</li>\n<li>end</li>\n<li>center</li>\n<li>baseline</li>\n</ul>\n<h4 id=\"box-align-center\"><a href=\"#box-align-center\" class=\"headerlink\" title=\"box-align:center\"></a>box-align:center</h4><h6 id=\"css代码-6\"><a href=\"#css代码-6\" class=\"headerlink\" title=\"css代码\"></a>css代码</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box&#123;display: -webkit-box;-webkit-box-align: center;width: 800px;border: 1px solid #888;&#125;</span><br><span class=\"line\">.flex&#123;-webkit-box-flex: 1;text-align: center;&#125;</span><br><span class=\"line\">.green&#123;background: lightgreen;width: 120px;height: 110px;&#125;</span><br><span class=\"line\">.blue&#123;background: lightblue;margin: 0 10px;-webkit-box-flex: 3;height: 290px;&#125;</span><br><span class=\"line\">.yellow&#123;background: orange;-webkit-box-flex: 2;height: 220px;&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>运行效果如下：</p>\n</blockquote>\n<p><img src=\"http://i.imgur.com/0Rz8jxs.png\" alt=\"\"></p>\n<h4 id=\"box-align-start\"><a href=\"#box-align-start\" class=\"headerlink\" title=\"box-align:start\"></a>box-align:start</h4><h6 id=\"css代码-7\"><a href=\"#css代码-7\" class=\"headerlink\" title=\"css代码\"></a>css代码</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box&#123;display: -webkit-box;-webkit-box-align: start;width: 800px;border: 1px solid #888;&#125;</span><br><span class=\"line\">.flex&#123;-webkit-box-flex: 1;text-align: center;&#125;</span><br><span class=\"line\">.green&#123;background: lightgreen;width: 120px;height: 110px;&#125;</span><br><span class=\"line\">.blue&#123;background: lightblue;margin: 0 10px;-webkit-box-flex: 3;height: 290px;&#125;</span><br><span class=\"line\">.yellow&#123;background: orange;-webkit-box-flex: 2;height: 220px;&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>运行效果如下：</p>\n</blockquote>\n<p><img src=\"http://i.imgur.com/2pGDc94.png\" alt=\"\"></p>\n<h4 id=\"box-align-baseline\"><a href=\"#box-align-baseline\" class=\"headerlink\" title=\"box-align:baseline\"></a>box-align:baseline</h4><h6 id=\"css代码-8\"><a href=\"#css代码-8\" class=\"headerlink\" title=\"css代码\"></a>css代码</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box&#123;display: -webkit-box;-webkit-box-align: baseline;width: 800px;border: 1px solid #888;&#125;</span><br><span class=\"line\">.flex&#123;-webkit-box-flex: 1;text-align: center;&#125;</span><br><span class=\"line\">.green&#123;background: lightgreen;width: 120px;height: 110px;&#125;</span><br><span class=\"line\">.blue&#123;background: lightblue;margin: 0 10px;-webkit-box-flex: 3;height: 290px;&#125;</span><br><span class=\"line\">.yellow&#123;background: orange;-webkit-box-flex: 2;height: 220px;&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>运行效果如下：</p>\n</blockquote>\n<p><img src=\"http://i.imgur.com/nAhvyRJ.png\" alt=\"\"></p>\n<h2 id=\"box-pack\"><a href=\"#box-pack\" class=\"headerlink\" title=\"box-pack\"></a>box-pack</h2><p>box-pack决定了父标签水平遗留空间的使用。</p>\n<ul>\n<li>start_（默认）_</li>\n<li>end</li>\n<li>center</li>\n<li>justify</li>\n</ul>\n<p>box-pack大部分的行为表现来说分别对应text-align属性的值：left | right | center | justify。</p>\n<h4 id=\"box-pack-end\"><a href=\"#box-pack-end\" class=\"headerlink\" title=\"box-pack:end\"></a>box-pack:end</h4><h6 id=\"css代码-9\"><a href=\"#css代码-9\" class=\"headerlink\" title=\"css代码\"></a>css代码</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box&#123;display: -webkit-box;-webkit-box-pack: end;border: 1px solid #888;width: 600px;&#125;</span><br><span class=\"line\">.flex&#123;text-align: center;padding: 0 40px;&#125;</span><br><span class=\"line\">.green&#123;background: lightgreen;height: 50px;&#125;</span><br><span class=\"line\">.blue&#123;background: lightblue;height: 90px;&#125;</span><br><span class=\"line\">.yellow&#123;background: orange;height: 20px;&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>运行效果如下：</p>\n</blockquote>\n<p><img src=\"http://i.imgur.com/Z9vJpL9.png\" alt=\"\"></p>\n<h4 id=\"box-pack-justify\"><a href=\"#box-pack-justify\" class=\"headerlink\" title=\"box-pack:justify\"></a>box-pack:justify</h4><h6 id=\"css代码-10\"><a href=\"#css代码-10\" class=\"headerlink\" title=\"css代码\"></a>css代码</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box&#123;display: -webkit-box;-webkit-box-pack: justify;border: 1px solid #888;width: 600px;&#125;</span><br><span class=\"line\">.flex&#123;text-align: center;padding: 0 40px;&#125;</span><br><span class=\"line\">.green&#123;background: lightgreen;height: 50px;&#125;</span><br><span class=\"line\">.blue&#123;background: lightblue;height: 90px;&#125;</span><br><span class=\"line\">.yellow&#123;background: orange;height: 20px;&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>运行效果如下：</p>\n</blockquote>\n<p><img src=\"http://i.imgur.com/bd9bLii.png\" alt=\"\"></p>\n<h4 id=\"box-pack-center\"><a href=\"#box-pack-center\" class=\"headerlink\" title=\"box-pack:center\"></a>box-pack:center</h4><h6 id=\"css代码-11\"><a href=\"#css代码-11\" class=\"headerlink\" title=\"css代码\"></a>css代码</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box&#123;display: -webkit-box;-webkit-box-pack: center;border: 1px solid #888;width: 600px;&#125;</span><br><span class=\"line\">.flex&#123;text-align: center;padding: 0 40px;&#125;</span><br><span class=\"line\">.green&#123;background: lightgreen;height: 50px;&#125;</span><br><span class=\"line\">.blue&#123;background: lightblue;height: 90px;&#125;</span><br><span class=\"line\">.yellow&#123;background: orange;height: 20px;&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>运行效果如下：</p>\n</blockquote>\n<p><img src=\"http://i.imgur.com/fg6sqis.png\" alt=\"\"></p>\n<h2 id=\"父元素属性box-lines\"><a href=\"#父元素属性box-lines\" class=\"headerlink\" title=\"父元素属性box-lines\"></a>父元素属性box-lines</h2><p>box-lines是用来决定子元素是可以换行显示还是就算挤出油还是单行显示。</p>\n<ul>\n<li>single_（默认）_    →    单行显示</li>\n<li>multiple    →    多行显示<blockquote>\n<p>不过目前无论Firefox还是Chrome似乎都对box-lines属性不支持，原因未知。</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"子元素属性box-ordinal-group\"><a href=\"#子元素属性box-ordinal-group\" class=\"headerlink\" title=\"子元素属性box-ordinal-group\"></a>子元素属性box-ordinal-group</h2><p>box-ordinal-group的属性值是有一个数字级别的，决定了你这个父元素的组织内的位置。数值越小，位置就越靠前。举例如下：</p>\n<h6 id=\"css代码-12\"><a href=\"#css代码-12\" class=\"headerlink\" title=\"css代码\"></a>css代码</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box&#123;display: -webkit-box;border: 1px solid #888;width: 600px;&#125;</span><br><span class=\"line\">.flex&#123;text-align: center;padding: 0 40px;&#125;</span><br><span class=\"line\">.green&#123;background: lightgreen;height: 50px;-webkit-box-ordinal-group: 3;&#125;</span><br><span class=\"line\">.blue&#123;background: lightblue;height: 90px;-webkit-box-ordinal-group: 1;&#125;</span><br><span class=\"line\">.yellow&#123;background: orange;height: 20px;-webkit-box-ordinal-group: 2;&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>注意：父元素中的每个子元素都要设置box-ordinal-group值，否则无效果。</strong></p>\n<blockquote>\n<p>运行效果如下：</p>\n</blockquote>\n<p><img src=\"http://i.imgur.com/sYVuMO1.png\" alt=\"\"></p>"},{"title":"英语语法","date":"2018-01-11T16:00:00.000Z","toc":true,"_content":"\n# 代词\n\n## 人称\n\n* 第一人称（I）\n* 第二人称（you）\n* 第三人称（he / she / it）\n\n<!-- more -->\n\n## 数\n\n### 单数\n    \n    I / you / he / she / it\n\n### 复数\n    \n    we / you / they\n\n# (不)定冠词\n\n## 定冠词 (definite article) \n\n英语中的定冠词是 ** the **，用来表示其后的名词短语是确定的。\n\n一般而言，在对话中，the 之后的名词短语是听话人++可以唯一确定的++、或说话人认为听话人可以唯一确定的。\n\n## 不定冠词 (indefinite article)\n\n不定冠词是 ** a / an **，表示其后的名词短语不确定。只用于可数的名词短语的单数形前。\n\n# 动词\n\n## 动词的变位\n\n** 变位是指动词根据++动作的==主语==++、发生时间或方式等等不同而产生的词形变化。**\n\n\n```\n例如：\n(d) I am a boy. 我是一个男孩。\n(e) He is a boy. 他是一个男孩。\n```\n\n\n** 动词“是” 在两个例句中都是动词be不同的词形！因为句子的主语不同，动词的变位也不同（am 和 is）。**\n\n** 需要注意的是动词由于主语的人称和数的不同而产生的变位。 **\n\n*中文里所有的动词都不会因为动作的主语、动作发生的时间或方式不同而产生任何变化。*\n\n** 动词 be 是所有英语动词里最不规则的：==动词 be== 变位后不同的词形数最多，且变位后的词形最复杂。**\n\n```\n更多例子：\nI eat.\nShe eats.\n```\n\n当主语变成第一人称或第三人称时，动词eat的变位就出现了。\n\n**一般动词除了主语为==第三人称单数==时有变位，其他人称一般没有变化。**\n\n```\n例如：\n    I eat bread.\n    You eat bread.\n    He eats bread.   <==(look)\n    We eat bread.\n    You eat bread.\n    They eat bread.\n    \n```\n\n### 动词的第三人称单数变位\n\n所有的可数名词的单数形式以及所有的不可数名词都属于第三人称单数。\n\n第三人称复数代词 they 以及所有的可数名词的复数形式都属于第三人称复数。\n\n## 动词的时态\n\n**时态**是表示一个动作或状态的时间参考的语法范畴。\n\n英语中一般分有两到四种不同的时态：\n\n* 现在时 (present tense) \n* 过去时 (past tense) \n* 将来时 (future tense) \n* 过去将来时 (future-in-the-past tense)\n\n**前面提到的第三人称单数加 -s 的变位，只适用于现在时！**\n\n## 动词的体\n\n体 (aspect) ：描述动作或状态的内部时间织体、而不涉及该动作发生的时间的语法范畴。\n\n中文里有体标记：常见的体有\n\n* 完成体 (perfective aspect) \n* 进行体 (progressive aspect)\n\n```\neg.:\n\n  汉语助词 “了” 就是中文里的完成体标记。\n```\n\n# 一般疑问句\n\n## 一般疑问句的语序\n\n一般疑问句指的是能使用 yes “是”或 no “不是”来回答的问题。\n\n英语的基本语序与汉语相同：++主语 – 谓语 – 宾语++。\n\n用肯定句形成一般疑问句，汉语是直接在句末加上“吗”或“么”等疑问标记词，而带有 be 动词的英语句子需要++将 be 动词提前到主语之前来形成疑问句++。\n\n# 名词\n\n## 可数名词 (count noun)\n像这样有单复数两种词形的名词叫做可数名词。\n\n## 不可数名词 (non-count noun)\n不可数名词，也称为物质名词 (mass noun)。\n\n物质名词没有单复数的词形变化——只有原形一种词形。\n\n```\n例如：\n    milk\n    water\n```\n\n## 名词的数\n\n规则名词的复数形式需要在原形后加上 -s。\n\n```\n例如：\nboy -> boys\ngirl -> girls\n```\n\n> 不定冠词 a/an 只能用在可数名词的单数词形前——复数和物质名词不能在前面加上 a/an。\n\n\n** 有些名词既可以作可数名词，也可以作物质名词，并且通常数性不同时，释义也会有差别。 **\n\n```\n例如：\n(d) a chicken    一只小鸡\n(e) chickens     (多只)小鸡\n(f) chicken      鸡肉\n```\n\n** 除了规则可数名词变复数在词尾加 -s 外，有些名词的复数不规则，需要记忆。 **\n\n```\n例如：\n    man -> men\n    woman -> women\n    child -> children\n```","source":"_posts/englishProgram.md","raw":"---\ntitle: 英语语法\ncategory: 英语\ndate: 2018-01-12\ntoc: true\n---\n\n# 代词\n\n## 人称\n\n* 第一人称（I）\n* 第二人称（you）\n* 第三人称（he / she / it）\n\n<!-- more -->\n\n## 数\n\n### 单数\n    \n    I / you / he / she / it\n\n### 复数\n    \n    we / you / they\n\n# (不)定冠词\n\n## 定冠词 (definite article) \n\n英语中的定冠词是 ** the **，用来表示其后的名词短语是确定的。\n\n一般而言，在对话中，the 之后的名词短语是听话人++可以唯一确定的++、或说话人认为听话人可以唯一确定的。\n\n## 不定冠词 (indefinite article)\n\n不定冠词是 ** a / an **，表示其后的名词短语不确定。只用于可数的名词短语的单数形前。\n\n# 动词\n\n## 动词的变位\n\n** 变位是指动词根据++动作的==主语==++、发生时间或方式等等不同而产生的词形变化。**\n\n\n```\n例如：\n(d) I am a boy. 我是一个男孩。\n(e) He is a boy. 他是一个男孩。\n```\n\n\n** 动词“是” 在两个例句中都是动词be不同的词形！因为句子的主语不同，动词的变位也不同（am 和 is）。**\n\n** 需要注意的是动词由于主语的人称和数的不同而产生的变位。 **\n\n*中文里所有的动词都不会因为动作的主语、动作发生的时间或方式不同而产生任何变化。*\n\n** 动词 be 是所有英语动词里最不规则的：==动词 be== 变位后不同的词形数最多，且变位后的词形最复杂。**\n\n```\n更多例子：\nI eat.\nShe eats.\n```\n\n当主语变成第一人称或第三人称时，动词eat的变位就出现了。\n\n**一般动词除了主语为==第三人称单数==时有变位，其他人称一般没有变化。**\n\n```\n例如：\n    I eat bread.\n    You eat bread.\n    He eats bread.   <==(look)\n    We eat bread.\n    You eat bread.\n    They eat bread.\n    \n```\n\n### 动词的第三人称单数变位\n\n所有的可数名词的单数形式以及所有的不可数名词都属于第三人称单数。\n\n第三人称复数代词 they 以及所有的可数名词的复数形式都属于第三人称复数。\n\n## 动词的时态\n\n**时态**是表示一个动作或状态的时间参考的语法范畴。\n\n英语中一般分有两到四种不同的时态：\n\n* 现在时 (present tense) \n* 过去时 (past tense) \n* 将来时 (future tense) \n* 过去将来时 (future-in-the-past tense)\n\n**前面提到的第三人称单数加 -s 的变位，只适用于现在时！**\n\n## 动词的体\n\n体 (aspect) ：描述动作或状态的内部时间织体、而不涉及该动作发生的时间的语法范畴。\n\n中文里有体标记：常见的体有\n\n* 完成体 (perfective aspect) \n* 进行体 (progressive aspect)\n\n```\neg.:\n\n  汉语助词 “了” 就是中文里的完成体标记。\n```\n\n# 一般疑问句\n\n## 一般疑问句的语序\n\n一般疑问句指的是能使用 yes “是”或 no “不是”来回答的问题。\n\n英语的基本语序与汉语相同：++主语 – 谓语 – 宾语++。\n\n用肯定句形成一般疑问句，汉语是直接在句末加上“吗”或“么”等疑问标记词，而带有 be 动词的英语句子需要++将 be 动词提前到主语之前来形成疑问句++。\n\n# 名词\n\n## 可数名词 (count noun)\n像这样有单复数两种词形的名词叫做可数名词。\n\n## 不可数名词 (non-count noun)\n不可数名词，也称为物质名词 (mass noun)。\n\n物质名词没有单复数的词形变化——只有原形一种词形。\n\n```\n例如：\n    milk\n    water\n```\n\n## 名词的数\n\n规则名词的复数形式需要在原形后加上 -s。\n\n```\n例如：\nboy -> boys\ngirl -> girls\n```\n\n> 不定冠词 a/an 只能用在可数名词的单数词形前——复数和物质名词不能在前面加上 a/an。\n\n\n** 有些名词既可以作可数名词，也可以作物质名词，并且通常数性不同时，释义也会有差别。 **\n\n```\n例如：\n(d) a chicken    一只小鸡\n(e) chickens     (多只)小鸡\n(f) chicken      鸡肉\n```\n\n** 除了规则可数名词变复数在词尾加 -s 外，有些名词的复数不规则，需要记忆。 **\n\n```\n例如：\n    man -> men\n    woman -> women\n    child -> children\n```","slug":"englishProgram","published":1,"updated":"2018-07-19T14:04:23.069Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjjsmxqij0003em0jkxp7r8eo","content":"<h1 id=\"代词\"><a href=\"#代词\" class=\"headerlink\" title=\"代词\"></a>代词</h1><h2 id=\"人称\"><a href=\"#人称\" class=\"headerlink\" title=\"人称\"></a>人称</h2><ul>\n<li>第一人称（I）</li>\n<li>第二人称（you）</li>\n<li>第三人称（he / she / it）</li>\n</ul>\n<a id=\"more\"></a>\n<h2 id=\"数\"><a href=\"#数\" class=\"headerlink\" title=\"数\"></a>数</h2><h3 id=\"单数\"><a href=\"#单数\" class=\"headerlink\" title=\"单数\"></a>单数</h3><pre><code>I / you / he / she / it\n</code></pre><h3 id=\"复数\"><a href=\"#复数\" class=\"headerlink\" title=\"复数\"></a>复数</h3><pre><code>we / you / they\n</code></pre><h1 id=\"不-定冠词\"><a href=\"#不-定冠词\" class=\"headerlink\" title=\"(不)定冠词\"></a>(不)定冠词</h1><h2 id=\"定冠词-definite-article\"><a href=\"#定冠词-definite-article\" class=\"headerlink\" title=\"定冠词 (definite article)\"></a>定冠词 (definite article)</h2><p>英语中的定冠词是 <strong> the </strong>，用来表示其后的名词短语是确定的。</p>\n<p>一般而言，在对话中，the 之后的名词短语是听话人++可以唯一确定的++、或说话人认为听话人可以唯一确定的。</p>\n<h2 id=\"不定冠词-indefinite-article\"><a href=\"#不定冠词-indefinite-article\" class=\"headerlink\" title=\"不定冠词 (indefinite article)\"></a>不定冠词 (indefinite article)</h2><p>不定冠词是 <strong> a / an </strong>，表示其后的名词短语不确定。只用于可数的名词短语的单数形前。</p>\n<h1 id=\"动词\"><a href=\"#动词\" class=\"headerlink\" title=\"动词\"></a>动词</h1><h2 id=\"动词的变位\"><a href=\"#动词的变位\" class=\"headerlink\" title=\"动词的变位\"></a>动词的变位</h2><p><strong> 变位是指动词根据++动作的==主语==++、发生时间或方式等等不同而产生的词形变化。</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例如：</span><br><span class=\"line\">(d) I am a boy. 我是一个男孩。</span><br><span class=\"line\">(e) He is a boy. 他是一个男孩。</span><br></pre></td></tr></table></figure>\n<p><strong> 动词“是” 在两个例句中都是动词be不同的词形！因为句子的主语不同，动词的变位也不同（am 和 is）。</strong></p>\n<p><strong> 需要注意的是动词由于主语的人称和数的不同而产生的变位。 </strong></p>\n<p><em>中文里所有的动词都不会因为动作的主语、动作发生的时间或方式不同而产生任何变化。</em></p>\n<p><strong> 动词 be 是所有英语动词里最不规则的：==动词 be== 变位后不同的词形数最多，且变位后的词形最复杂。</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">更多例子：</span><br><span class=\"line\">I eat.</span><br><span class=\"line\">She eats.</span><br></pre></td></tr></table></figure>\n<p>当主语变成第一人称或第三人称时，动词eat的变位就出现了。</p>\n<p><strong>一般动词除了主语为==第三人称单数==时有变位，其他人称一般没有变化。</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例如：</span><br><span class=\"line\">    I eat bread.</span><br><span class=\"line\">    You eat bread.</span><br><span class=\"line\">    He eats bread.   &lt;==(look)</span><br><span class=\"line\">    We eat bread.</span><br><span class=\"line\">    You eat bread.</span><br><span class=\"line\">    They eat bread.</span><br></pre></td></tr></table></figure>\n<h3 id=\"动词的第三人称单数变位\"><a href=\"#动词的第三人称单数变位\" class=\"headerlink\" title=\"动词的第三人称单数变位\"></a>动词的第三人称单数变位</h3><p>所有的可数名词的单数形式以及所有的不可数名词都属于第三人称单数。</p>\n<p>第三人称复数代词 they 以及所有的可数名词的复数形式都属于第三人称复数。</p>\n<h2 id=\"动词的时态\"><a href=\"#动词的时态\" class=\"headerlink\" title=\"动词的时态\"></a>动词的时态</h2><p><strong>时态</strong>是表示一个动作或状态的时间参考的语法范畴。</p>\n<p>英语中一般分有两到四种不同的时态：</p>\n<ul>\n<li>现在时 (present tense) </li>\n<li>过去时 (past tense) </li>\n<li>将来时 (future tense) </li>\n<li>过去将来时 (future-in-the-past tense)</li>\n</ul>\n<p><strong>前面提到的第三人称单数加 -s 的变位，只适用于现在时！</strong></p>\n<h2 id=\"动词的体\"><a href=\"#动词的体\" class=\"headerlink\" title=\"动词的体\"></a>动词的体</h2><p>体 (aspect) ：描述动作或状态的内部时间织体、而不涉及该动作发生的时间的语法范畴。</p>\n<p>中文里有体标记：常见的体有</p>\n<ul>\n<li>完成体 (perfective aspect) </li>\n<li>进行体 (progressive aspect)</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eg.:</span><br><span class=\"line\"></span><br><span class=\"line\">  汉语助词 “了” 就是中文里的完成体标记。</span><br></pre></td></tr></table></figure>\n<h1 id=\"一般疑问句\"><a href=\"#一般疑问句\" class=\"headerlink\" title=\"一般疑问句\"></a>一般疑问句</h1><h2 id=\"一般疑问句的语序\"><a href=\"#一般疑问句的语序\" class=\"headerlink\" title=\"一般疑问句的语序\"></a>一般疑问句的语序</h2><p>一般疑问句指的是能使用 yes “是”或 no “不是”来回答的问题。</p>\n<p>英语的基本语序与汉语相同：++主语 – 谓语 – 宾语++。</p>\n<p>用肯定句形成一般疑问句，汉语是直接在句末加上“吗”或“么”等疑问标记词，而带有 be 动词的英语句子需要++将 be 动词提前到主语之前来形成疑问句++。</p>\n<h1 id=\"名词\"><a href=\"#名词\" class=\"headerlink\" title=\"名词\"></a>名词</h1><h2 id=\"可数名词-count-noun\"><a href=\"#可数名词-count-noun\" class=\"headerlink\" title=\"可数名词 (count noun)\"></a>可数名词 (count noun)</h2><p>像这样有单复数两种词形的名词叫做可数名词。</p>\n<h2 id=\"不可数名词-non-count-noun\"><a href=\"#不可数名词-non-count-noun\" class=\"headerlink\" title=\"不可数名词 (non-count noun)\"></a>不可数名词 (non-count noun)</h2><p>不可数名词，也称为物质名词 (mass noun)。</p>\n<p>物质名词没有单复数的词形变化——只有原形一种词形。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例如：</span><br><span class=\"line\">    milk</span><br><span class=\"line\">    water</span><br></pre></td></tr></table></figure>\n<h2 id=\"名词的数\"><a href=\"#名词的数\" class=\"headerlink\" title=\"名词的数\"></a>名词的数</h2><p>规则名词的复数形式需要在原形后加上 -s。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例如：</span><br><span class=\"line\">boy -&gt; boys</span><br><span class=\"line\">girl -&gt; girls</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>不定冠词 a/an 只能用在可数名词的单数词形前——复数和物质名词不能在前面加上 a/an。</p>\n</blockquote>\n<p><strong> 有些名词既可以作可数名词，也可以作物质名词，并且通常数性不同时，释义也会有差别。 </strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例如：</span><br><span class=\"line\">(d) a chicken    一只小鸡</span><br><span class=\"line\">(e) chickens     (多只)小鸡</span><br><span class=\"line\">(f) chicken      鸡肉</span><br></pre></td></tr></table></figure>\n<p><strong> 除了规则可数名词变复数在词尾加 -s 外，有些名词的复数不规则，需要记忆。 </strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例如：</span><br><span class=\"line\">    man -&gt; men</span><br><span class=\"line\">    woman -&gt; women</span><br><span class=\"line\">    child -&gt; children</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"代词\"><a href=\"#代词\" class=\"headerlink\" title=\"代词\"></a>代词</h1><h2 id=\"人称\"><a href=\"#人称\" class=\"headerlink\" title=\"人称\"></a>人称</h2><ul>\n<li>第一人称（I）</li>\n<li>第二人称（you）</li>\n<li>第三人称（he / she / it）</li>\n</ul>","more":"<h2 id=\"数\"><a href=\"#数\" class=\"headerlink\" title=\"数\"></a>数</h2><h3 id=\"单数\"><a href=\"#单数\" class=\"headerlink\" title=\"单数\"></a>单数</h3><pre><code>I / you / he / she / it\n</code></pre><h3 id=\"复数\"><a href=\"#复数\" class=\"headerlink\" title=\"复数\"></a>复数</h3><pre><code>we / you / they\n</code></pre><h1 id=\"不-定冠词\"><a href=\"#不-定冠词\" class=\"headerlink\" title=\"(不)定冠词\"></a>(不)定冠词</h1><h2 id=\"定冠词-definite-article\"><a href=\"#定冠词-definite-article\" class=\"headerlink\" title=\"定冠词 (definite article)\"></a>定冠词 (definite article)</h2><p>英语中的定冠词是 <strong> the </strong>，用来表示其后的名词短语是确定的。</p>\n<p>一般而言，在对话中，the 之后的名词短语是听话人++可以唯一确定的++、或说话人认为听话人可以唯一确定的。</p>\n<h2 id=\"不定冠词-indefinite-article\"><a href=\"#不定冠词-indefinite-article\" class=\"headerlink\" title=\"不定冠词 (indefinite article)\"></a>不定冠词 (indefinite article)</h2><p>不定冠词是 <strong> a / an </strong>，表示其后的名词短语不确定。只用于可数的名词短语的单数形前。</p>\n<h1 id=\"动词\"><a href=\"#动词\" class=\"headerlink\" title=\"动词\"></a>动词</h1><h2 id=\"动词的变位\"><a href=\"#动词的变位\" class=\"headerlink\" title=\"动词的变位\"></a>动词的变位</h2><p><strong> 变位是指动词根据++动作的==主语==++、发生时间或方式等等不同而产生的词形变化。</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例如：</span><br><span class=\"line\">(d) I am a boy. 我是一个男孩。</span><br><span class=\"line\">(e) He is a boy. 他是一个男孩。</span><br></pre></td></tr></table></figure>\n<p><strong> 动词“是” 在两个例句中都是动词be不同的词形！因为句子的主语不同，动词的变位也不同（am 和 is）。</strong></p>\n<p><strong> 需要注意的是动词由于主语的人称和数的不同而产生的变位。 </strong></p>\n<p><em>中文里所有的动词都不会因为动作的主语、动作发生的时间或方式不同而产生任何变化。</em></p>\n<p><strong> 动词 be 是所有英语动词里最不规则的：==动词 be== 变位后不同的词形数最多，且变位后的词形最复杂。</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">更多例子：</span><br><span class=\"line\">I eat.</span><br><span class=\"line\">She eats.</span><br></pre></td></tr></table></figure>\n<p>当主语变成第一人称或第三人称时，动词eat的变位就出现了。</p>\n<p><strong>一般动词除了主语为==第三人称单数==时有变位，其他人称一般没有变化。</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例如：</span><br><span class=\"line\">    I eat bread.</span><br><span class=\"line\">    You eat bread.</span><br><span class=\"line\">    He eats bread.   &lt;==(look)</span><br><span class=\"line\">    We eat bread.</span><br><span class=\"line\">    You eat bread.</span><br><span class=\"line\">    They eat bread.</span><br></pre></td></tr></table></figure>\n<h3 id=\"动词的第三人称单数变位\"><a href=\"#动词的第三人称单数变位\" class=\"headerlink\" title=\"动词的第三人称单数变位\"></a>动词的第三人称单数变位</h3><p>所有的可数名词的单数形式以及所有的不可数名词都属于第三人称单数。</p>\n<p>第三人称复数代词 they 以及所有的可数名词的复数形式都属于第三人称复数。</p>\n<h2 id=\"动词的时态\"><a href=\"#动词的时态\" class=\"headerlink\" title=\"动词的时态\"></a>动词的时态</h2><p><strong>时态</strong>是表示一个动作或状态的时间参考的语法范畴。</p>\n<p>英语中一般分有两到四种不同的时态：</p>\n<ul>\n<li>现在时 (present tense) </li>\n<li>过去时 (past tense) </li>\n<li>将来时 (future tense) </li>\n<li>过去将来时 (future-in-the-past tense)</li>\n</ul>\n<p><strong>前面提到的第三人称单数加 -s 的变位，只适用于现在时！</strong></p>\n<h2 id=\"动词的体\"><a href=\"#动词的体\" class=\"headerlink\" title=\"动词的体\"></a>动词的体</h2><p>体 (aspect) ：描述动作或状态的内部时间织体、而不涉及该动作发生的时间的语法范畴。</p>\n<p>中文里有体标记：常见的体有</p>\n<ul>\n<li>完成体 (perfective aspect) </li>\n<li>进行体 (progressive aspect)</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eg.:</span><br><span class=\"line\"></span><br><span class=\"line\">  汉语助词 “了” 就是中文里的完成体标记。</span><br></pre></td></tr></table></figure>\n<h1 id=\"一般疑问句\"><a href=\"#一般疑问句\" class=\"headerlink\" title=\"一般疑问句\"></a>一般疑问句</h1><h2 id=\"一般疑问句的语序\"><a href=\"#一般疑问句的语序\" class=\"headerlink\" title=\"一般疑问句的语序\"></a>一般疑问句的语序</h2><p>一般疑问句指的是能使用 yes “是”或 no “不是”来回答的问题。</p>\n<p>英语的基本语序与汉语相同：++主语 – 谓语 – 宾语++。</p>\n<p>用肯定句形成一般疑问句，汉语是直接在句末加上“吗”或“么”等疑问标记词，而带有 be 动词的英语句子需要++将 be 动词提前到主语之前来形成疑问句++。</p>\n<h1 id=\"名词\"><a href=\"#名词\" class=\"headerlink\" title=\"名词\"></a>名词</h1><h2 id=\"可数名词-count-noun\"><a href=\"#可数名词-count-noun\" class=\"headerlink\" title=\"可数名词 (count noun)\"></a>可数名词 (count noun)</h2><p>像这样有单复数两种词形的名词叫做可数名词。</p>\n<h2 id=\"不可数名词-non-count-noun\"><a href=\"#不可数名词-non-count-noun\" class=\"headerlink\" title=\"不可数名词 (non-count noun)\"></a>不可数名词 (non-count noun)</h2><p>不可数名词，也称为物质名词 (mass noun)。</p>\n<p>物质名词没有单复数的词形变化——只有原形一种词形。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例如：</span><br><span class=\"line\">    milk</span><br><span class=\"line\">    water</span><br></pre></td></tr></table></figure>\n<h2 id=\"名词的数\"><a href=\"#名词的数\" class=\"headerlink\" title=\"名词的数\"></a>名词的数</h2><p>规则名词的复数形式需要在原形后加上 -s。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例如：</span><br><span class=\"line\">boy -&gt; boys</span><br><span class=\"line\">girl -&gt; girls</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>不定冠词 a/an 只能用在可数名词的单数词形前——复数和物质名词不能在前面加上 a/an。</p>\n</blockquote>\n<p><strong> 有些名词既可以作可数名词，也可以作物质名词，并且通常数性不同时，释义也会有差别。 </strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例如：</span><br><span class=\"line\">(d) a chicken    一只小鸡</span><br><span class=\"line\">(e) chickens     (多只)小鸡</span><br><span class=\"line\">(f) chicken      鸡肉</span><br></pre></td></tr></table></figure>\n<p><strong> 除了规则可数名词变复数在词尾加 -s 外，有些名词的复数不规则，需要记忆。 </strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例如：</span><br><span class=\"line\">    man -&gt; men</span><br><span class=\"line\">    woman -&gt; women</span><br><span class=\"line\">    child -&gt; children</span><br></pre></td></tr></table></figure>"},{"title":"禁止手机浏览器、微信浏览器的上下滑动问题","date":"2016-12-24T16:00:00.000Z","_content":"\n前端在编写移动端页面时，尤其微信端页面中，经常会发现微信自带的浏览器有一个很神奇的地方，就是网页可以在浏览器上上下左右的拖拽：\n\n![](/assets/images/gif1.gif)\n\n就像上图，如果在遇到需要在页面上绘制或者做拖拽功能时，很容易跟这个自带功能相冲突的情况。那怎么阻止移动端页面在维信、手机浏览器等上上下可拖拽滑动的问题呢？元宝君找到两个方法。\n\n<!-- more -->\n\n## 用JS在事件监听中添加阻止浏览器默认事件\n\n```\n<script type='text/javascript'>\n\tdocument.querySelector('body').addEventListener('touchstart', function (ev) {\n\t    event.preventDefault();\n\t});\n</script>\n```\n\n**preventDefault()**：将通知 Web 浏览器不要执行与事件关联的默认动作（如果存在这样的动作）。例如，如果 type 属性是 “submit”，在事件传播的任意阶段可以调用任意的事件句柄，通过调用该方法，可以阻止提交表单。注意，如果 Event 对象的 cancelable 属性是 fasle，那么就没有默认动作，或者不能阻止默认动作。无论哪种情况，调用该方法都没有作用。\n\n类似还有：\n\n```\n$(document).on($('a'),'click',function(event){\n    event.preventDefault();    \n})\n```\n\n目的是禁止标签<a>默认的跳转事件。也就说明了event.preventDefault();可以禁止a元素的专属动作。\n\n但是这样用JS阻止了body的默认touch事件，会导致div里面也不能滚动，跟touch相关的事件都失效了，简单粗暴的方法治标不治本。\n\n下面试试第二种方法。\n\n## 使用meta标签\n\n```\n<meta name=\"x5-fullscreen\" content=\"true\">\n<meta name=\"full-screen\" content=\"yes\">\n```\n\n将这两格meta放到head里面，可以让微信，qq，uc浏览器使用全屏模式，全屏模式里，浏览器是不会上下左右滑动出现背景的。","source":"_posts/forbidMobileSwipe.md","raw":"---\ntitle: 禁止手机浏览器、微信浏览器的上下滑动问题\ncategory: 前端\ndate: 2016-12-25\n---\n\n前端在编写移动端页面时，尤其微信端页面中，经常会发现微信自带的浏览器有一个很神奇的地方，就是网页可以在浏览器上上下左右的拖拽：\n\n![](/assets/images/gif1.gif)\n\n就像上图，如果在遇到需要在页面上绘制或者做拖拽功能时，很容易跟这个自带功能相冲突的情况。那怎么阻止移动端页面在维信、手机浏览器等上上下可拖拽滑动的问题呢？元宝君找到两个方法。\n\n<!-- more -->\n\n## 用JS在事件监听中添加阻止浏览器默认事件\n\n```\n<script type='text/javascript'>\n\tdocument.querySelector('body').addEventListener('touchstart', function (ev) {\n\t    event.preventDefault();\n\t});\n</script>\n```\n\n**preventDefault()**：将通知 Web 浏览器不要执行与事件关联的默认动作（如果存在这样的动作）。例如，如果 type 属性是 “submit”，在事件传播的任意阶段可以调用任意的事件句柄，通过调用该方法，可以阻止提交表单。注意，如果 Event 对象的 cancelable 属性是 fasle，那么就没有默认动作，或者不能阻止默认动作。无论哪种情况，调用该方法都没有作用。\n\n类似还有：\n\n```\n$(document).on($('a'),'click',function(event){\n    event.preventDefault();    \n})\n```\n\n目的是禁止标签<a>默认的跳转事件。也就说明了event.preventDefault();可以禁止a元素的专属动作。\n\n但是这样用JS阻止了body的默认touch事件，会导致div里面也不能滚动，跟touch相关的事件都失效了，简单粗暴的方法治标不治本。\n\n下面试试第二种方法。\n\n## 使用meta标签\n\n```\n<meta name=\"x5-fullscreen\" content=\"true\">\n<meta name=\"full-screen\" content=\"yes\">\n```\n\n将这两格meta放到head里面，可以让微信，qq，uc浏览器使用全屏模式，全屏模式里，浏览器是不会上下左右滑动出现背景的。","slug":"forbidMobileSwipe","published":1,"updated":"2018-07-19T14:04:23.069Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjjsmxqil0004em0j3vxbp7ec","content":"<p>前端在编写移动端页面时，尤其微信端页面中，经常会发现微信自带的浏览器有一个很神奇的地方，就是网页可以在浏览器上上下左右的拖拽：</p>\n<p><img src=\"/assets/images/gif1.gif\" alt=\"\"></p>\n<p>就像上图，如果在遇到需要在页面上绘制或者做拖拽功能时，很容易跟这个自带功能相冲突的情况。那怎么阻止移动端页面在维信、手机浏览器等上上下可拖拽滑动的问题呢？元宝君找到两个方法。</p>\n<a id=\"more\"></a>\n<h2 id=\"用JS在事件监听中添加阻止浏览器默认事件\"><a href=\"#用JS在事件监听中添加阻止浏览器默认事件\" class=\"headerlink\" title=\"用JS在事件监听中添加阻止浏览器默认事件\"></a>用JS在事件监听中添加阻止浏览器默认事件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=&apos;text/javascript&apos;&gt;</span><br><span class=\"line\">\tdocument.querySelector(&apos;body&apos;).addEventListener(&apos;touchstart&apos;, function (ev) &#123;</span><br><span class=\"line\">\t    event.preventDefault();</span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>preventDefault()</strong>：将通知 Web 浏览器不要执行与事件关联的默认动作（如果存在这样的动作）。例如，如果 type 属性是 “submit”，在事件传播的任意阶段可以调用任意的事件句柄，通过调用该方法，可以阻止提交表单。注意，如果 Event 对象的 cancelable 属性是 fasle，那么就没有默认动作，或者不能阻止默认动作。无论哪种情况，调用该方法都没有作用。</p>\n<p>类似还有：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(document).on($(&apos;a&apos;),&apos;click&apos;,function(event)&#123;</span><br><span class=\"line\">    event.preventDefault();    </span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>目的是禁止标签<a>默认的跳转事件。也就说明了event.preventDefault();可以禁止a元素的专属动作。</a></p>\n<p>但是这样用JS阻止了body的默认touch事件，会导致div里面也不能滚动，跟touch相关的事件都失效了，简单粗暴的方法治标不治本。</p>\n<p>下面试试第二种方法。</p>\n<h2 id=\"使用meta标签\"><a href=\"#使用meta标签\" class=\"headerlink\" title=\"使用meta标签\"></a>使用meta标签</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;meta name=&quot;x5-fullscreen&quot; content=&quot;true&quot;&gt;</span><br><span class=\"line\">&lt;meta name=&quot;full-screen&quot; content=&quot;yes&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>将这两格meta放到head里面，可以让微信，qq，uc浏览器使用全屏模式，全屏模式里，浏览器是不会上下左右滑动出现背景的。</p>\n","site":{"data":{}},"excerpt":"<p>前端在编写移动端页面时，尤其微信端页面中，经常会发现微信自带的浏览器有一个很神奇的地方，就是网页可以在浏览器上上下左右的拖拽：</p>\n<p><img src=\"/assets/images/gif1.gif\" alt=\"\"></p>\n<p>就像上图，如果在遇到需要在页面上绘制或者做拖拽功能时，很容易跟这个自带功能相冲突的情况。那怎么阻止移动端页面在维信、手机浏览器等上上下可拖拽滑动的问题呢？元宝君找到两个方法。</p>","more":"<h2 id=\"用JS在事件监听中添加阻止浏览器默认事件\"><a href=\"#用JS在事件监听中添加阻止浏览器默认事件\" class=\"headerlink\" title=\"用JS在事件监听中添加阻止浏览器默认事件\"></a>用JS在事件监听中添加阻止浏览器默认事件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=&apos;text/javascript&apos;&gt;</span><br><span class=\"line\">\tdocument.querySelector(&apos;body&apos;).addEventListener(&apos;touchstart&apos;, function (ev) &#123;</span><br><span class=\"line\">\t    event.preventDefault();</span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>preventDefault()</strong>：将通知 Web 浏览器不要执行与事件关联的默认动作（如果存在这样的动作）。例如，如果 type 属性是 “submit”，在事件传播的任意阶段可以调用任意的事件句柄，通过调用该方法，可以阻止提交表单。注意，如果 Event 对象的 cancelable 属性是 fasle，那么就没有默认动作，或者不能阻止默认动作。无论哪种情况，调用该方法都没有作用。</p>\n<p>类似还有：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(document).on($(&apos;a&apos;),&apos;click&apos;,function(event)&#123;</span><br><span class=\"line\">    event.preventDefault();    </span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>目的是禁止标签<a>默认的跳转事件。也就说明了event.preventDefault();可以禁止a元素的专属动作。</a></p>\n<p>但是这样用JS阻止了body的默认touch事件，会导致div里面也不能滚动，跟touch相关的事件都失效了，简单粗暴的方法治标不治本。</p>\n<p>下面试试第二种方法。</p>\n<h2 id=\"使用meta标签\"><a href=\"#使用meta标签\" class=\"headerlink\" title=\"使用meta标签\"></a>使用meta标签</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;meta name=&quot;x5-fullscreen&quot; content=&quot;true&quot;&gt;</span><br><span class=\"line\">&lt;meta name=&quot;full-screen&quot; content=&quot;yes&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>将这两格meta放到head里面，可以让微信，qq，uc浏览器使用全屏模式，全屏模式里，浏览器是不会上下左右滑动出现背景的。</p>"},{"title":"HTML5 Web存储——localStorage","date":"2016-04-11T16:00:00.000Z","_content":"   \n自从开始做H5开发以后，接触了很多h5的新特性，今天元宝君就来说一下H5的新存储属性。\n\nlocalStorage是H5新增的特性，主要功能是本地存储，解决了cookie存储空间不足的问题(cookie中每条cookie的存储空间为4k)，localStorage中一般浏览器支持近5M大小，不同的浏览器中localStorage会有所不同。\n\n# 一、localStorage的优缺点\n\n## localStorage的优点\n\n1.  localStorage拓展了cookie的4K限制\n2.  localStorage会可以将第一次请求的数据直接存储到本地，这个相当于一个5M大小的针对于前端页面的数据库，相比于cookie可以节约带宽（_仅在高版本的浏览器中支持_）\n\n## localStorage的缺点\n\n1.  各个浏览器localstorage的大小不同\n2.  仅IE8以上支持\n3.  localstorage限定为string类型，需要**JSON.stringify()**和**JSON.parse()**方法转换\n4.  localStorage在浏览器的**隐私模式**下不可读取\n5.  localStorage本质上是对字符串的读取，如果存储内容多的话会消耗内存空间，导致页面卡顿\n6.  localStorage不能被爬虫抓取到\n\n# 二、sessionStorage\n\nsessionStorage 方法针对一个 session 进行数据存储。**当用户关闭浏览器窗口后，数据会被删除。**\n\n# 三、使用localStorage\n\n## 判断浏览器是否支持localStorage\n\n```\nif(!window.localStorage){\n    alert('浏览器不支持localstorage!');\n}else{\n    alert(\"浏览器支持localstorage\");\n}\n```\n\n### IE7\n\n![](/assets/images/img11.jpg)\n\n### Chrome\n\n![](/assets/images/img12.jpg)\n\n## 写入localStorage\n\n写入localStroage有三种方法，推荐使用**setItem**:\n\n```\nvar storage=window.localStorage;\nstorage[\"a\"]=1;\n   storage.a=1;\n   storage.setItem(\"a\",1);\t//三种写法任意使用一个\nconsole.log(typeof(storage.a));\n```\n\n运行结果：\n\n![](/assets/images/img13.jpg)\n\n## 读取localStorage\n\n读取localStroage同样有三种方法，推荐使用**getItem**:\n\n```\nvar storage=window.localStorage;\nvar result = storage[\"a\"];\n   var result = storage.a;\n   var result = storage.getItem(\"a\");\t//三种写法任意使用一个\nconsole.log(result);\n```\n\n## 删除全部localStorage\n\n```\nvar storage=window.localStorage;\nstorage.setItem(\"a\",3);\nstorage.clear();\n```\n\n## 删除localStorage中的一条\n\n```\nvar storage=window.localStorage;\nstorage.setItem(\"a\",3);\nstorage.removeItem(\"a\");\n```\n\n> 特别提醒：\n将JSON存入localStorage中时会被自动转换成为字符串形式，此时可以使用**JSON.stringify()**方法将JSON转换成为JSON字符串；在读取JSON型localStorage时，使用**JSON.parse()**方法读将JSON字符串转换成为JSON对象。","source":"_posts/html5Storage.md","raw":"---\ntitle: HTML5 Web存储——localStorage\ncategory: 前端\ndate: 2016-04-12\n---\n   \n自从开始做H5开发以后，接触了很多h5的新特性，今天元宝君就来说一下H5的新存储属性。\n\nlocalStorage是H5新增的特性，主要功能是本地存储，解决了cookie存储空间不足的问题(cookie中每条cookie的存储空间为4k)，localStorage中一般浏览器支持近5M大小，不同的浏览器中localStorage会有所不同。\n\n# 一、localStorage的优缺点\n\n## localStorage的优点\n\n1.  localStorage拓展了cookie的4K限制\n2.  localStorage会可以将第一次请求的数据直接存储到本地，这个相当于一个5M大小的针对于前端页面的数据库，相比于cookie可以节约带宽（_仅在高版本的浏览器中支持_）\n\n## localStorage的缺点\n\n1.  各个浏览器localstorage的大小不同\n2.  仅IE8以上支持\n3.  localstorage限定为string类型，需要**JSON.stringify()**和**JSON.parse()**方法转换\n4.  localStorage在浏览器的**隐私模式**下不可读取\n5.  localStorage本质上是对字符串的读取，如果存储内容多的话会消耗内存空间，导致页面卡顿\n6.  localStorage不能被爬虫抓取到\n\n# 二、sessionStorage\n\nsessionStorage 方法针对一个 session 进行数据存储。**当用户关闭浏览器窗口后，数据会被删除。**\n\n# 三、使用localStorage\n\n## 判断浏览器是否支持localStorage\n\n```\nif(!window.localStorage){\n    alert('浏览器不支持localstorage!');\n}else{\n    alert(\"浏览器支持localstorage\");\n}\n```\n\n### IE7\n\n![](/assets/images/img11.jpg)\n\n### Chrome\n\n![](/assets/images/img12.jpg)\n\n## 写入localStorage\n\n写入localStroage有三种方法，推荐使用**setItem**:\n\n```\nvar storage=window.localStorage;\nstorage[\"a\"]=1;\n   storage.a=1;\n   storage.setItem(\"a\",1);\t//三种写法任意使用一个\nconsole.log(typeof(storage.a));\n```\n\n运行结果：\n\n![](/assets/images/img13.jpg)\n\n## 读取localStorage\n\n读取localStroage同样有三种方法，推荐使用**getItem**:\n\n```\nvar storage=window.localStorage;\nvar result = storage[\"a\"];\n   var result = storage.a;\n   var result = storage.getItem(\"a\");\t//三种写法任意使用一个\nconsole.log(result);\n```\n\n## 删除全部localStorage\n\n```\nvar storage=window.localStorage;\nstorage.setItem(\"a\",3);\nstorage.clear();\n```\n\n## 删除localStorage中的一条\n\n```\nvar storage=window.localStorage;\nstorage.setItem(\"a\",3);\nstorage.removeItem(\"a\");\n```\n\n> 特别提醒：\n将JSON存入localStorage中时会被自动转换成为字符串形式，此时可以使用**JSON.stringify()**方法将JSON转换成为JSON字符串；在读取JSON型localStorage时，使用**JSON.parse()**方法读将JSON字符串转换成为JSON对象。","slug":"html5Storage","published":1,"updated":"2018-07-19T14:04:23.070Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjjsmxqim0005em0j1g5b6klf","content":"<p>自从开始做H5开发以后，接触了很多h5的新特性，今天元宝君就来说一下H5的新存储属性。</p>\n<p>localStorage是H5新增的特性，主要功能是本地存储，解决了cookie存储空间不足的问题(cookie中每条cookie的存储空间为4k)，localStorage中一般浏览器支持近5M大小，不同的浏览器中localStorage会有所不同。</p>\n<h1 id=\"一、localStorage的优缺点\"><a href=\"#一、localStorage的优缺点\" class=\"headerlink\" title=\"一、localStorage的优缺点\"></a>一、localStorage的优缺点</h1><h2 id=\"localStorage的优点\"><a href=\"#localStorage的优点\" class=\"headerlink\" title=\"localStorage的优点\"></a>localStorage的优点</h2><ol>\n<li>localStorage拓展了cookie的4K限制</li>\n<li>localStorage会可以将第一次请求的数据直接存储到本地，这个相当于一个5M大小的针对于前端页面的数据库，相比于cookie可以节约带宽（<em>仅在高版本的浏览器中支持</em>）</li>\n</ol>\n<h2 id=\"localStorage的缺点\"><a href=\"#localStorage的缺点\" class=\"headerlink\" title=\"localStorage的缺点\"></a>localStorage的缺点</h2><ol>\n<li>各个浏览器localstorage的大小不同</li>\n<li>仅IE8以上支持</li>\n<li>localstorage限定为string类型，需要<strong>JSON.stringify()</strong>和<strong>JSON.parse()</strong>方法转换</li>\n<li>localStorage在浏览器的<strong>隐私模式</strong>下不可读取</li>\n<li>localStorage本质上是对字符串的读取，如果存储内容多的话会消耗内存空间，导致页面卡顿</li>\n<li>localStorage不能被爬虫抓取到</li>\n</ol>\n<h1 id=\"二、sessionStorage\"><a href=\"#二、sessionStorage\" class=\"headerlink\" title=\"二、sessionStorage\"></a>二、sessionStorage</h1><p>sessionStorage 方法针对一个 session 进行数据存储。<strong>当用户关闭浏览器窗口后，数据会被删除。</strong></p>\n<h1 id=\"三、使用localStorage\"><a href=\"#三、使用localStorage\" class=\"headerlink\" title=\"三、使用localStorage\"></a>三、使用localStorage</h1><h2 id=\"判断浏览器是否支持localStorage\"><a href=\"#判断浏览器是否支持localStorage\" class=\"headerlink\" title=\"判断浏览器是否支持localStorage\"></a>判断浏览器是否支持localStorage</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if(!window.localStorage)&#123;</span><br><span class=\"line\">    alert(&apos;浏览器不支持localstorage!&apos;);</span><br><span class=\"line\">&#125;else&#123;</span><br><span class=\"line\">    alert(&quot;浏览器支持localstorage&quot;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"IE7\"><a href=\"#IE7\" class=\"headerlink\" title=\"IE7\"></a>IE7</h3><p><img src=\"/assets/images/img11.jpg\" alt=\"\"></p>\n<h3 id=\"Chrome\"><a href=\"#Chrome\" class=\"headerlink\" title=\"Chrome\"></a>Chrome</h3><p><img src=\"/assets/images/img12.jpg\" alt=\"\"></p>\n<h2 id=\"写入localStorage\"><a href=\"#写入localStorage\" class=\"headerlink\" title=\"写入localStorage\"></a>写入localStorage</h2><p>写入localStroage有三种方法，推荐使用<strong>setItem</strong>:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var storage=window.localStorage;</span><br><span class=\"line\">storage[&quot;a&quot;]=1;</span><br><span class=\"line\">   storage.a=1;</span><br><span class=\"line\">   storage.setItem(&quot;a&quot;,1);\t//三种写法任意使用一个</span><br><span class=\"line\">console.log(typeof(storage.a));</span><br></pre></td></tr></table></figure>\n<p>运行结果：</p>\n<p><img src=\"/assets/images/img13.jpg\" alt=\"\"></p>\n<h2 id=\"读取localStorage\"><a href=\"#读取localStorage\" class=\"headerlink\" title=\"读取localStorage\"></a>读取localStorage</h2><p>读取localStroage同样有三种方法，推荐使用<strong>getItem</strong>:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var storage=window.localStorage;</span><br><span class=\"line\">var result = storage[&quot;a&quot;];</span><br><span class=\"line\">   var result = storage.a;</span><br><span class=\"line\">   var result = storage.getItem(&quot;a&quot;);\t//三种写法任意使用一个</span><br><span class=\"line\">console.log(result);</span><br></pre></td></tr></table></figure>\n<h2 id=\"删除全部localStorage\"><a href=\"#删除全部localStorage\" class=\"headerlink\" title=\"删除全部localStorage\"></a>删除全部localStorage</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var storage=window.localStorage;</span><br><span class=\"line\">storage.setItem(&quot;a&quot;,3);</span><br><span class=\"line\">storage.clear();</span><br></pre></td></tr></table></figure>\n<h2 id=\"删除localStorage中的一条\"><a href=\"#删除localStorage中的一条\" class=\"headerlink\" title=\"删除localStorage中的一条\"></a>删除localStorage中的一条</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var storage=window.localStorage;</span><br><span class=\"line\">storage.setItem(&quot;a&quot;,3);</span><br><span class=\"line\">storage.removeItem(&quot;a&quot;);</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>特别提醒：<br>将JSON存入localStorage中时会被自动转换成为字符串形式，此时可以使用<strong>JSON.stringify()</strong>方法将JSON转换成为JSON字符串；在读取JSON型localStorage时，使用<strong>JSON.parse()</strong>方法读将JSON字符串转换成为JSON对象。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p>自从开始做H5开发以后，接触了很多h5的新特性，今天元宝君就来说一下H5的新存储属性。</p>\n<p>localStorage是H5新增的特性，主要功能是本地存储，解决了cookie存储空间不足的问题(cookie中每条cookie的存储空间为4k)，localStorage中一般浏览器支持近5M大小，不同的浏览器中localStorage会有所不同。</p>\n<h1 id=\"一、localStorage的优缺点\"><a href=\"#一、localStorage的优缺点\" class=\"headerlink\" title=\"一、localStorage的优缺点\"></a>一、localStorage的优缺点</h1><h2 id=\"localStorage的优点\"><a href=\"#localStorage的优点\" class=\"headerlink\" title=\"localStorage的优点\"></a>localStorage的优点</h2><ol>\n<li>localStorage拓展了cookie的4K限制</li>\n<li>localStorage会可以将第一次请求的数据直接存储到本地，这个相当于一个5M大小的针对于前端页面的数据库，相比于cookie可以节约带宽（<em>仅在高版本的浏览器中支持</em>）</li>\n</ol>\n<h2 id=\"localStorage的缺点\"><a href=\"#localStorage的缺点\" class=\"headerlink\" title=\"localStorage的缺点\"></a>localStorage的缺点</h2><ol>\n<li>各个浏览器localstorage的大小不同</li>\n<li>仅IE8以上支持</li>\n<li>localstorage限定为string类型，需要<strong>JSON.stringify()</strong>和<strong>JSON.parse()</strong>方法转换</li>\n<li>localStorage在浏览器的<strong>隐私模式</strong>下不可读取</li>\n<li>localStorage本质上是对字符串的读取，如果存储内容多的话会消耗内存空间，导致页面卡顿</li>\n<li>localStorage不能被爬虫抓取到</li>\n</ol>\n<h1 id=\"二、sessionStorage\"><a href=\"#二、sessionStorage\" class=\"headerlink\" title=\"二、sessionStorage\"></a>二、sessionStorage</h1><p>sessionStorage 方法针对一个 session 进行数据存储。<strong>当用户关闭浏览器窗口后，数据会被删除。</strong></p>\n<h1 id=\"三、使用localStorage\"><a href=\"#三、使用localStorage\" class=\"headerlink\" title=\"三、使用localStorage\"></a>三、使用localStorage</h1><h2 id=\"判断浏览器是否支持localStorage\"><a href=\"#判断浏览器是否支持localStorage\" class=\"headerlink\" title=\"判断浏览器是否支持localStorage\"></a>判断浏览器是否支持localStorage</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if(!window.localStorage)&#123;</span><br><span class=\"line\">    alert(&apos;浏览器不支持localstorage!&apos;);</span><br><span class=\"line\">&#125;else&#123;</span><br><span class=\"line\">    alert(&quot;浏览器支持localstorage&quot;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"IE7\"><a href=\"#IE7\" class=\"headerlink\" title=\"IE7\"></a>IE7</h3><p><img src=\"/assets/images/img11.jpg\" alt=\"\"></p>\n<h3 id=\"Chrome\"><a href=\"#Chrome\" class=\"headerlink\" title=\"Chrome\"></a>Chrome</h3><p><img src=\"/assets/images/img12.jpg\" alt=\"\"></p>\n<h2 id=\"写入localStorage\"><a href=\"#写入localStorage\" class=\"headerlink\" title=\"写入localStorage\"></a>写入localStorage</h2><p>写入localStroage有三种方法，推荐使用<strong>setItem</strong>:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var storage=window.localStorage;</span><br><span class=\"line\">storage[&quot;a&quot;]=1;</span><br><span class=\"line\">   storage.a=1;</span><br><span class=\"line\">   storage.setItem(&quot;a&quot;,1);\t//三种写法任意使用一个</span><br><span class=\"line\">console.log(typeof(storage.a));</span><br></pre></td></tr></table></figure>\n<p>运行结果：</p>\n<p><img src=\"/assets/images/img13.jpg\" alt=\"\"></p>\n<h2 id=\"读取localStorage\"><a href=\"#读取localStorage\" class=\"headerlink\" title=\"读取localStorage\"></a>读取localStorage</h2><p>读取localStroage同样有三种方法，推荐使用<strong>getItem</strong>:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var storage=window.localStorage;</span><br><span class=\"line\">var result = storage[&quot;a&quot;];</span><br><span class=\"line\">   var result = storage.a;</span><br><span class=\"line\">   var result = storage.getItem(&quot;a&quot;);\t//三种写法任意使用一个</span><br><span class=\"line\">console.log(result);</span><br></pre></td></tr></table></figure>\n<h2 id=\"删除全部localStorage\"><a href=\"#删除全部localStorage\" class=\"headerlink\" title=\"删除全部localStorage\"></a>删除全部localStorage</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var storage=window.localStorage;</span><br><span class=\"line\">storage.setItem(&quot;a&quot;,3);</span><br><span class=\"line\">storage.clear();</span><br></pre></td></tr></table></figure>\n<h2 id=\"删除localStorage中的一条\"><a href=\"#删除localStorage中的一条\" class=\"headerlink\" title=\"删除localStorage中的一条\"></a>删除localStorage中的一条</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var storage=window.localStorage;</span><br><span class=\"line\">storage.setItem(&quot;a&quot;,3);</span><br><span class=\"line\">storage.removeItem(&quot;a&quot;);</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>特别提醒：<br>将JSON存入localStorage中时会被自动转换成为字符串形式，此时可以使用<strong>JSON.stringify()</strong>方法将JSON转换成为JSON字符串；在读取JSON型localStorage时，使用<strong>JSON.parse()</strong>方法读将JSON字符串转换成为JSON对象。</p>\n</blockquote>\n"},{"title":"安装atom插件","date":"2017-01-18T16:00:00.000Z","_content":"\natom是Github开发的一款前端编辑软件，好用程度几乎直逼sublime，重点就是atom和sublime一样支持很多很多的插件。所以为了让atom更适合个人的编辑习惯，我们要自己安装一些喜欢的插件，跟元宝君一起来安装吧。\n我们打开atom，在settings中会找到”Install”选项，我们可以在搜索框中查找所需的插件并安装。\n\n<!-- more -->\n\n![](/assets/images/img10.png)\n\n但是相信很多朋友跟元宝君一样，发现这样的安装方式经常无法安装上插件，所以呢就需要我们自己从Github上找到插件的git仓库地址，自己动手安装啦。\n\n在git bash中进入：**C:\\Users\\用户名.atom\\packages**\n\n打开Github上插件的主页，复制插件的git仓库地址\n\n回到git bash中clone:\n\n`\t\ngit clone https://github.com/xxx/.../xxx.git\n`\n进入下载下来的文件夹中：\n\n`\t\ncd tool-bar/\n`\n\n安装：\n\n`\t\nnpm install\n`\n\n**完成！**","source":"_posts/installAtomPlugin.md","raw":"---\ntitle: 安装atom插件\ncategory: 前端\ndate: 2017-01-19\n---\n\natom是Github开发的一款前端编辑软件，好用程度几乎直逼sublime，重点就是atom和sublime一样支持很多很多的插件。所以为了让atom更适合个人的编辑习惯，我们要自己安装一些喜欢的插件，跟元宝君一起来安装吧。\n我们打开atom，在settings中会找到”Install”选项，我们可以在搜索框中查找所需的插件并安装。\n\n<!-- more -->\n\n![](/assets/images/img10.png)\n\n但是相信很多朋友跟元宝君一样，发现这样的安装方式经常无法安装上插件，所以呢就需要我们自己从Github上找到插件的git仓库地址，自己动手安装啦。\n\n在git bash中进入：**C:\\Users\\用户名.atom\\packages**\n\n打开Github上插件的主页，复制插件的git仓库地址\n\n回到git bash中clone:\n\n`\t\ngit clone https://github.com/xxx/.../xxx.git\n`\n进入下载下来的文件夹中：\n\n`\t\ncd tool-bar/\n`\n\n安装：\n\n`\t\nnpm install\n`\n\n**完成！**","slug":"installAtomPlugin","published":1,"updated":"2018-07-19T14:04:23.070Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjjsmxqip0007em0jnajk329c","content":"<p>atom是Github开发的一款前端编辑软件，好用程度几乎直逼sublime，重点就是atom和sublime一样支持很多很多的插件。所以为了让atom更适合个人的编辑习惯，我们要自己安装一些喜欢的插件，跟元宝君一起来安装吧。<br>我们打开atom，在settings中会找到”Install”选项，我们可以在搜索框中查找所需的插件并安装。</p>\n<a id=\"more\"></a>\n<p><img src=\"/assets/images/img10.png\" alt=\"\"></p>\n<p>但是相信很多朋友跟元宝君一样，发现这样的安装方式经常无法安装上插件，所以呢就需要我们自己从Github上找到插件的git仓库地址，自己动手安装啦。</p>\n<p>在git bash中进入：<strong>C:\\Users\\用户名.atom\\packages</strong></p>\n<p>打开Github上插件的主页，复制插件的git仓库地址</p>\n<p>回到git bash中clone:</p>\n<p><code>git clone https://github.com/xxx/.../xxx.git</code><br>进入下载下来的文件夹中：</p>\n<p><code>cd tool-bar/</code></p>\n<p>安装：</p>\n<p><code>npm install</code></p>\n<p><strong>完成！</strong></p>\n","site":{"data":{}},"excerpt":"<p>atom是Github开发的一款前端编辑软件，好用程度几乎直逼sublime，重点就是atom和sublime一样支持很多很多的插件。所以为了让atom更适合个人的编辑习惯，我们要自己安装一些喜欢的插件，跟元宝君一起来安装吧。<br>我们打开atom，在settings中会找到”Install”选项，我们可以在搜索框中查找所需的插件并安装。</p>","more":"<p><img src=\"/assets/images/img10.png\" alt=\"\"></p>\n<p>但是相信很多朋友跟元宝君一样，发现这样的安装方式经常无法安装上插件，所以呢就需要我们自己从Github上找到插件的git仓库地址，自己动手安装啦。</p>\n<p>在git bash中进入：<strong>C:\\Users\\用户名.atom\\packages</strong></p>\n<p>打开Github上插件的主页，复制插件的git仓库地址</p>\n<p>回到git bash中clone:</p>\n<p><code>git clone https://github.com/xxx/.../xxx.git</code><br>进入下载下来的文件夹中：</p>\n<p><code>cd tool-bar/</code></p>\n<p>安装：</p>\n<p><code>npm install</code></p>\n<p><strong>完成！</strong></p>"},{"title":"Hexo搭建Github博客","date":"2016-11-11T16:00:00.000Z","_content":"\n作为一名前端居然没有一个自己的个人网站简直low啊，元宝工作这么久一直想有一个自己的个人网站，之前有试过Github提供的[Github Page](https://pages.github.com/)创建个站，不过全部框架需要自己写，本君（最近深中“三生三世”的毒）平时工作也没有时间设计页面，所以那个网站就不了了之了。这里有一个[学习 Github Page 教你分分钟搭建自己的博客](https://github.com/dwqs/blog)的教程可以参考。\n\n后来偶然间看到hexo搭配Github可以搭建一个有设计有框架的使用blog，元宝想都没想直接开始啦！特此用这篇文章记录一下完成的过程。\n\n<!-- more -->\n\n## 安装Node\n\n到[Node.js官网](http://nodejs.cn/)下载相应平台的最新版本，一路安装即可。\n\n## 安装Git bash\n\n用于把本地的hexo内容提交到github上去.\n\n## 安装Hexo\n\nNode和Git bash都安装好后,本地创建一个文件夹,如myBlog,用于存放hexo的配置文件,然后进入myBlog里安装Hexo:\n\n`\t\nnpm install -g hexo\n`\n\n## 初始化hexo\n\n`\t\nhexo init\n`\n\n## 利用hexo指令安装一个完整的hexo项目\n\n`\nhexo generate（简写：hexo g)\n`\n\n## 在本地运行hexo项目\n\n`\t\nhexo server(简写：hexo s)\n`\n\n> 注意：运行hexo s后出现页面打不开的情况时，先检查端口号是否被占用。hexo项目默认端口号为**4000**。如果电脑上安装了**“福昕阅读器”**，4000端口就被该软件占用了。\n\n### 解决方法:\n\n`\t\nhexo s -p 5000 (换个新的未使用的端口号)\n`\n\n* * *\n\n现在我们本地的hexo博客项目已经创建好了，看一下我们的项目结构：\n\n![](/assets/images/img9.png)\n\n在浏览器上打开：[localhost:5000](localhost:5000)\n\n** mac上似乎端口号是4000\n\n![](/assets/images/img2.png)\n\n此时项目的框架主题用的是最初默认的：**landscape**\n\n本宝觉得这个主题实在太单调了，百度了一个比较喜欢的主题： **yilia**\n\n## 更换主题yilia\n\n### 打开[yilia](https://github.com/litten/hexo-theme-yilia)的Github主页\n\n### 安装yilia主题\n\n在git bash命令行中进入hexo创建的项目中，如本宝的：myBlog路径\n\n执行安装命令：\n\n`\ngit clone https://github.com/litten/hexo-theme-yilia.git themes/yilia\n`\n\n### 配置主题\n\n![](/assets/images/img3.png)\n\n修改hexo根目录下的 _config.yml ： theme: yilia\n\n![](/assets/images/img4.png)\n\n### 更新\n\n```\ncd themes/yilia\ngit pull\n```\n\n![](/assets/images/img1.png)\n\n完成后效果如下：\n\n![](/assets/images/img5.png)\n\n很多自定义框架的部分，都可以在项目根目录下的——config.yml文件中修改。\n\n* * *\n\n好啦，本地的博客项目已经搭建好啦，怎样把它部署到Github上用Github域名访问我们的博客呢？\n\n### 创建Github账号\n\n这个不用我说了吧，直接去Github官网注册就好啦，以前有的就直接用咯。\n\n### 创建git仓库\n\n![](/assets/images/img6.png)\n\n> 注意：仓库名必须为: **yourGithubUsername.github.io**\n\n这样可以保证自己的博客可以用： **[https://yourGithubUsername.github.io/](https://yourGithubUsername.github.io/)** 直接访问\n\n### 关联自己的Github账号\n\n打开根目录下的_config.yml文件，翻到最下面：\n\n![](/assets/images/img8.png)\n\n修改deploy配置：\n\n```\ndeploy:\n  type: git\n  repo: https://github.com/yourGithubUsername/yourGithubUsername.github.io.git\n  branch: master\n```\n\n### 上传hexo博客项目\n\n首先安装上传指令，在根目录下执行：\n\n`\nnpm install hexo-deployer-git --save（hexo 3.0版本后执行此句无BUG）\n`\n\n安装成功后，执行上传命令：\n\n`\nhexo deploy(简写： hexo d)\n`\n### 浏览线上效果\n\n然后再浏览器中输入[http://yourGithubUsername.github.io/](http://yourGithubUsername.github.io/)就行啦！\n\n* * *\n\n**补充：**\n\n每次在本地发表文章的步骤是：\n\n发布markdown文章\nhexo框架支持markdown文档和语法，所有博客添加在source/_post目录下：\n\n![](/assets/images/img7.png)\n\n博客写好后，执行部署指令：\n\n```\nhexo clean\nhexo generate\nhexo deploy\n```\n\n#### hexo d报错集锦：\n\n##### 情况一\n\n![](/assets/images/img13.png)\n\n解决方法：\n\n`\ngit config --global core.autocrlf false\n`","source":"_posts/useHexoToBuildBlog.md","raw":"---\ntitle: Hexo搭建Github博客\ncategory: 前端\ndate: 2016-11-12\n---\n\n作为一名前端居然没有一个自己的个人网站简直low啊，元宝工作这么久一直想有一个自己的个人网站，之前有试过Github提供的[Github Page](https://pages.github.com/)创建个站，不过全部框架需要自己写，本君（最近深中“三生三世”的毒）平时工作也没有时间设计页面，所以那个网站就不了了之了。这里有一个[学习 Github Page 教你分分钟搭建自己的博客](https://github.com/dwqs/blog)的教程可以参考。\n\n后来偶然间看到hexo搭配Github可以搭建一个有设计有框架的使用blog，元宝想都没想直接开始啦！特此用这篇文章记录一下完成的过程。\n\n<!-- more -->\n\n## 安装Node\n\n到[Node.js官网](http://nodejs.cn/)下载相应平台的最新版本，一路安装即可。\n\n## 安装Git bash\n\n用于把本地的hexo内容提交到github上去.\n\n## 安装Hexo\n\nNode和Git bash都安装好后,本地创建一个文件夹,如myBlog,用于存放hexo的配置文件,然后进入myBlog里安装Hexo:\n\n`\t\nnpm install -g hexo\n`\n\n## 初始化hexo\n\n`\t\nhexo init\n`\n\n## 利用hexo指令安装一个完整的hexo项目\n\n`\nhexo generate（简写：hexo g)\n`\n\n## 在本地运行hexo项目\n\n`\t\nhexo server(简写：hexo s)\n`\n\n> 注意：运行hexo s后出现页面打不开的情况时，先检查端口号是否被占用。hexo项目默认端口号为**4000**。如果电脑上安装了**“福昕阅读器”**，4000端口就被该软件占用了。\n\n### 解决方法:\n\n`\t\nhexo s -p 5000 (换个新的未使用的端口号)\n`\n\n* * *\n\n现在我们本地的hexo博客项目已经创建好了，看一下我们的项目结构：\n\n![](/assets/images/img9.png)\n\n在浏览器上打开：[localhost:5000](localhost:5000)\n\n** mac上似乎端口号是4000\n\n![](/assets/images/img2.png)\n\n此时项目的框架主题用的是最初默认的：**landscape**\n\n本宝觉得这个主题实在太单调了，百度了一个比较喜欢的主题： **yilia**\n\n## 更换主题yilia\n\n### 打开[yilia](https://github.com/litten/hexo-theme-yilia)的Github主页\n\n### 安装yilia主题\n\n在git bash命令行中进入hexo创建的项目中，如本宝的：myBlog路径\n\n执行安装命令：\n\n`\ngit clone https://github.com/litten/hexo-theme-yilia.git themes/yilia\n`\n\n### 配置主题\n\n![](/assets/images/img3.png)\n\n修改hexo根目录下的 _config.yml ： theme: yilia\n\n![](/assets/images/img4.png)\n\n### 更新\n\n```\ncd themes/yilia\ngit pull\n```\n\n![](/assets/images/img1.png)\n\n完成后效果如下：\n\n![](/assets/images/img5.png)\n\n很多自定义框架的部分，都可以在项目根目录下的——config.yml文件中修改。\n\n* * *\n\n好啦，本地的博客项目已经搭建好啦，怎样把它部署到Github上用Github域名访问我们的博客呢？\n\n### 创建Github账号\n\n这个不用我说了吧，直接去Github官网注册就好啦，以前有的就直接用咯。\n\n### 创建git仓库\n\n![](/assets/images/img6.png)\n\n> 注意：仓库名必须为: **yourGithubUsername.github.io**\n\n这样可以保证自己的博客可以用： **[https://yourGithubUsername.github.io/](https://yourGithubUsername.github.io/)** 直接访问\n\n### 关联自己的Github账号\n\n打开根目录下的_config.yml文件，翻到最下面：\n\n![](/assets/images/img8.png)\n\n修改deploy配置：\n\n```\ndeploy:\n  type: git\n  repo: https://github.com/yourGithubUsername/yourGithubUsername.github.io.git\n  branch: master\n```\n\n### 上传hexo博客项目\n\n首先安装上传指令，在根目录下执行：\n\n`\nnpm install hexo-deployer-git --save（hexo 3.0版本后执行此句无BUG）\n`\n\n安装成功后，执行上传命令：\n\n`\nhexo deploy(简写： hexo d)\n`\n### 浏览线上效果\n\n然后再浏览器中输入[http://yourGithubUsername.github.io/](http://yourGithubUsername.github.io/)就行啦！\n\n* * *\n\n**补充：**\n\n每次在本地发表文章的步骤是：\n\n发布markdown文章\nhexo框架支持markdown文档和语法，所有博客添加在source/_post目录下：\n\n![](/assets/images/img7.png)\n\n博客写好后，执行部署指令：\n\n```\nhexo clean\nhexo generate\nhexo deploy\n```\n\n#### hexo d报错集锦：\n\n##### 情况一\n\n![](/assets/images/img13.png)\n\n解决方法：\n\n`\ngit config --global core.autocrlf false\n`","slug":"useHexoToBuildBlog","published":1,"updated":"2018-07-19T14:04:23.070Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjjsmxqiq0008em0jng1xqd10","content":"<p>作为一名前端居然没有一个自己的个人网站简直low啊，元宝工作这么久一直想有一个自己的个人网站，之前有试过Github提供的<a href=\"https://pages.github.com/\" target=\"_blank\" rel=\"noopener\">Github Page</a>创建个站，不过全部框架需要自己写，本君（最近深中“三生三世”的毒）平时工作也没有时间设计页面，所以那个网站就不了了之了。这里有一个<a href=\"https://github.com/dwqs/blog\" target=\"_blank\" rel=\"noopener\">学习 Github Page 教你分分钟搭建自己的博客</a>的教程可以参考。</p>\n<p>后来偶然间看到hexo搭配Github可以搭建一个有设计有框架的使用blog，元宝想都没想直接开始啦！特此用这篇文章记录一下完成的过程。</p>\n<a id=\"more\"></a>\n<h2 id=\"安装Node\"><a href=\"#安装Node\" class=\"headerlink\" title=\"安装Node\"></a>安装Node</h2><p>到<a href=\"http://nodejs.cn/\" target=\"_blank\" rel=\"noopener\">Node.js官网</a>下载相应平台的最新版本，一路安装即可。</p>\n<h2 id=\"安装Git-bash\"><a href=\"#安装Git-bash\" class=\"headerlink\" title=\"安装Git bash\"></a>安装Git bash</h2><p>用于把本地的hexo内容提交到github上去.</p>\n<h2 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h2><p>Node和Git bash都安装好后,本地创建一个文件夹,如myBlog,用于存放hexo的配置文件,然后进入myBlog里安装Hexo:</p>\n<p><code>npm install -g hexo</code></p>\n<h2 id=\"初始化hexo\"><a href=\"#初始化hexo\" class=\"headerlink\" title=\"初始化hexo\"></a>初始化hexo</h2><p><code>hexo init</code></p>\n<h2 id=\"利用hexo指令安装一个完整的hexo项目\"><a href=\"#利用hexo指令安装一个完整的hexo项目\" class=\"headerlink\" title=\"利用hexo指令安装一个完整的hexo项目\"></a>利用hexo指令安装一个完整的hexo项目</h2><p><code>hexo generate（简写：hexo g)</code></p>\n<h2 id=\"在本地运行hexo项目\"><a href=\"#在本地运行hexo项目\" class=\"headerlink\" title=\"在本地运行hexo项目\"></a>在本地运行hexo项目</h2><p><code>hexo server(简写：hexo s)</code></p>\n<blockquote>\n<p>注意：运行hexo s后出现页面打不开的情况时，先检查端口号是否被占用。hexo项目默认端口号为<strong>4000</strong>。如果电脑上安装了<strong>“福昕阅读器”</strong>，4000端口就被该软件占用了。</p>\n</blockquote>\n<h3 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法:\"></a>解决方法:</h3><p><code>hexo s -p 5000 (换个新的未使用的端口号)</code></p>\n<hr>\n<p>现在我们本地的hexo博客项目已经创建好了，看一下我们的项目结构：</p>\n<p><img src=\"/assets/images/img9.png\" alt=\"\"></p>\n<p>在浏览器上打开：<a href=\"localhost:5000\" target=\"_blank\" rel=\"noopener\">localhost:5000</a></p>\n<p>** mac上似乎端口号是4000</p>\n<p><img src=\"/assets/images/img2.png\" alt=\"\"></p>\n<p>此时项目的框架主题用的是最初默认的：<strong>landscape</strong></p>\n<p>本宝觉得这个主题实在太单调了，百度了一个比较喜欢的主题： <strong>yilia</strong></p>\n<h2 id=\"更换主题yilia\"><a href=\"#更换主题yilia\" class=\"headerlink\" title=\"更换主题yilia\"></a>更换主题yilia</h2><h3 id=\"打开yilia的Github主页\"><a href=\"#打开yilia的Github主页\" class=\"headerlink\" title=\"打开yilia的Github主页\"></a>打开<a href=\"https://github.com/litten/hexo-theme-yilia\" target=\"_blank\" rel=\"noopener\">yilia</a>的Github主页</h3><h3 id=\"安装yilia主题\"><a href=\"#安装yilia主题\" class=\"headerlink\" title=\"安装yilia主题\"></a>安装yilia主题</h3><p>在git bash命令行中进入hexo创建的项目中，如本宝的：myBlog路径</p>\n<p>执行安装命令：</p>\n<p><code>git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia</code></p>\n<h3 id=\"配置主题\"><a href=\"#配置主题\" class=\"headerlink\" title=\"配置主题\"></a>配置主题</h3><p><img src=\"/assets/images/img3.png\" alt=\"\"></p>\n<p>修改hexo根目录下的 _config.yml ： theme: yilia</p>\n<p><img src=\"/assets/images/img4.png\" alt=\"\"></p>\n<h3 id=\"更新\"><a href=\"#更新\" class=\"headerlink\" title=\"更新\"></a>更新</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd themes/yilia</span><br><span class=\"line\">git pull</span><br></pre></td></tr></table></figure>\n<p><img src=\"/assets/images/img1.png\" alt=\"\"></p>\n<p>完成后效果如下：</p>\n<p><img src=\"/assets/images/img5.png\" alt=\"\"></p>\n<p>很多自定义框架的部分，都可以在项目根目录下的——config.yml文件中修改。</p>\n<hr>\n<p>好啦，本地的博客项目已经搭建好啦，怎样把它部署到Github上用Github域名访问我们的博客呢？</p>\n<h3 id=\"创建Github账号\"><a href=\"#创建Github账号\" class=\"headerlink\" title=\"创建Github账号\"></a>创建Github账号</h3><p>这个不用我说了吧，直接去Github官网注册就好啦，以前有的就直接用咯。</p>\n<h3 id=\"创建git仓库\"><a href=\"#创建git仓库\" class=\"headerlink\" title=\"创建git仓库\"></a>创建git仓库</h3><p><img src=\"/assets/images/img6.png\" alt=\"\"></p>\n<blockquote>\n<p>注意：仓库名必须为: <strong>yourGithubUsername.github.io</strong></p>\n</blockquote>\n<p>这样可以保证自己的博客可以用： <strong><a href=\"https://yourGithubUsername.github.io/\" target=\"_blank\" rel=\"noopener\">https://yourGithubUsername.github.io/</a></strong> 直接访问</p>\n<h3 id=\"关联自己的Github账号\"><a href=\"#关联自己的Github账号\" class=\"headerlink\" title=\"关联自己的Github账号\"></a>关联自己的Github账号</h3><p>打开根目录下的_config.yml文件，翻到最下面：</p>\n<p><img src=\"/assets/images/img8.png\" alt=\"\"></p>\n<p>修改deploy配置：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: https://github.com/yourGithubUsername/yourGithubUsername.github.io.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n<h3 id=\"上传hexo博客项目\"><a href=\"#上传hexo博客项目\" class=\"headerlink\" title=\"上传hexo博客项目\"></a>上传hexo博客项目</h3><p>首先安装上传指令，在根目录下执行：</p>\n<p><code>npm install hexo-deployer-git --save（hexo 3.0版本后执行此句无BUG）</code></p>\n<p>安装成功后，执行上传命令：</p>\n<p><code>hexo deploy(简写： hexo d)</code></p>\n<h3 id=\"浏览线上效果\"><a href=\"#浏览线上效果\" class=\"headerlink\" title=\"浏览线上效果\"></a>浏览线上效果</h3><p>然后再浏览器中输入<a href=\"http://yourGithubUsername.github.io/\" target=\"_blank\" rel=\"noopener\">http://yourGithubUsername.github.io/</a>就行啦！</p>\n<hr>\n<p><strong>补充：</strong></p>\n<p>每次在本地发表文章的步骤是：</p>\n<p>发布markdown文章<br>hexo框架支持markdown文档和语法，所有博客添加在source/_post目录下：</p>\n<p><img src=\"/assets/images/img7.png\" alt=\"\"></p>\n<p>博客写好后，执行部署指令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo generate</span><br><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure>\n<h4 id=\"hexo-d报错集锦：\"><a href=\"#hexo-d报错集锦：\" class=\"headerlink\" title=\"hexo d报错集锦：\"></a>hexo d报错集锦：</h4><h5 id=\"情况一\"><a href=\"#情况一\" class=\"headerlink\" title=\"情况一\"></a>情况一</h5><p><img src=\"/assets/images/img13.png\" alt=\"\"></p>\n<p>解决方法：</p>\n<p><code>git config --global core.autocrlf false</code></p>\n","site":{"data":{}},"excerpt":"<p>作为一名前端居然没有一个自己的个人网站简直low啊，元宝工作这么久一直想有一个自己的个人网站，之前有试过Github提供的<a href=\"https://pages.github.com/\" target=\"_blank\" rel=\"noopener\">Github Page</a>创建个站，不过全部框架需要自己写，本君（最近深中“三生三世”的毒）平时工作也没有时间设计页面，所以那个网站就不了了之了。这里有一个<a href=\"https://github.com/dwqs/blog\" target=\"_blank\" rel=\"noopener\">学习 Github Page 教你分分钟搭建自己的博客</a>的教程可以参考。</p>\n<p>后来偶然间看到hexo搭配Github可以搭建一个有设计有框架的使用blog，元宝想都没想直接开始啦！特此用这篇文章记录一下完成的过程。</p>","more":"<h2 id=\"安装Node\"><a href=\"#安装Node\" class=\"headerlink\" title=\"安装Node\"></a>安装Node</h2><p>到<a href=\"http://nodejs.cn/\" target=\"_blank\" rel=\"noopener\">Node.js官网</a>下载相应平台的最新版本，一路安装即可。</p>\n<h2 id=\"安装Git-bash\"><a href=\"#安装Git-bash\" class=\"headerlink\" title=\"安装Git bash\"></a>安装Git bash</h2><p>用于把本地的hexo内容提交到github上去.</p>\n<h2 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h2><p>Node和Git bash都安装好后,本地创建一个文件夹,如myBlog,用于存放hexo的配置文件,然后进入myBlog里安装Hexo:</p>\n<p><code>npm install -g hexo</code></p>\n<h2 id=\"初始化hexo\"><a href=\"#初始化hexo\" class=\"headerlink\" title=\"初始化hexo\"></a>初始化hexo</h2><p><code>hexo init</code></p>\n<h2 id=\"利用hexo指令安装一个完整的hexo项目\"><a href=\"#利用hexo指令安装一个完整的hexo项目\" class=\"headerlink\" title=\"利用hexo指令安装一个完整的hexo项目\"></a>利用hexo指令安装一个完整的hexo项目</h2><p><code>hexo generate（简写：hexo g)</code></p>\n<h2 id=\"在本地运行hexo项目\"><a href=\"#在本地运行hexo项目\" class=\"headerlink\" title=\"在本地运行hexo项目\"></a>在本地运行hexo项目</h2><p><code>hexo server(简写：hexo s)</code></p>\n<blockquote>\n<p>注意：运行hexo s后出现页面打不开的情况时，先检查端口号是否被占用。hexo项目默认端口号为<strong>4000</strong>。如果电脑上安装了<strong>“福昕阅读器”</strong>，4000端口就被该软件占用了。</p>\n</blockquote>\n<h3 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法:\"></a>解决方法:</h3><p><code>hexo s -p 5000 (换个新的未使用的端口号)</code></p>\n<hr>\n<p>现在我们本地的hexo博客项目已经创建好了，看一下我们的项目结构：</p>\n<p><img src=\"/assets/images/img9.png\" alt=\"\"></p>\n<p>在浏览器上打开：<a href=\"localhost:5000\" target=\"_blank\" rel=\"noopener\">localhost:5000</a></p>\n<p>** mac上似乎端口号是4000</p>\n<p><img src=\"/assets/images/img2.png\" alt=\"\"></p>\n<p>此时项目的框架主题用的是最初默认的：<strong>landscape</strong></p>\n<p>本宝觉得这个主题实在太单调了，百度了一个比较喜欢的主题： <strong>yilia</strong></p>\n<h2 id=\"更换主题yilia\"><a href=\"#更换主题yilia\" class=\"headerlink\" title=\"更换主题yilia\"></a>更换主题yilia</h2><h3 id=\"打开yilia的Github主页\"><a href=\"#打开yilia的Github主页\" class=\"headerlink\" title=\"打开yilia的Github主页\"></a>打开<a href=\"https://github.com/litten/hexo-theme-yilia\" target=\"_blank\" rel=\"noopener\">yilia</a>的Github主页</h3><h3 id=\"安装yilia主题\"><a href=\"#安装yilia主题\" class=\"headerlink\" title=\"安装yilia主题\"></a>安装yilia主题</h3><p>在git bash命令行中进入hexo创建的项目中，如本宝的：myBlog路径</p>\n<p>执行安装命令：</p>\n<p><code>git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia</code></p>\n<h3 id=\"配置主题\"><a href=\"#配置主题\" class=\"headerlink\" title=\"配置主题\"></a>配置主题</h3><p><img src=\"/assets/images/img3.png\" alt=\"\"></p>\n<p>修改hexo根目录下的 _config.yml ： theme: yilia</p>\n<p><img src=\"/assets/images/img4.png\" alt=\"\"></p>\n<h3 id=\"更新\"><a href=\"#更新\" class=\"headerlink\" title=\"更新\"></a>更新</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd themes/yilia</span><br><span class=\"line\">git pull</span><br></pre></td></tr></table></figure>\n<p><img src=\"/assets/images/img1.png\" alt=\"\"></p>\n<p>完成后效果如下：</p>\n<p><img src=\"/assets/images/img5.png\" alt=\"\"></p>\n<p>很多自定义框架的部分，都可以在项目根目录下的——config.yml文件中修改。</p>\n<hr>\n<p>好啦，本地的博客项目已经搭建好啦，怎样把它部署到Github上用Github域名访问我们的博客呢？</p>\n<h3 id=\"创建Github账号\"><a href=\"#创建Github账号\" class=\"headerlink\" title=\"创建Github账号\"></a>创建Github账号</h3><p>这个不用我说了吧，直接去Github官网注册就好啦，以前有的就直接用咯。</p>\n<h3 id=\"创建git仓库\"><a href=\"#创建git仓库\" class=\"headerlink\" title=\"创建git仓库\"></a>创建git仓库</h3><p><img src=\"/assets/images/img6.png\" alt=\"\"></p>\n<blockquote>\n<p>注意：仓库名必须为: <strong>yourGithubUsername.github.io</strong></p>\n</blockquote>\n<p>这样可以保证自己的博客可以用： <strong><a href=\"https://yourGithubUsername.github.io/\" target=\"_blank\" rel=\"noopener\">https://yourGithubUsername.github.io/</a></strong> 直接访问</p>\n<h3 id=\"关联自己的Github账号\"><a href=\"#关联自己的Github账号\" class=\"headerlink\" title=\"关联自己的Github账号\"></a>关联自己的Github账号</h3><p>打开根目录下的_config.yml文件，翻到最下面：</p>\n<p><img src=\"/assets/images/img8.png\" alt=\"\"></p>\n<p>修改deploy配置：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: https://github.com/yourGithubUsername/yourGithubUsername.github.io.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n<h3 id=\"上传hexo博客项目\"><a href=\"#上传hexo博客项目\" class=\"headerlink\" title=\"上传hexo博客项目\"></a>上传hexo博客项目</h3><p>首先安装上传指令，在根目录下执行：</p>\n<p><code>npm install hexo-deployer-git --save（hexo 3.0版本后执行此句无BUG）</code></p>\n<p>安装成功后，执行上传命令：</p>\n<p><code>hexo deploy(简写： hexo d)</code></p>\n<h3 id=\"浏览线上效果\"><a href=\"#浏览线上效果\" class=\"headerlink\" title=\"浏览线上效果\"></a>浏览线上效果</h3><p>然后再浏览器中输入<a href=\"http://yourGithubUsername.github.io/\" target=\"_blank\" rel=\"noopener\">http://yourGithubUsername.github.io/</a>就行啦！</p>\n<hr>\n<p><strong>补充：</strong></p>\n<p>每次在本地发表文章的步骤是：</p>\n<p>发布markdown文章<br>hexo框架支持markdown文档和语法，所有博客添加在source/_post目录下：</p>\n<p><img src=\"/assets/images/img7.png\" alt=\"\"></p>\n<p>博客写好后，执行部署指令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo generate</span><br><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure>\n<h4 id=\"hexo-d报错集锦：\"><a href=\"#hexo-d报错集锦：\" class=\"headerlink\" title=\"hexo d报错集锦：\"></a>hexo d报错集锦：</h4><h5 id=\"情况一\"><a href=\"#情况一\" class=\"headerlink\" title=\"情况一\"></a>情况一</h5><p><img src=\"/assets/images/img13.png\" alt=\"\"></p>\n<p>解决方法：</p>\n<p><code>git config --global core.autocrlf false</code></p>"},{"title":"JS排序算法","date":"2017-02-19T16:00:00.000Z","_content":"\n### 冒泡排序\n\n```\n//冒泡排序\nfunction bubbleSort (arr){\n    for(var i=0;i<arr.length-1;i++){\n        for(var j=i+1;j<arr.length;j++){\n            if(arr[i]>arr[j]){//如果前面的数据比后面的大就交换\n                var temp=arr[i];\n                arr[i]=arr[j];\n                arr[j]=temp;\n            }\n        console.log(arr);\n        }\n    }\n    return arr;\n}\nconsole.log(\"The result is:\" + bubbleSort(arr));\n```\n\n<!-- more -->\n\n### 快速排序\n\n```\n//快速排序\nfunction quickSort (arr){\n    //如果数组长度小于等于1无需判断直接返回即可\n    if(arr.length<=1){\n        return arr;\n    }\n    var midIndex = Math.floor(arr.length / 2);\t//取基准点\n    var midIndexVal = arr.splice(midIndex, 1);\t//取基准点的值,splice(index,1)函数可以返回数组中被删除的那个数arr[index+1]\n    var left = [];\t//存放比基准点小的数组\n    var right = [];\t//存放比基准点大的数组\n    //遍历数组，进行判断分配\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] < midIndexVal){\n            left.push(arr[i]);\t//比基准点小的放在左边数组\n        }\n        else{\n            right.push(arr[i]);\t//比基准点大的放在右边数组\n        }\n        console.log(arr);\n    }\n    //递归执行以上操作,对左右两个数组进行操作，直到数组长度为<=1；\n    return quickSort(left).concat(midIndexVal,quickSort(right));\n};\nconsole.log(quickSort(arr));\n```","source":"_posts/jsOrderAlgorith.md","raw":"---\ntitle: JS排序算法\ncategory: 前端\ndate: 2017-02-20\n---\n\n### 冒泡排序\n\n```\n//冒泡排序\nfunction bubbleSort (arr){\n    for(var i=0;i<arr.length-1;i++){\n        for(var j=i+1;j<arr.length;j++){\n            if(arr[i]>arr[j]){//如果前面的数据比后面的大就交换\n                var temp=arr[i];\n                arr[i]=arr[j];\n                arr[j]=temp;\n            }\n        console.log(arr);\n        }\n    }\n    return arr;\n}\nconsole.log(\"The result is:\" + bubbleSort(arr));\n```\n\n<!-- more -->\n\n### 快速排序\n\n```\n//快速排序\nfunction quickSort (arr){\n    //如果数组长度小于等于1无需判断直接返回即可\n    if(arr.length<=1){\n        return arr;\n    }\n    var midIndex = Math.floor(arr.length / 2);\t//取基准点\n    var midIndexVal = arr.splice(midIndex, 1);\t//取基准点的值,splice(index,1)函数可以返回数组中被删除的那个数arr[index+1]\n    var left = [];\t//存放比基准点小的数组\n    var right = [];\t//存放比基准点大的数组\n    //遍历数组，进行判断分配\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] < midIndexVal){\n            left.push(arr[i]);\t//比基准点小的放在左边数组\n        }\n        else{\n            right.push(arr[i]);\t//比基准点大的放在右边数组\n        }\n        console.log(arr);\n    }\n    //递归执行以上操作,对左右两个数组进行操作，直到数组长度为<=1；\n    return quickSort(left).concat(midIndexVal,quickSort(right));\n};\nconsole.log(quickSort(arr));\n```","slug":"jsOrderAlgorith","published":1,"updated":"2018-07-19T14:04:23.070Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjjsmxqis000bem0j6l1xl8yi","content":"<h3 id=\"冒泡排序\"><a href=\"#冒泡排序\" class=\"headerlink\" title=\"冒泡排序\"></a>冒泡排序</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//冒泡排序</span><br><span class=\"line\">function bubbleSort (arr)&#123;</span><br><span class=\"line\">    for(var i=0;i&lt;arr.length-1;i++)&#123;</span><br><span class=\"line\">        for(var j=i+1;j&lt;arr.length;j++)&#123;</span><br><span class=\"line\">            if(arr[i]&gt;arr[j])&#123;//如果前面的数据比后面的大就交换</span><br><span class=\"line\">                var temp=arr[i];</span><br><span class=\"line\">                arr[i]=arr[j];</span><br><span class=\"line\">                arr[j]=temp;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        console.log(arr);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return arr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">console.log(&quot;The result is:&quot; + bubbleSort(arr));</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h3 id=\"快速排序\"><a href=\"#快速排序\" class=\"headerlink\" title=\"快速排序\"></a>快速排序</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//快速排序</span><br><span class=\"line\">function quickSort (arr)&#123;</span><br><span class=\"line\">    //如果数组长度小于等于1无需判断直接返回即可</span><br><span class=\"line\">    if(arr.length&lt;=1)&#123;</span><br><span class=\"line\">        return arr;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    var midIndex = Math.floor(arr.length / 2);\t//取基准点</span><br><span class=\"line\">    var midIndexVal = arr.splice(midIndex, 1);\t//取基准点的值,splice(index,1)函数可以返回数组中被删除的那个数arr[index+1]</span><br><span class=\"line\">    var left = [];\t//存放比基准点小的数组</span><br><span class=\"line\">    var right = [];\t//存放比基准点大的数组</span><br><span class=\"line\">    //遍历数组，进行判断分配</span><br><span class=\"line\">    for(var i = 0; i &lt; arr.length; i++)&#123;</span><br><span class=\"line\">        if(arr[i] &lt; midIndexVal)&#123;</span><br><span class=\"line\">            left.push(arr[i]);\t//比基准点小的放在左边数组</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else&#123;</span><br><span class=\"line\">            right.push(arr[i]);\t//比基准点大的放在右边数组</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        console.log(arr);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    //递归执行以上操作,对左右两个数组进行操作，直到数组长度为&lt;=1；</span><br><span class=\"line\">    return quickSort(left).concat(midIndexVal,quickSort(right));</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">console.log(quickSort(arr));</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h3 id=\"冒泡排序\"><a href=\"#冒泡排序\" class=\"headerlink\" title=\"冒泡排序\"></a>冒泡排序</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//冒泡排序</span><br><span class=\"line\">function bubbleSort (arr)&#123;</span><br><span class=\"line\">    for(var i=0;i&lt;arr.length-1;i++)&#123;</span><br><span class=\"line\">        for(var j=i+1;j&lt;arr.length;j++)&#123;</span><br><span class=\"line\">            if(arr[i]&gt;arr[j])&#123;//如果前面的数据比后面的大就交换</span><br><span class=\"line\">                var temp=arr[i];</span><br><span class=\"line\">                arr[i]=arr[j];</span><br><span class=\"line\">                arr[j]=temp;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        console.log(arr);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return arr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">console.log(&quot;The result is:&quot; + bubbleSort(arr));</span><br></pre></td></tr></table></figure>","more":"<h3 id=\"快速排序\"><a href=\"#快速排序\" class=\"headerlink\" title=\"快速排序\"></a>快速排序</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//快速排序</span><br><span class=\"line\">function quickSort (arr)&#123;</span><br><span class=\"line\">    //如果数组长度小于等于1无需判断直接返回即可</span><br><span class=\"line\">    if(arr.length&lt;=1)&#123;</span><br><span class=\"line\">        return arr;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    var midIndex = Math.floor(arr.length / 2);\t//取基准点</span><br><span class=\"line\">    var midIndexVal = arr.splice(midIndex, 1);\t//取基准点的值,splice(index,1)函数可以返回数组中被删除的那个数arr[index+1]</span><br><span class=\"line\">    var left = [];\t//存放比基准点小的数组</span><br><span class=\"line\">    var right = [];\t//存放比基准点大的数组</span><br><span class=\"line\">    //遍历数组，进行判断分配</span><br><span class=\"line\">    for(var i = 0; i &lt; arr.length; i++)&#123;</span><br><span class=\"line\">        if(arr[i] &lt; midIndexVal)&#123;</span><br><span class=\"line\">            left.push(arr[i]);\t//比基准点小的放在左边数组</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else&#123;</span><br><span class=\"line\">            right.push(arr[i]);\t//比基准点大的放在右边数组</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        console.log(arr);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    //递归执行以上操作,对左右两个数组进行操作，直到数组长度为&lt;=1；</span><br><span class=\"line\">    return quickSort(left).concat(midIndexVal,quickSort(right));</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">console.log(quickSort(arr));</span><br></pre></td></tr></table></figure>"},{"title":"使用Koa2","date":"2017-02-28T16:00:00.000Z","_content":"\n# 自定义方式\n\n## 安装koa\n\n```\nnode install -g koa(或node install koa --save)\n```\n\n<!-- more -->\n\n## 新建一个app.js文件：\n\n```\nvar koa = require('koa');\nvar app = new koa();\napp.use(function *(){\n  this.body = 'Hello World';\n});\napp.listen(3000);\nconsole.log('Koa app started at port 3000...');\n```\n\n> 其实Koa框架已经用ES6啦，这里为了好理解还是用的ES5，后面会慢慢开始用ES6。\n\n## 在控制台运行app.js:\n\n`\t\nnode app.js\n`\n\n## 运行结果：\n\n**控制台：**\n\n![](/assets/images/img4.jpg)\n\n**页面上：**\n\n![](/assets/images/img5.jpg)\n\n# 使用koa应用生成器\n\n使用Express时有express-generator，用koa时也有koa-generator。\n\n## 安装koa-generator\n\n`\nnpm install -g koa-generator（或npm install koa-generator --save）\n`\n\n然后使用koa命令创建koa 1.x项目\n\n然后使用koa2命令创建koa 2.x项目\n\n## 新建myKoa文件夹\n\n```\nmkdir myKoa\nkoa2 myKoa\ncd myKoa\nnpm install\nnpm start\n```\n\n**运行结果：**\n\n![](/assets/images/img6.jpg)\n\n![](/assets/images/img8.jpg)\n\n![](/assets/images/img9.jpg)\n\n![](/assets/images/img10.jpg)","source":"_posts/useKoa2.md","raw":"---\ntitle: 使用Koa2\ncategory: 前端\ndate: 2017-03-01\n---\n\n# 自定义方式\n\n## 安装koa\n\n```\nnode install -g koa(或node install koa --save)\n```\n\n<!-- more -->\n\n## 新建一个app.js文件：\n\n```\nvar koa = require('koa');\nvar app = new koa();\napp.use(function *(){\n  this.body = 'Hello World';\n});\napp.listen(3000);\nconsole.log('Koa app started at port 3000...');\n```\n\n> 其实Koa框架已经用ES6啦，这里为了好理解还是用的ES5，后面会慢慢开始用ES6。\n\n## 在控制台运行app.js:\n\n`\t\nnode app.js\n`\n\n## 运行结果：\n\n**控制台：**\n\n![](/assets/images/img4.jpg)\n\n**页面上：**\n\n![](/assets/images/img5.jpg)\n\n# 使用koa应用生成器\n\n使用Express时有express-generator，用koa时也有koa-generator。\n\n## 安装koa-generator\n\n`\nnpm install -g koa-generator（或npm install koa-generator --save）\n`\n\n然后使用koa命令创建koa 1.x项目\n\n然后使用koa2命令创建koa 2.x项目\n\n## 新建myKoa文件夹\n\n```\nmkdir myKoa\nkoa2 myKoa\ncd myKoa\nnpm install\nnpm start\n```\n\n**运行结果：**\n\n![](/assets/images/img6.jpg)\n\n![](/assets/images/img8.jpg)\n\n![](/assets/images/img9.jpg)\n\n![](/assets/images/img10.jpg)","slug":"useKoa2","published":1,"updated":"2018-07-19T14:04:23.070Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjjsmxqiv000dem0jbz02ko22","content":"<h1 id=\"自定义方式\"><a href=\"#自定义方式\" class=\"headerlink\" title=\"自定义方式\"></a>自定义方式</h1><h2 id=\"安装koa\"><a href=\"#安装koa\" class=\"headerlink\" title=\"安装koa\"></a>安装koa</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node install -g koa(或node install koa --save)</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h2 id=\"新建一个app-js文件：\"><a href=\"#新建一个app-js文件：\" class=\"headerlink\" title=\"新建一个app.js文件：\"></a>新建一个app.js文件：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var koa = require(&apos;koa&apos;);</span><br><span class=\"line\">var app = new koa();</span><br><span class=\"line\">app.use(function *()&#123;</span><br><span class=\"line\">  this.body = &apos;Hello World&apos;;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">app.listen(3000);</span><br><span class=\"line\">console.log(&apos;Koa app started at port 3000...&apos;);</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>其实Koa框架已经用ES6啦，这里为了好理解还是用的ES5，后面会慢慢开始用ES6。</p>\n</blockquote>\n<h2 id=\"在控制台运行app-js\"><a href=\"#在控制台运行app-js\" class=\"headerlink\" title=\"在控制台运行app.js:\"></a>在控制台运行app.js:</h2><p><code>node app.js</code></p>\n<h2 id=\"运行结果：\"><a href=\"#运行结果：\" class=\"headerlink\" title=\"运行结果：\"></a>运行结果：</h2><p><strong>控制台：</strong></p>\n<p><img src=\"/assets/images/img4.jpg\" alt=\"\"></p>\n<p><strong>页面上：</strong></p>\n<p><img src=\"/assets/images/img5.jpg\" alt=\"\"></p>\n<h1 id=\"使用koa应用生成器\"><a href=\"#使用koa应用生成器\" class=\"headerlink\" title=\"使用koa应用生成器\"></a>使用koa应用生成器</h1><p>使用Express时有express-generator，用koa时也有koa-generator。</p>\n<h2 id=\"安装koa-generator\"><a href=\"#安装koa-generator\" class=\"headerlink\" title=\"安装koa-generator\"></a>安装koa-generator</h2><p><code>npm install -g koa-generator（或npm install koa-generator --save）</code></p>\n<p>然后使用koa命令创建koa 1.x项目</p>\n<p>然后使用koa2命令创建koa 2.x项目</p>\n<h2 id=\"新建myKoa文件夹\"><a href=\"#新建myKoa文件夹\" class=\"headerlink\" title=\"新建myKoa文件夹\"></a>新建myKoa文件夹</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir myKoa</span><br><span class=\"line\">koa2 myKoa</span><br><span class=\"line\">cd myKoa</span><br><span class=\"line\">npm install</span><br><span class=\"line\">npm start</span><br></pre></td></tr></table></figure>\n<p><strong>运行结果：</strong></p>\n<p><img src=\"/assets/images/img6.jpg\" alt=\"\"></p>\n<p><img src=\"/assets/images/img8.jpg\" alt=\"\"></p>\n<p><img src=\"/assets/images/img9.jpg\" alt=\"\"></p>\n<p><img src=\"/assets/images/img10.jpg\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"自定义方式\"><a href=\"#自定义方式\" class=\"headerlink\" title=\"自定义方式\"></a>自定义方式</h1><h2 id=\"安装koa\"><a href=\"#安装koa\" class=\"headerlink\" title=\"安装koa\"></a>安装koa</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node install -g koa(或node install koa --save)</span><br></pre></td></tr></table></figure>","more":"<h2 id=\"新建一个app-js文件：\"><a href=\"#新建一个app-js文件：\" class=\"headerlink\" title=\"新建一个app.js文件：\"></a>新建一个app.js文件：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var koa = require(&apos;koa&apos;);</span><br><span class=\"line\">var app = new koa();</span><br><span class=\"line\">app.use(function *()&#123;</span><br><span class=\"line\">  this.body = &apos;Hello World&apos;;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">app.listen(3000);</span><br><span class=\"line\">console.log(&apos;Koa app started at port 3000...&apos;);</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>其实Koa框架已经用ES6啦，这里为了好理解还是用的ES5，后面会慢慢开始用ES6。</p>\n</blockquote>\n<h2 id=\"在控制台运行app-js\"><a href=\"#在控制台运行app-js\" class=\"headerlink\" title=\"在控制台运行app.js:\"></a>在控制台运行app.js:</h2><p><code>node app.js</code></p>\n<h2 id=\"运行结果：\"><a href=\"#运行结果：\" class=\"headerlink\" title=\"运行结果：\"></a>运行结果：</h2><p><strong>控制台：</strong></p>\n<p><img src=\"/assets/images/img4.jpg\" alt=\"\"></p>\n<p><strong>页面上：</strong></p>\n<p><img src=\"/assets/images/img5.jpg\" alt=\"\"></p>\n<h1 id=\"使用koa应用生成器\"><a href=\"#使用koa应用生成器\" class=\"headerlink\" title=\"使用koa应用生成器\"></a>使用koa应用生成器</h1><p>使用Express时有express-generator，用koa时也有koa-generator。</p>\n<h2 id=\"安装koa-generator\"><a href=\"#安装koa-generator\" class=\"headerlink\" title=\"安装koa-generator\"></a>安装koa-generator</h2><p><code>npm install -g koa-generator（或npm install koa-generator --save）</code></p>\n<p>然后使用koa命令创建koa 1.x项目</p>\n<p>然后使用koa2命令创建koa 2.x项目</p>\n<h2 id=\"新建myKoa文件夹\"><a href=\"#新建myKoa文件夹\" class=\"headerlink\" title=\"新建myKoa文件夹\"></a>新建myKoa文件夹</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir myKoa</span><br><span class=\"line\">koa2 myKoa</span><br><span class=\"line\">cd myKoa</span><br><span class=\"line\">npm install</span><br><span class=\"line\">npm start</span><br></pre></td></tr></table></figure>\n<p><strong>运行结果：</strong></p>\n<p><img src=\"/assets/images/img6.jpg\" alt=\"\"></p>\n<p><img src=\"/assets/images/img8.jpg\" alt=\"\"></p>\n<p><img src=\"/assets/images/img9.jpg\" alt=\"\"></p>\n<p><img src=\"/assets/images/img10.jpg\" alt=\"\"></p>"},{"title":"解决vue在build之后css中image路径错误问题","date":"2017-05-31T16:00:00.000Z","_content":"\n在vue的conponents中，我们经常需要写style scoped，但是不知道你们有木有遇到过需要写background-image的时候，一般大家都把image资源放在哪儿呢？\n\n在npm run dev，开发状态，无论image放在/src中，还是/src/assets中、或者在/static中，在components中都是可以引用到的~ 一如vue-cli的API文档中写的：\n\n<!-- more -->\n\n*   相对路径 ./assets/logo.png 被视为模块依赖\n*   无前缀 assets/logo.png 被视为相对路径\n*   使用 ~ 被视为 require('some-module/image.png')\n\n![](/assets/images/img28.jpg)\n\n[具体可参考vue-cli API](https://ajimide.gitbooks.io/key-vue-cli-webpack/5.%20Handing%20Static%20Assets.html)\n\n但是，当我们npm run build把项目打包，准备放到服务器上跟后台联调的时候，有木有发现，你直接打开/dist目录下的index.html页面是空白的，或者background-image都没有显示？\n\n这里，还是上面vue-cli的url-loader打包工具出了问题。\n\n元宝君现在也没有找到最佳的解决方案，暂时可以用下面这种方法解决：\n\n1.  首先，把css/images/js资源放到assets中：\n\n![](/assets/images/img29.jpg)\n\n1.  第二步，安装anywhere\n> Anywhere 是一个基于node.js的静态文件服务器工具，主要使用了express提供的两个中间件：serve-index和serve-static。具有使用简单快速、安装方便的优点，大多数场景下使用apache的静态文件服务器非常的臃肿，诸多特性用不到，配置复杂。而一些基于node.js的静态文件服务器大都配置简单甚至无需配置，方便在一些小的场景下使用。\n\n`\nnpm install anywhere -g\n`\n\n1.  进入项目中的dist目录下，运行：\n\n`\nanywhere -s\n`\n> anywhere //不带任何参数，使用默认的8000端口，当前路径作为静态文件服务器根路径\n> anywhere 8888 //使用8888端口\n> anywhere -p 8989 //使用8989端口\n> anywhere -s //启动后是否打开浏览器\n> anywhere -h localhost //指定主机名（ip地址）\n> anywhere -d /home //指定静态文件服务器根路径为/home\n\n此时，在浏览器上打开localhost:8000页面就可以看到完整的打包好的项目啦！\n\n1.  补充一个方法：\n\n![](/assets/images/img30.jpg)","source":"_posts/vuestaticURLerror.md","raw":"---\ntitle: 解决vue在build之后css中image路径错误问题\ncategory: 前端\ndate: 2017-06-01\n---\n\n在vue的conponents中，我们经常需要写style scoped，但是不知道你们有木有遇到过需要写background-image的时候，一般大家都把image资源放在哪儿呢？\n\n在npm run dev，开发状态，无论image放在/src中，还是/src/assets中、或者在/static中，在components中都是可以引用到的~ 一如vue-cli的API文档中写的：\n\n<!-- more -->\n\n*   相对路径 ./assets/logo.png 被视为模块依赖\n*   无前缀 assets/logo.png 被视为相对路径\n*   使用 ~ 被视为 require('some-module/image.png')\n\n![](/assets/images/img28.jpg)\n\n[具体可参考vue-cli API](https://ajimide.gitbooks.io/key-vue-cli-webpack/5.%20Handing%20Static%20Assets.html)\n\n但是，当我们npm run build把项目打包，准备放到服务器上跟后台联调的时候，有木有发现，你直接打开/dist目录下的index.html页面是空白的，或者background-image都没有显示？\n\n这里，还是上面vue-cli的url-loader打包工具出了问题。\n\n元宝君现在也没有找到最佳的解决方案，暂时可以用下面这种方法解决：\n\n1.  首先，把css/images/js资源放到assets中：\n\n![](/assets/images/img29.jpg)\n\n1.  第二步，安装anywhere\n> Anywhere 是一个基于node.js的静态文件服务器工具，主要使用了express提供的两个中间件：serve-index和serve-static。具有使用简单快速、安装方便的优点，大多数场景下使用apache的静态文件服务器非常的臃肿，诸多特性用不到，配置复杂。而一些基于node.js的静态文件服务器大都配置简单甚至无需配置，方便在一些小的场景下使用。\n\n`\nnpm install anywhere -g\n`\n\n1.  进入项目中的dist目录下，运行：\n\n`\nanywhere -s\n`\n> anywhere //不带任何参数，使用默认的8000端口，当前路径作为静态文件服务器根路径\n> anywhere 8888 //使用8888端口\n> anywhere -p 8989 //使用8989端口\n> anywhere -s //启动后是否打开浏览器\n> anywhere -h localhost //指定主机名（ip地址）\n> anywhere -d /home //指定静态文件服务器根路径为/home\n\n此时，在浏览器上打开localhost:8000页面就可以看到完整的打包好的项目啦！\n\n1.  补充一个方法：\n\n![](/assets/images/img30.jpg)","slug":"vuestaticURLerror","published":1,"updated":"2018-07-19T14:04:23.071Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjjsmxqiy000fem0jrj3ec17u","content":"<p>在vue的conponents中，我们经常需要写style scoped，但是不知道你们有木有遇到过需要写background-image的时候，一般大家都把image资源放在哪儿呢？</p>\n<p>在npm run dev，开发状态，无论image放在/src中，还是/src/assets中、或者在/static中，在components中都是可以引用到的~ 一如vue-cli的API文档中写的：</p>\n<a id=\"more\"></a>\n<ul>\n<li>相对路径 ./assets/logo.png 被视为模块依赖</li>\n<li>无前缀 assets/logo.png 被视为相对路径</li>\n<li>使用 ~ 被视为 require(‘some-module/image.png’)</li>\n</ul>\n<p><img src=\"/assets/images/img28.jpg\" alt=\"\"></p>\n<p><a href=\"https://ajimide.gitbooks.io/key-vue-cli-webpack/5.%20Handing%20Static%20Assets.html\" target=\"_blank\" rel=\"noopener\">具体可参考vue-cli API</a></p>\n<p>但是，当我们npm run build把项目打包，准备放到服务器上跟后台联调的时候，有木有发现，你直接打开/dist目录下的index.html页面是空白的，或者background-image都没有显示？</p>\n<p>这里，还是上面vue-cli的url-loader打包工具出了问题。</p>\n<p>元宝君现在也没有找到最佳的解决方案，暂时可以用下面这种方法解决：</p>\n<ol>\n<li>首先，把css/images/js资源放到assets中：</li>\n</ol>\n<p><img src=\"/assets/images/img29.jpg\" alt=\"\"></p>\n<ol>\n<li>第二步，安装anywhere<blockquote>\n<p>Anywhere 是一个基于node.js的静态文件服务器工具，主要使用了express提供的两个中间件：serve-index和serve-static。具有使用简单快速、安装方便的优点，大多数场景下使用apache的静态文件服务器非常的臃肿，诸多特性用不到，配置复杂。而一些基于node.js的静态文件服务器大都配置简单甚至无需配置，方便在一些小的场景下使用。</p>\n</blockquote>\n</li>\n</ol>\n<p><code>npm install anywhere -g</code></p>\n<ol>\n<li>进入项目中的dist目录下，运行：</li>\n</ol>\n<p><code>anywhere -s</code></p>\n<blockquote>\n<p>anywhere //不带任何参数，使用默认的8000端口，当前路径作为静态文件服务器根路径<br>anywhere 8888 //使用8888端口<br>anywhere -p 8989 //使用8989端口<br>anywhere -s //启动后是否打开浏览器<br>anywhere -h localhost //指定主机名（ip地址）<br>anywhere -d /home //指定静态文件服务器根路径为/home</p>\n</blockquote>\n<p>此时，在浏览器上打开localhost:8000页面就可以看到完整的打包好的项目啦！</p>\n<ol>\n<li>补充一个方法：</li>\n</ol>\n<p><img src=\"/assets/images/img30.jpg\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<p>在vue的conponents中，我们经常需要写style scoped，但是不知道你们有木有遇到过需要写background-image的时候，一般大家都把image资源放在哪儿呢？</p>\n<p>在npm run dev，开发状态，无论image放在/src中，还是/src/assets中、或者在/static中，在components中都是可以引用到的~ 一如vue-cli的API文档中写的：</p>","more":"<ul>\n<li>相对路径 ./assets/logo.png 被视为模块依赖</li>\n<li>无前缀 assets/logo.png 被视为相对路径</li>\n<li>使用 ~ 被视为 require(‘some-module/image.png’)</li>\n</ul>\n<p><img src=\"/assets/images/img28.jpg\" alt=\"\"></p>\n<p><a href=\"https://ajimide.gitbooks.io/key-vue-cli-webpack/5.%20Handing%20Static%20Assets.html\" target=\"_blank\" rel=\"noopener\">具体可参考vue-cli API</a></p>\n<p>但是，当我们npm run build把项目打包，准备放到服务器上跟后台联调的时候，有木有发现，你直接打开/dist目录下的index.html页面是空白的，或者background-image都没有显示？</p>\n<p>这里，还是上面vue-cli的url-loader打包工具出了问题。</p>\n<p>元宝君现在也没有找到最佳的解决方案，暂时可以用下面这种方法解决：</p>\n<ol>\n<li>首先，把css/images/js资源放到assets中：</li>\n</ol>\n<p><img src=\"/assets/images/img29.jpg\" alt=\"\"></p>\n<ol>\n<li>第二步，安装anywhere<blockquote>\n<p>Anywhere 是一个基于node.js的静态文件服务器工具，主要使用了express提供的两个中间件：serve-index和serve-static。具有使用简单快速、安装方便的优点，大多数场景下使用apache的静态文件服务器非常的臃肿，诸多特性用不到，配置复杂。而一些基于node.js的静态文件服务器大都配置简单甚至无需配置，方便在一些小的场景下使用。</p>\n</blockquote>\n</li>\n</ol>\n<p><code>npm install anywhere -g</code></p>\n<ol>\n<li>进入项目中的dist目录下，运行：</li>\n</ol>\n<p><code>anywhere -s</code></p>\n<blockquote>\n<p>anywhere //不带任何参数，使用默认的8000端口，当前路径作为静态文件服务器根路径<br>anywhere 8888 //使用8888端口<br>anywhere -p 8989 //使用8989端口<br>anywhere -s //启动后是否打开浏览器<br>anywhere -h localhost //指定主机名（ip地址）<br>anywhere -d /home //指定静态文件服务器根路径为/home</p>\n</blockquote>\n<p>此时，在浏览器上打开localhost:8000页面就可以看到完整的打包好的项目啦！</p>\n<ol>\n<li>补充一个方法：</li>\n</ol>\n<p><img src=\"/assets/images/img30.jpg\" alt=\"\"></p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjjsmxqil0004em0j3vxbp7ec","category_id":"cjjsmxqih0002em0jlrzrg8ol","_id":"cjjsmxqir0009em0jp9ckri89"},{"post_id":"cjjsmxqib0000em0j4h8qmz4m","category_id":"cjjsmxqih0002em0jlrzrg8ol","_id":"cjjsmxqit000cem0jnicpp7gc"},{"post_id":"cjjsmxqim0005em0j1g5b6klf","category_id":"cjjsmxqih0002em0jlrzrg8ol","_id":"cjjsmxqix000eem0jfeefmste"},{"post_id":"cjjsmxqip0007em0jnajk329c","category_id":"cjjsmxqih0002em0jlrzrg8ol","_id":"cjjsmxqj0000gem0jrwmhgwub"},{"post_id":"cjjsmxqif0001em0jsq9kmjyw","category_id":"cjjsmxqih0002em0jlrzrg8ol","_id":"cjjsmxqj1000hem0jostf7awe"},{"post_id":"cjjsmxqiq0008em0jng1xqd10","category_id":"cjjsmxqih0002em0jlrzrg8ol","_id":"cjjsmxqj3000iem0jagn9pafe"},{"post_id":"cjjsmxqis000bem0j6l1xl8yi","category_id":"cjjsmxqih0002em0jlrzrg8ol","_id":"cjjsmxqj3000jem0jdurnui12"},{"post_id":"cjjsmxqij0003em0jkxp7r8eo","category_id":"cjjsmxqir000aem0j8jqs381e","_id":"cjjsmxqj4000kem0jxnzr1h1f"},{"post_id":"cjjsmxqiv000dem0jbz02ko22","category_id":"cjjsmxqih0002em0jlrzrg8ol","_id":"cjjsmxqj4000lem0jzbtai5uu"},{"post_id":"cjjsmxqiy000fem0jrj3ec17u","category_id":"cjjsmxqih0002em0jlrzrg8ol","_id":"cjjsmxqj4000mem0jj3zhhq0p"}],"PostTag":[],"Tag":[]}}